<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Gmagon Software Official Website - Fast, simple &amp; powerful solutions for everyone.</title>
  <subtitle>Gmagon Software Official Website - Fast, simple &amp; powerful solutions for everyone and more. Visit the site to learn, buy, and get support.</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://gmagon.com/"/>
  <updated>2017-06-28T10:01:53.444Z</updated>
  <id>https://gmagon.com/</id>
  
  <author>
    <name>Gmagon Inc</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Repetition, Pattern, and Rhythm</title>
    <link href="https://gmagon.com/blog/2017/06/28/repetition-pattern-and-rhythm/"/>
    <id>https://gmagon.com/blog/2017/06/28/repetition-pattern-and-rhythm/</id>
    <published>2017-06-28T00:00:00.000Z</published>
    <updated>2017-06-28T10:01:53.444Z</updated>
    
    <content type="html"><![CDATA[<p>Let’s look at three subjects that, at first glance, may strike you as being incredibly basic and self-explanatory. However, although they mayseemlike they should need no introduction, we should study them. By understanding these concepts, you’ll be able to apply them more effectively to captivate your users’ attention while making your designs more effective.</p>
<p>Say “repetition” and you might think about someone who says the same thing over and over again. However, it’s different indesign. Repeating things does not have to be boring! In fact, it canempowera design when used in the right way. It can also ensure that messages are better understood. As designers, we have threerepetition methods:<strong>repetition</strong>,<strong>patterns</strong>, and<strong>rhythm</strong>.</p>
<h2 id="Repetition"><a href="#Repetition" class="headerlink" title="Repetition"></a>Repetition</h2><p>Repetition is simply repeating a single element many times in a design. For example, you could draw aline horizontally and then draw several others next to it.</p>
<p><img src="http://img2.tuicool.com/qyeMfyB.jpg!web" alt=""></p>
<p>Repetition can be useful in web and app design. For example, you’d expect the logo of a business to be repeated on every page and in the same place. Menu items are also often repeated in the same place on a page. This helps provide a consistentuser experience. By repeatingelements, we as designers not onlydeliver according to our users’expectations in this way, but we also improve their experience. Our being consistent makes the users more comfortable. Remember that the eye works in a certain way by default. Using repetition to keep the eye familiar with our design’s elements means we’re taking advantage of this tendency. We can also use shapes, colors, textures, fonts, etc. to maintain this consistency via repetition.</p>
<p>You can also achieve repetition by using repeated messages. If you want your customers to know that you’re the cheapest or the fastest in the business, you’ll want to tell them that on more than one occasion if you want the message to stick. In this instance, we use repetition forreinforcement. You may rememberlearning your times tables by repeating them until you drummed them into your mind. The principle here is the same. We retain information better the more often we encounter it and internalize it.</p>
<h2 id="Pattern"><a href="#Pattern" class="headerlink" title="Pattern"></a>Pattern</h2><p>Patterns are simply a repetition of more tan one design element working in concert with each other. Aseamless patternis one where every element within a design (no matter how often it’s repeated) combines to form a whole. This is most common in backgrounds on web and app pages. It’s also popular in carpet and wallpaper design. Look around you: your bed cover, wall, notebook cover. If you see a seamless pattern, look at it closely. Do you see how the elements (circles, spirals, cones, pineapples, etc.) appear again and again in the same way? Sometimes, they touch; sometimes, they have space between them.</p>
<p><img src="http://img0.tuicool.com/qYzEJfu.jpg!web" alt=""></p>
<p>Author/Copyright holder: Dirk Stoop. Copyright terms and licence: CC BY-NC 2.0</p>
<p>As you might expect, designers base most patterns on colors, textures and shapes, rather than words. We can recognize shapes far more quickly than words, which we have to read, no matter how quickly. You can find such patterns in architecture, too. Architects tend to include a unifying motif on the inside and outside of buildings to enhance the aesthetic appeal. This is nothing new. Think of ancient Greek buildings such as the Parthenon. Ancient designers could be ingenious in their use of patterns of such elements as lines and spirals.</p>
<p>When you consider using patterns in your web or app design, you’ll want to think about the pattern’s complexity. While it might seem like a nice idea to tile a single image as a background, this can make it much harder to read the text that lies over the pattern. If you want tocreate a design for a site that deals with travel to Greece, you could use the top of an ancient column for your design. At first, it looks great; you’ve got a beautiful design that features circles and grape leaves.</p>
<p>However, you still have to add text. So, writing over this, you soon notice a problem. The dark writing sometimes falls over the image’s dark lines. You could use brighter text, such as white or yellow, but you’ll find that the gray stone makes it hard to read, too.You’rehaving trouble reading it, and so will your users. They want to engage with your design, not work to try and read text.Simplicity andsubtlety are key considerations if you want to maintain the user experience, keeping usersonyour page.</p>
<h2 id="Rhythm"><a href="#Rhythm" class="headerlink" title="Rhythm"></a>Rhythm</h2><p>When you repeat elements, the intervals between those repetitions can create a sense of rhythm in the viewer and a sense ofmovement. Musicians create rhythm in the spacing between notes, effectively making these “silent” gapsplay offthe notes. Designers insert spacing between elements to makerhythm. There are, broadly speaking, five types of visual rhythm.</p>
<p><img src="http://img2.tuicool.com/AfeAVnA.jpg!web" alt=""></p>
<p>Author/Copyright holder: Eden-Lys. Copyright terms and licence: CC BY-NC-ND 2.0</p>
<p><strong>Random rhythm</strong>–Repeating elements with nospecific regular interval creates random rhythms. The spacing could be a millimeter here, a centimeter there, while the elements could be all over the place. Think of falling snow, pebbles on a beach, traffic movements: they are all examples of random rhythms in action.</p>
<p>It’s also worth noting that a rhythm mayappearrandom if you examine asmall section of the rhythm. However, if you step back and examine a larger section, it may be that there is a regular but complex rhythm applied to the design. Remember that you have positive and negative images, which you can use so that both the elements and the spaces between them make your design hard to “predict”. By using a larger series of elements, you’ll have virtually limitless possibilities toplay with. The artist René Magritte made particularly interesting use of random rhythm.</p>
<p><strong>Regular rhythm</strong>–Like the beating of aheart, the regular rhythm follows the same intervals over and over again. You can easily make a regular rhythm just by creating a grid or a series of vertical lines. The user’s eye will instantly recognize a regular rhythm, scanning it for any irregularities in the process. Remember, the eye “likes” to be drawn to outstanding elements. Therefore, there is a risk that when you’re using a regular rhythm in a design that it can become monotonous (like the dripping of a tap).</p>
<p><strong>Alternating rhythm</strong>–You can repeat more than one element in a design. In an alternating design, you use a 1-2-1-2-1-2 pattern. Think of the black and white squares on a chessboard: that’s an alternating rhythm in play. An alternating rhythm is, in fact, a regular rhythm with more complexity. It could be as straightforward as our chessboard, or we could envision something more intricate. Some fantastic alternating rhythms include rows of fish, birds, or other animals. Taking fish as an example, we can see that each identical fish is following another. Below, the sequence is repeated; however, thenegative space betweenthe rows shows fish of theothercolor (which we take to be the background) swimming the other way, the fine lines of their fins and tails interlocking with those of the first pattern of fish. M.C. Escher’sLizard(1942) is another great example of this, incorporating three colors of lizards with a pair of lizards of each color facing away from each other, tail to tail. As simple or complex as we want to make an alternating rhythm, it can be an easy way to break up the monotony of a regular rhythm.</p>
<p><strong>Flowing rhythm</strong>–A flowing rhythm shows the repeated elements following bends, curves, and undulations. In nature, you can see this in the waves on a beach or sand dunes. As designers, we can mimic nature by making wonderful patterns of elements with flowing rhythm. We can show clumps of seaweed underwater, their strands gently facing in a series of directions. The user imagines them washing against each other.</p>
<p><strong>Progressive rhythm</strong>–We can make a progressive rhythm simply by changing one characteristic of a motif as we repeat it. We could draw a series of circles, one above the other, making each lower one larger. Do you see how the largest one at the bottom looks like it’s closest to you? We can make a progressive rhythm change subtly or dramatically. You could add shade to the smaller circles progressively so that the smallest one at the top is dark, the middle one in partial shade, and the biggest one only slightly shaded. Progressive rhythms surround us. If you were tovideo someone dancing and then examine that video frame-by-frame, you would have a progressive rhythm.</p>
<h2 id="Designing-with-Repetition-Pattern-and-Rhythm"><a href="#Designing-with-Repetition-Pattern-and-Rhythm" class="headerlink" title="Designing with Repetition, Pattern, and Rhythm"></a>Designing with Repetition, Pattern, and Rhythm</h2><p>The use of repeated visual elements is a technique designers commonly employ inweb design. You can repeat design elements, for example, to provide a consistent visual experience. It will make it easier for users to focus on the content because they know where they can find specific types of content ornavigation options.</p>
<p>You can also use repetition to draw attention to a particular area of content or design. You can use it to show relationships between content blocks, too.</p>
<p>Also, you can use patterns for backgrounds to addtexture and consistency, and you can deploy them to deliver consistency between pages of the same type.</p>
<p>As designers, we can use rhythm to create excitement (building gradually over time) or reassurance (a heartbeat might be perfect on a page aimed at expectant mothers, for example). Or, we can use it to influence otheremotions.</p>
<h2 id="The-Take-Away"><a href="#The-Take-Away" class="headerlink" title="The Take Away"></a>The Take Away</h2><p>As a designer, you have three types of repetition:</p>
<ul>
<li>Repetition</li>
<li>Patterns</li>
<li>Rhythm</li>
</ul>
<p>You can use these toshape the user experience of your web or app. Through repetition,patterns, or rhythm, you set “the mood” of theuser interface and use these elements to either reinforce your message and/or create the look and feel of your product.</p>
<p>Repetition is the simplest element you can use. Pattern is a combination of elements that are repeated. Rhythm involves using intervals or spaces between elements to give the user an impression of rhythm or movement. We can use five types of rhythm:</p>
<ul>
<li>Random Rhythm</li>
<li>Regular Rhythm</li>
<li>Alternating Rhythm</li>
<li>Flowing Rhythm</li>
<li>Progressive Rhythm</li>
</ul>
<p>There is also another conception of pattern that comes from architect Christopher Alexander. We will examine that in a later article. Rhythm, like in music, helps build a cadence in your design, engaging your users with all sorts of interesting variations. With some thought, you can maximize the impact of your message by working the right rhythm into your design.</p>
<h2 id="References-amp-Where-to-Learn-More"><a href="#References-amp-Where-to-Learn-More" class="headerlink" title="References &amp; Where to Learn More"></a>References &amp; Where to Learn More</h2><ul>
<li>Hero Image: Author/Copyright holder: Jonas Bengtsson. Copyright terms and licence: CC BY 2.0</li>
<li>Design in Art: Repetition, Pattern, and Rhythm.<br>Sophia Learning.<br>Retrieved from: <a href="http://www.sophia.org/tutorials/design-in-art-repetition-pattern-and-rhythm" target="_blank" rel="external">http://www.sophia.org/tutorials/design-in-art-repetition-pattern-and-rhythm</a>. [2014, Aug]</li>
<li>Swinburne. BasicDesign Principles. Retrieved from: <a href="http://www.swinburne.edu.au/design/tutorials/design/design/\#four" target="_blank" rel="external">http://www.swinburne.edu.au/design/tutorials/design/design/\#four</a>. [2014 Aug]</li>
</ul>
<p>Source: <a href="http://www.tuicool.com/articles/hit/QfAJN3N" target="_blank" rel="external">https://www.interaction-design.org/literature/article/repetition-pattern-and-rhythm</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Let’s look at three subjects that, at first glance, may strike you as being incredibly basic and self-explanatory. However, although they
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>pnpm version 1 is out!</title>
    <link href="https://gmagon.com/blog/2017/06/28/pnpm-version-1-is-out/"/>
    <id>https://gmagon.com/blog/2017/06/28/pnpm-version-1-is-out/</id>
    <published>2017-06-28T00:00:00.000Z</published>
    <updated>2017-06-28T10:01:53.439Z</updated>
    
    <content type="html"><![CDATA[<h2 id="pnpm-version-1-is-out"><a href="#pnpm-version-1-is-out" class="headerlink" title="_pnpm_version 1 is out!"></a>_pnpm_version 1 is out!</h2><p>Today we’re excited to announce the release of<a href="https://github.com/pnpm/pnpm" target="_blank" rel="external">pnpm</a>1!</p>
<p>Why only now? The initial commit to pnpm was made byRico Sta. Cruz on<a href="https://github.com/pnpm/pnpm/commit/4b42e5fcc402310d028ac54ba8fe979f7c4470af" target="_blank" rel="external">Jan 27, 2016</a>. It was based on the ideas of<a href="https://github.com/alexanderGugel/ied" target="_blank" rel="external">ied</a>by<a href="https://twitter.com/alexanderGugel" target="_blank" rel="external">Alexander Gugel</a>with initial commit on<a href="https://github.com/alexanderGugel/ied/commit/d8bae2d63750030b019e9653ce9ea71de93be5c7" target="_blank" rel="external">Aug 6, 2015</a>!</p>
<p>Unlike<em>Yarn</em>, which has decided to use the same<strong>node_modules</strong>structure that_npm_creates,_pnpm_uses a completely new approach (about which you can read more inthis article). It was_really_hard to make a symlinked<strong>node_modules</strong>structure work with most of the existing npm packages! All the different problems that we have encountered and the dozens of breaking changes we had to make, deserves a post of its own. Finally, almost 2 years since the idea of a symlinked<strong>node_modules</strong>structure has born, we can tell with confidence: it is possible and<strong>it does work</strong>.</p>
<h3 id="So-what-does-version-1-mean"><a href="#So-what-does-version-1-mean" class="headerlink" title="So what does version 1 mean?"></a>So what does version 1 mean?</h3><p>Version 1 means that:</p>
<ul>
<li>The<br><a href="https://github.com/pnpm/pnpm/blob/master/docs/about-the-package-store.md" target="_blank" rel="external">store structure</a><br>that pnpm uses since<br><a href="https://github.com/pnpm/pnpm/releases/tag/v0.70.0" target="_blank" rel="external">version 0.70</a><br>is reliable enough and we are confident that there will be no need in breaking changes in its structure.</li>
<li><p><a href="https://github.com/pnpm/pnpm/blob/master/docs/symlinked-node-modules-structure.md" target="_blank" rel="external">The<strong>node_modules</strong>layout</a><br>that pnpm creates works with most of the ecosystem.</p>
<p><em>pnpm@1</em><br>also ships with an experimental<br><strong>node_modules</strong><br>layout that can be turned on with the<br><a href="https://github.com/pnpm/pnpm#independent-leaves" target="_blank" rel="external">independent-leaves</a><br>config. The experimental layout boosts installation speed by 8% and works almost with all projects. However, we were not confident enough to make it the default yet.</p>
</li>
<li>The format of the<br><strong>shrinkwrap.yaml</strong><br>file, which is pnpm’s lockfile, is good enough for being committed to VCS.</li>
<li>When possible,<br><em>pnpm@1</em><br>works the way<br><em>npm@5</em><br>does.</li>
</ul>
<p>You can rely on these things and they won’t get breaking changes in version 1.</p>
<h3 id="What’s-next"><a href="#What’s-next" class="headerlink" title="What’s next?"></a>What’s next?</h3><p>Even faster!The goal is to make installations<em>subsecond fast</em>. So fast that it would run on every Git operation. Maybe one day it would be even integrated to Git?!</p>
<p>As of now, pnpm is faster than Yarn when installing with cold cache but may be a bit slower in different scenarios. For a detailed comparison of npm/pnpm/Yarn speed, see “<a href="https://intoli.com/blog/node-package-manager-benchmarks/" target="_blank" rel="external">Why I still don’t use Yarn</a>”. However, there is no reason for pnpm to be slower than Yarn or npm. So we’ll have to find the issues and make pnpm faster.</p>
<p>Simpler codebase.pnpm is currently very hard to contribute to, so it will have to be split into separate packages. The first step will probably be separation of the installation engine.</p>
<p>PR.Although pnpm is public for a longer period of time than Yarn, it is far less popular. So more articles, more documentation, and more interesting tools will be created to promote pnpm. Let’s make our<a href="https://github.com/pnpm/awesome-pnpm" target="_blank" rel="external">awesome list</a>huge!</p>
<h3 id="Try-it"><a href="#Try-it" class="headerlink" title="Try it"></a>Try it</h3><p>Just install pnpm via npm:<code>npm install -g pnpm</code>. And use it instead of npm whenever you want to install something:<code>pnpm i foo</code>.</p>
<p>Also, you can read more info at the<a href="https://github.com/pnpm/pnpm" target="_blank" rel="external">pnpm GitHub repo</a>. You can follow<a href="https://twitter.com/pnpmjs" target="_blank" rel="external">pnpm on Twitter</a>or ask for help at the<a href="https://gitter.im/pnpm/pnpm" target="_blank" rel="external">pnpm Gitter Chat Room</a>.</p>
<p>Source: <a href="http://www.tuicool.com/articles/hit/euQnUn7" target="_blank" rel="external">https://medium.com/pnpm/pnpm-version-1-is-out-935a07af914</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;pnpm-version-1-is-out&quot;&gt;&lt;a href=&quot;#pnpm-version-1-is-out&quot; class=&quot;headerlink&quot; title=&quot;_pnpm_version 1 is out!&quot;&gt;&lt;/a&gt;_pnpm_version 1 is ou
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Design. Prototype. Propose. How One Man Used Adobe XD To Ask ‘Will You Marry Me?’</title>
    <link href="https://gmagon.com/blog/2017/06/28/design-prototype-propose-how-one-man-used-adobe-xd-to-ask-will-you-marry-me/"/>
    <id>https://gmagon.com/blog/2017/06/28/design-prototype-propose-how-one-man-used-adobe-xd-to-ask-will-you-marry-me/</id>
    <published>2017-06-28T00:00:00.000Z</published>
    <updated>2017-06-28T10:01:53.433Z</updated>
    
    <content type="html"><![CDATA[<p>Adobe XD is known as a powerful design and prototyping tool, but at its core it’s a communication tool that lets users share ideas quickly and easily. We’ve seen lots of examples of great work<a href="https://twitter.com/search?q=%23madewithadobexd&amp;src=typd" target="_blank" rel="external">shared online with #MadeWithAdobeXD</a>, but nothing quite like this. When Lee Chapman, a Latvia-based project manager for Cake HR, was introduced to XD by his boss, he started dreaming up a plan to use the program outside of work. It was a mission of love.</p>
<p><img src="http://img1.tuicool.com/zERZV3z.jpg!web" alt=""></p>
<p>Lee was dreaming up a creative way to propose to his girlfriend Zane (pronounced Zana), and he decided Adobe XD was going to be the way to do it.</p>
<p>“Zane and I met on Tinder, and I wanted her to relive the experience of our first date, so I decided to mock-up my own version of Tinder,” said Lee. The only problem — Lee isn’t a pro designer and had never used XD before, but that didn’t stop him! “I started on Monday and I proposed to her on Friday. That’s the amazing thing about XD, how quickly I could do this.” His first design and prototype was a milestone in many ways.</p>
<h3 id="The-Plan"><a href="#The-Plan" class="headerlink" title="The Plan"></a>The Plan</h3><p>Chapman spent nights working on his prototype, hiding the computer screen from Zane so she wouldn’t see what he was up to. Leveraging the prototyping power of XD, Lee created an immersive treasure hunt for Zane, mimicking the buttons and interactions of Tinder. The prototype led her from their home to the street corner where they first met, then on to the coffee shop where they had their first date. Lee simply wired up his design so each button interaction took her to a different screen, guiding her along the journey Chapman had planned.</p>
<p>“You could say I was able to quickly onboard her through the engagement experience. I quickly learned I could use the tool to direct her where I wanted her to go,” he said.</p>
<p>On Friday morning, after he had finished his design, Lee headed to work and sent Zane the link to his prototype, telling her to follow along with strict instructions not to skip ahead. She went on the journey, following the directions to locations and reading the love letters Chapman had composed on artboards throughout.</p>
<p>“The love letters detailed how our lives are going to be changing, and she told me while she was reading this in the middle of the street she was bawling her eyes out,” said Chapman.</p>
<p>As Zane was completing her treasure hunt throughout the city, Chapman was at home getting ready to ‘pop the question.’</p>
<p><img src="http://img0.tuicool.com/7BZNfe2.jpg!web" alt=""></p>
<h3 id="The-Proposal"><a href="#The-Proposal" class="headerlink" title="The Proposal"></a>The Proposal</h3><p>The final screen in Chapman’s prototype led Zane back to their house.</p>
<p>“She let me know she was having the best time ever and crying her eyes out, and she was completely naive to what was next. It was also her birthday, so she thought it was her birthday present. She didn’t have any clue of the big finish until she came home,” he said.</p>
<p>That’s where Chapman was waiting in a tuxedo with flowers and a big question. He asked her to marry him.</p>
<p>“She said yes, and she loved the entire experience. To be honest, I think I nailed a pretty unique proposal.”</p>
<p>He calls his creation an MVP (minimum viable proposal) on a personal level, and says the end result felt like an immersive story, since it was so easy for Zane to use.</p>
<p>“I was able to give her that personal touch and that WOW moment throughout the whole experience, with every single push of a button.”</p>
<h3 id="Easy-to-Design-Prototype-and-Share"><a href="#Easy-to-Design-Prototype-and-Share" class="headerlink" title="Easy to Design, Prototype, and Share"></a>Easy to Design, Prototype, and Share</h3><p>Because Zane would be using the prototype on her own, Chapman wanted to make sure it worked perfectly on her phone as she travelled to ‘their spots’ in the city.</p>
<p>“XD provides artboard templates to her version of iPhone, so actually having the dimensions there was so helpful. What I also love and found super useful were the UI kits, like the one for Apple iOS, which made it easy to add in the default images for the mobile application design,” he said.</p>
<p>He also found it easy to create a working prototype that would give Zane the open feel of an app, but still guide her on the experience he wanted to create.</p>
<p>“I really loved how you can create a prototype with click functionality. My design was very basic, but that’s because Tinder is very basic, and I wanted to ensure the prototype I made gave the impression of a real application,” he said.</p>
<p>Chapman has lots of reasons to be excited. On top of getting married, he and Zane are expecting a child, and no doubt their son or daughter has a lot of Adobe XD treasure hunts to look forward to.</p>
<p>“On a personal level, this is experience has helped me on my journey to learning how to be a UX designer. I’m not the best at UI or UX, but I was able to open up my world to create that user experience that no one’s going to have.”</p>
<p><em>You can follow Lee Chapman’s work on</em><a href="http://twitter.com/leefranchap" target="_blank" rel="external"><em><strong>his Twitter</strong></em></a><em><strong>, and</strong></em><a href="http://www.adobe.com/products/experience-design.html" target="_blank" rel="external"><em><strong>click here to learn more about Adobe XD</strong></em></a><em><strong>and its powerful prototyping tools.</strong></em></p>
<p>Source: <a href="http://www.tuicool.com/articles/hit/AJzQBjy" target="_blank" rel="external">https://blogs.adobe.com/creativecloud/design-prototype-propose-how-one-man-used-adobe-xd-to-ask-will-you-marry-me</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Adobe XD is known as a powerful design and prototyping tool, but at its core it’s a communication tool that lets users share ideas quickl
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>5 ways type can define brands</title>
    <link href="https://gmagon.com/blog/2017/06/28/5-ways-type-can-define-brands/"/>
    <id>https://gmagon.com/blog/2017/06/28/5-ways-type-can-define-brands/</id>
    <published>2017-06-28T00:00:00.000Z</published>
    <updated>2017-06-28T10:01:53.415Z</updated>
    
    <content type="html"><![CDATA[<p>Choosing the right typeface is a crucial part of thelogo design process, but when it comes to defining the unique characteristics of a brand, it can also play a much more subtle role in shaping its personality and tone of voice.</p>
<p>For smaller brands, this tends to be as simple as selecting an existing typeface that’s best suited for their particular needs. But the ultimate solution, for those with the time and budget to do so, is a bespoke font tweaked to perfection.</p>
<p>Studios such as<a href="https://www.daltonmaag.com/" target="_blank" rel="external">Dalton Maag</a>,<a href="https://commercialtype.com/" target="_blank" rel="external">Commercial Type</a>,<a href="http://www.fontsmith.com/" target="_blank" rel="external">Fontsmith</a>and<a href="https://www.typography.com/" target="_blank" rel="external">Hoefler &amp; Co</a>haver extensive experience in developing bespoke typefaces for brands, and many of their clients have honed their personality across many different platforms as a result.</p>
<p>Read on to discover how bespoke typography has enhanced brands across five different sectors…</p>
<h3 id="01-Motion-friendly-type-for-broadcasters"><a href="#01-Motion-friendly-type-for-broadcasters" class="headerlink" title="01. Motion-friendly type for broadcasters"></a>01. Motion-friendly type for broadcasters</h3><p>On-screen branding provides a particular challenge for bespoke typefaces, as motion graphics come into play alongside all manner of other uses, from billboards to corporate stationery.</p>
<p><a href="http://brody-associates.com/" target="_blank" rel="external">Brody Associates</a>’ highly distinctive typeface for Channel 4 is a great example of the versatility required to convey personality in this field. Within the same family, it combines a functional text face (Chadwick) with a highly expressive display version (Horseferry).</p>
<p><img src="http://img1.tuicool.com/fERJBbY.jpg!web" alt=""></p>
<p>Channel 4 can choose between text face Chadwick and display face Horseferry</p>
<p>Horseferry incorporates elements from Channel 4’s logo into the letterforms, with highly unconventional, striking results that can only function at large sizes, such as for advertising. Chadwick follows the same basic structure, but calms things down to help with legibility, particularly when used to communicate information on screen.</p>
<p><img src="http://img2.tuicool.com/vy6Brm6.jpg!web" alt=""></p>
<p>The curves of the ITV logotype are echoed in its typeface</p>
<p>For ITV, Fontsmith was given the task of translating the smooth, flowing curves of the broadcaster’s logotype into a whole typeface family to be used across the brand, including TV, online and on-demand applications.</p>
<p>The resulting typeface is detailed and wide proportioned, with a subtle calligraphic feel. According to Fontsmith: “When you take a pen off the page when writing, you get the sense of a rounded ending to the stroke or line creating a subtle, modern and bouncy script tone of voice.”</p>
<h3 id="02-Standout-typography-for-packaging"><a href="#02-Standout-typography-for-packaging" class="headerlink" title="02. Standout typography for packaging"></a>02. Standout typography for packaging</h3><p>When it comes to brands that express themselves on packaging, on-shelf standout becomes a critical factor to consider in a typeface. And where global brands are concerned, different language support also comes into play as that packaging needs to cater to different markets.</p>
<p><img src="http://img0.tuicool.com/Qj2eqeZ.jpg!web" alt=""></p>
<p>Colgate Ready was translated into a range of different scripts</p>
<p>Another Fontsmith case study is Colgate, in collaboration with The Partners and Red Fuse Communications. The brief was to reflect the “emotional and tonal dimensions” of the brand through a Roman/Latin typeface in three different weights, and ‘Colgate Ready’ was the result.</p>
<p>Colgate Ready was translated into Cyrillic, Eastern European, Devanagari and Thai, with a consistent stroke weight, x-height, cap height, width proportions and terminals.</p>
<p><img src="http://img2.tuicool.com/2iQNR3f.jpg!web" alt=""></p>
<p>Hoefler &amp; Co’s bespoke typeface is used sparingly on Tiffany &amp; Co’s packaging</p>
<p>At the other end of the scale, in the luxury market, Tiffany &amp; Co’s unique typeface, created by Hoefler &amp; Co, is used sparingly on the jeweller’s minimalist packaging, making those iconic duck-egg-blue boxes even more desirable.</p>
<h3 id="03-Flexible-typography-for-retail"><a href="#03-Flexible-typography-for-retail" class="headerlink" title="03. Flexible typography for retail"></a>03. Flexible typography for retail</h3><p>Another fascinating application of bespoke type is in the retail space, where applications range from signage and wayfinding, to point-of-sale displays, to own-brand packaging.</p>
<p>Dalton Maag was commissioned to create a bespoke font for Lush, translating the boutique cosmetics brand’s distinctive chalkboard-style handwritten signage into a more neutral and contemporary typeface.</p>
<p>“Every letter had two alternate versions, while the most-used letters had three alternates,” explains designer Riccardo de Franceschi. “On top of these we created ligatures, and selected them according to not only frequency of use, but also the way the Lush handwriters write.”</p>
<p><img src="http://img1.tuicool.com/q6NzAzr.jpg!web" alt=""></p>
<p>For Lush’s typeface, each character needed two or three alternative versions</p>
<p>Lush’s typeface helps develop its boutique, artisan brand voice, but larger stores need to tread a finer line between personality and functionality – such as Fontsmith’s bespoke typeface for Sainsbury’s, which uses the foundry’s own FS Lola as a starting point.</p>
<p>“The new font needed to successfully stretch across a wide range of channels including above the line marketing, online, publications, packaging, in-store services, in-store navigation and in-store pricing,” reveals the agency. “It had to work from 400pt, all the way down to 6pt.”</p>
<p><img src="http://img1.tuicool.com/NRzQbe6.jpg!web" alt=""></p>
<p>Sainsbury’s’ font needed to stretch across a wide range of uses</p>
<p>FS Lola’s distinctive slab serifs were softened, while regularly used brand words – particularly those that featured in wayfinding and signage – were adjusted on a case by case basis to improve legibility while conveying the supermarket’s personality.</p>
<h3 id="04-Scalable-typography-for-mobile"><a href="#04-Scalable-typography-for-mobile" class="headerlink" title="04. Scalable typography for mobile"></a>04. Scalable typography for mobile</h3><p>When it comes to mobile use, the need for functionality and legibility at tiny sizes on small screens can all too easily overwhelm brand personality. But it’s not impossible.</p>
<p><img src="http://img1.tuicool.com/EFVvQvq.jpg!web" alt=""></p>
<p>For Nokia, Dalton Maag faced a massive, multi-platform, multi-language project</p>
<p>Bespoke type projects don’t get much more in-depth than Dalton Maag’s breakthrough project for global giant Nokia, which saw the agency expand massively to handle the demands of the multi-platform, multi-language project – including Hebrew, Arabic, Thai, Greek and Russian.</p>
<p>“This was all about going back to Finnish design roots – clean, simple, pure – and functionality was the primary objective,” explains Bruno Maag. “There was a big discussion about whether the brand fonts should have more personality or not. While the UI fonts need to be functional and readable, the display fonts have to do something else for their job.”</p>
<p><img src="http://img2.tuicool.com/jURzmi6.jpg!web" alt=""></p>
<p>Fontsmith created this bespoke semi-slab serif typeface for Movistar</p>
<p>Fontsmith collaborated with Interbrand on a bespoke semi-slab serif typeface for Movistar, Telefónica’s Spanish and Latin American mobile operator. According to the agency: “We needed to be mindful that the slab wasn’t too static, that it had rhythm, progression, an approachable nature, and was authentic.”</p>
<h3 id="05-Apt-typography-for-editorial"><a href="#05-Apt-typography-for-editorial" class="headerlink" title="05. Apt typography for editorial"></a>05. Apt typography for editorial</h3><p>One of the most varied uses for a bespoke typeface is in a newspaper or magazine, purely because there are so many sizes, weights and styles involved in different capacities.</p>
<p><img src="http://img0.tuicool.com/INFbyaq.jpg!web" alt=""></p>
<p>Commercial Type designed this multi-weight typeface for The Guardian in 2005</p>
<p>A particularly high-profile example of this is Commercial Type’s multi-weight typeface for The Guardian, which coincided with the newspaper’s transition to the Berliner format in 2005. It has served the newspaper well ever since, although the recent announcement that it’ll shrink to tabloid size in 2018 may prompt another refresh.</p>
<p>The extensive family incorporates several interrelated families: an Egyptian for headlines; a Text Egyptian; four different widths of Sans for headlines; and finally an Agate Sans. Between them, they can handle everything from hard-hitting headlines to tiny financial listings.</p>
<p><img src="http://img1.tuicool.com/6R3mm2B.jpg!web" alt=""></p>
<p>Wired is synonymous with innovative typography</p>
<p>One magazine that’s synonymous with innovative use of type is Condé Nast’s Wired – and again, Hoefler &amp; Co rose to the challenge with Forza, an adaptable sans serif based on a rounded rectangle structure that, like Guardian Collection, is available commercially.</p>
<p>“Wired commissioned us to design a square sans as its editorial workhorse – one that could handle everything from philosophical essays to down-to-earth service pieces,” reports Hoefler &amp; Co. “Forza’s sophisticated visual vocabulary makes it alert and engaging, and its broad palette of weights ensures it can meet the needs of the most demanding designer.”</p>
<p>Source: <a href="http://www.tuicool.com/articles/hit/yIzmAnr" target="_blank" rel="external">http://www.creativebloq.com/features/5-ways-type-can-define-brands</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Choosing the right typeface is a crucial part of thelogo design process, but when it comes to defining the unique characteristics of a br
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Google News shows off its minimalist new look</title>
    <link href="https://gmagon.com/blog/2017/06/28/google-news-shows-off-its-minimalist-new-look/"/>
    <id>https://gmagon.com/blog/2017/06/28/google-news-shows-off-its-minimalist-new-look/</id>
    <published>2017-06-28T00:00:00.000Z</published>
    <updated>2017-06-28T10:01:53.436Z</updated>
    
    <content type="html"><![CDATA[<p>Google today rolled out a brand new look for News. The redesign is modern, clutter-free, and puts the emphasis on what’s important when browsing dozens of news stories.</p>
<p>According to Google:</p>
<p>“To make news more accessible and easier to navigate, we redesigned the desktop website with a renewed focus on facts, diverse perspectives, and more control for users.”</p>
<p>Scrolling through the news feed, you’ll find easily scannable content.Google’s Story card format allowsusers to quickly pinpoint key bits of information like news source, headline, and publish time. The Story cards also allow users to look at the different perspectives surrounding the story ー encouraging readers to gain a more informative understanding of the issue.</p>
<p>And if you glance at the top of the page, you’ll see a new navigation bar for “Headlines,” “Local” and “For You.” “Local” is exactly what it sounds like ー keeping tabs on stories from any part of the world. And then there’s “For You,” a feature that personalizes the news feed based on your interests.</p>
<p><img src="http://img2.tuicool.com/73uyMnN.png!web" alt=""></p>
<p>The icing on the cake is the Fact Check block, which makes it a lot easier to vet a story’s credibility.</p>
<p>The feature is only available to US readers at the moment, but Google plans to slowly roll out the update globally.</p>
<p><a href="https://thenextweb.com/company/google/" target="_blank" rel="external">Google</a><a href="https://thenextweb.com/section/insights/" target="_blank" rel="external">Insights</a></p>
<p>Source: <a href="http://www.tuicool.com/articles/hit/3yquAfB" target="_blank" rel="external">https://thenextweb.com/google/2017/06/28/google-news-shows-off-its-minimalist-new-look/</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Google today rolled out a brand new look for News. The redesign is modern, clutter-free, and puts the emphasis on what’s important when b
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>iOS 11 beta has iPhone secrets</title>
    <link href="https://gmagon.com/blog/2017/06/27/ios-11-beta-has-iphone-secrets/"/>
    <id>https://gmagon.com/blog/2017/06/27/ios-11-beta-has-iphone-secrets/</id>
    <published>2017-06-27T00:00:00.000Z</published>
    <updated>2017-06-27T09:28:23.935Z</updated>
    
    <content type="html"><![CDATA[<p>TheiPhone 8 could end up being an amazing, transformative 10th-anniversaryiPhone. At first glance,iOS 11 doesn’t seem quite so ambitious. It’s more of a series of targeted upgrades, with some of them being downright fantastic. </p>
<p>Apple’s newest version of its operating system for iPhones and iPads doesn’t formally arrive until later this year, but it’s here in public beta form now. You can install it on your own iPads and iPhones, if you dare. Don’t do so on your primary device, however, only experiment with it on a secondary device, and be ready for plenty of bugs. Betas do weird things sometimes and App Store apps aren’t optimized for it yet anyway.</p>
<p>I’ve already been using it for a few days, testing it on aniPhone 7 Plus (for this story) and a new 10.5-inchiPad Pro (to see all the extra features it adds on theiPad). With the caveat that this is a beta – and not a feature-complete one at that – here are my first impressions.</p>
<p><a href="https://www.cnet.com/pictures/ios-11-beta-iphone-ipad-features/" target="_blank" rel="external"><img src="http://img1.tuicool.com/YbuumyA.jpg!web" alt="">36iOS 11’s best features for iPhone and iPad</a></p>
<h3 id="The-killer-features"><a href="#The-killer-features" class="headerlink" title="The killer features:"></a>The killer features:</h3><h4 id="You-can-pluck-the-best-shots-from-Live-Photos"><a href="#You-can-pluck-the-best-shots-from-Live-Photos" class="headerlink" title="You can pluck the best shots from Live Photos"></a>You can pluck the best shots from Live Photos</h4><p>When Live Photos first launched in 2015, they seemed clever but gimmicky. My brother-in-law asked me back then, can Live Photo pick another shot to grab a moment you thought you missed? It couldn’t before, but it can now. Editing a Live Photo now allows any of the shots to become the “primary photo.” Missed your kid’s smile? Maybe you didn’t. It’s now a time machine for snapshots and a backup plan. I’m never turning it off after the iOS 11 upgrade. Added GIF-like loop effects and a nice long exposure trick are great too, but nothing beats editable shots.</p>
<p><img src="http://img2.tuicool.com/NRvAJra.jpg!web" alt=""></p>
<p>Pick your best shot.</p>
<p>Sarah Tew/CNET</p>
<h4 id="A-one-page-Control-Center"><a href="#A-one-page-Control-Center" class="headerlink" title="A one-page Control Center"></a>A one-page Control Center</h4><p>The iPhone’s handy swipe-up panel sprawled into a weird multi-page monster withiOS 10, but it fits on one pane in iOS 11. New features are added, too, and shortcuts to key apps can be added or removed like widgets. Nice adds are Notes, Voice Memo and a greatApple TV remote tool built-in. I can keep my lost Apple TV remote wedged in the sofa permanently. Still, it could have added even more. Control Center doesn’t use 3D Touch as much as I thought it would to deep-dive further in settings. But, hey, it’s progress.</p>
<p><img src="http://img1.tuicool.com/ArY32u3.jpg!web" alt=""></p>
<p>Control Center has sub-sections, now.</p>
<p>Sarah Tew/CNET</p>
<h4 id="Screen-recording"><a href="#Screen-recording" class="headerlink" title="Screen recording"></a>Screen recording</h4><p>It’s not going to be for everyone, but it’s so easy to start recording what you do on your iPhone, even add voice-over commentary and share as a video. How-to videos and self-help sites are going to benefit tremendously. Maybe I’d use this to show my mom how to adjust her phone settings the next time she calls – I could just email the video.</p>
<h4 id="Marking-up-almost-anything"><a href="#Marking-up-almost-anything" class="headerlink" title="Marking up (almost) anything"></a>Marking up (almost) anything</h4><p>The next time you want to share what you see on your iPhone (or iPad), remember that screenshots (home plus the power button together) now launch a markup tool that lets you scribble or highlight anything. Well, almost anything… movies and protected videos ended up blacked out (on iOS 10, that doesn’t happen). Circle a weird comment, add a note with your finger. Safari has a “markup as PDF” feature that does the same thing. It’ll be great for Twitter or Facebook. In a similar vein, PDFs are easy to make and even add signatures to.</p>
<h4 id="A-built-in-scanner-in-Notes"><a href="#A-built-in-scanner-in-Notes" class="headerlink" title="A built-in scanner in Notes"></a>A built-in scanner in Notes</h4><p>Apple’s Notes app keeps getting serious upgrades, pushing it further into Evernote country. Tables can be added in iOS 11, and there’s also a scanning tool to add receipts or other documents. It does a pretty good job stretching and evening out off-angle scans, but it doesn’t convert into editable text.</p>
<p><img src="http://img2.tuicool.com/uQfUfiq.jpg!web" alt=""></p>
<p>One-handed keyboard!</p>
<p>Sarah Tew/CNET</p>
<h3 id="Some-other-things-to-try"><a href="#Some-other-things-to-try" class="headerlink" title="Some other things to try:"></a>Some other things to try:</h3><h4 id="Siri-sounds-different-and-can-translate"><a href="#Siri-sounds-different-and-can-translate" class="headerlink" title="Siri sounds different and can translate"></a>Siri sounds different and can translate</h4><p>Siri is supposed to be somewhat smarter now. I didn’t see a giant boost yet, but Siri definitely sounds different. The “more natural” style actually threw me off a bit. Siri’s nicest new feature is instant audio translation into French, German, Italian, Mandarin Chinese and Spanish. It’s in beta – so be wary of relying on it in a serious setting – but it’s nice to have at a quick button press. (Google Translate is still my go-to, though.)</p>
<h4 id="One-handed-keyboards"><a href="#One-handed-keyboards" class="headerlink" title="One-handed keyboards"></a>One-handed keyboards</h4><p>A little iOS 11 trick is to press and hold the “emoji” button in the keyboard to get a new left- or right-hand-squished keyboard optimized for one-handed typing. It’s reminiscent of the old compressed keyboard on theiPhone SE.</p>
<h4 id="The-Files-app"><a href="#The-Files-app" class="headerlink" title="The Files app"></a>The Files app</h4><p>There’s now a place to consolidate folders and apps locally or in cloud accounts. It’s taking some getting used to in the beta, but it’s finally a central place to dump your stuff. But, so far, I found I couldn’t just instantly make folders on my iPhone without putting them into pre-existing folders… which is disappointing.</p>
<h4 id="Portrait-mode-for-7-Plus-gets-flash-HDR-effects"><a href="#Portrait-mode-for-7-Plus-gets-flash-HDR-effects" class="headerlink" title="Portrait mode for 7 Plus gets flash/HDR/effects"></a>Portrait mode for 7 Plus gets flash/HDR/effects</h4><p>Extra camera modes mean Portrait mode’s bokeh-type effects can be used in more situations.</p>
<h4 id="‘Do-Not-Disturb-While-Driving’"><a href="#‘Do-Not-Disturb-While-Driving’" class="headerlink" title="‘Do Not Disturb While Driving’"></a>‘Do Not Disturb While Driving’</h4><p>At long last, iPhones have a new filter to remove messages while driving. It’s a more targeted variation of “Do Not Disturb.” It can be triggered automatically, manually or while connected to a car’s Bluetooth, and it also auto-replies to contacts (or only some of them) to let them know you’re driving. I haven’t used this a ton yet, but I’m curious.</p>
<p><img src="http://img1.tuicool.com/byEjiiR.jpg!web" alt=""></p>
<p>OK.</p>
<p>Sarah Tew/CNET</p>
<h3 id="Not-so-hot"><a href="#Not-so-hot" class="headerlink" title="Not so hot:"></a>Not so hot:</h3><h4 id="The-new-App-Store"><a href="#The-new-App-Store" class="headerlink" title="The new App Store"></a>The new App Store</h4><p>Apple’s redesign of the store feels likeApple Music, Apple News and many recent redesigned parts of iOS. After a few days in it, I’m not sure it’s easier to discover what I’m looking for. There are a lot more Apple-curated lists, it seems, and articles written about featured apps by Apple’s editorial staff. Games are split off from the rest of the App Store to allow other apps to be featured better. Does it make things better? </p>
<h4 id="Added-Siri-suggestions-in-News-and-other-things"><a href="#Added-Siri-suggestions-in-News-and-other-things" class="headerlink" title="Added Siri suggestions in News and other things"></a>Added Siri suggestions in News and other things</h4><p>Supposedly, Apple News makes suggestions from what you’re looking for in Safari. I haven’t seen that emerge for me yet. Quick-type suggestions in Safari’s keyboard bring up more specific things, often based on what you’re looking at. But not always, and I found some oddities.</p>
<h3 id="What-you-don’t-get-yet-but-will-eventually"><a href="#What-you-don’t-get-yet-but-will-eventually" class="headerlink" title="What you don’t get yet (but will eventually):"></a>What you don’t get yet (but will eventually):</h3><h4 id="Augmented-reality"><a href="#Augmented-reality" class="headerlink" title="Augmented reality"></a>Augmented reality</h4><p>Apple’s<a href="https://www.cnet.com/news/apples-first-crack-at-ar-looks-surprisingly-good/" target="_blank" rel="external">amazing ARKit</a>doesn’t have any apps or demos to show off in this beta, so you’ll have to wait for software developers to show their stuff in the fall… or watch<a href="https://www.cnet.com/news/apples-amazing-looking-ar-could-also-be-super-sharable/" target="_blank" rel="external">developer experiments</a>online.</p>
<p>Source: “<a href="http://www.tuicool.com/articles/hit/3EFbIvm" target="_blank" rel="external">https://www.cnet.com/news/ios-11-public-beta-what-it-does-for-the-iphone/</a>“</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;TheiPhone 8 could end up being an amazing, transformative 10th-anniversaryiPhone. At first glance,iOS 11 doesn’t seem quite so ambitious.
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Bad Ideas Are The Key To Creativity</title>
    <link href="https://gmagon.com/blog/2017/06/27/bad-ideas-are-the-key-to-creativity/"/>
    <id>https://gmagon.com/blog/2017/06/27/bad-ideas-are-the-key-to-creativity/</id>
    <published>2017-06-27T00:00:00.000Z</published>
    <updated>2017-06-27T09:28:23.931Z</updated>
    
    <content type="html"><![CDATA[<p>Growing up, we’re all taught to follow the rules. Wait your turn in line. Fill in the bubble of the right answer. Eat your dessert last. Tie your shoes and tuck your shirt in. Don’t ask stupid questions. We’re rewarded for caution and deliberation, punished for<a href="https://www.inc.com/sonia-thompson/want-to-raise-a-confident-girl-encourage-her-to-be-a-little-bad.html" target="_blank" rel="external">coloring outside the lines</a>.</p>
<p>Over time, we’re shuffled into groups based on test results and pursue careers based on our credentials and degrees. We eventually file into offices where we are required to dress a certain way, talk a certain way; behave a certain way. At some point along this journey, the world designates you as “creative” or “non-creative” with most people falling into the latter category.</p>
<p>And yet, we know that creative thinking is necessary for success. It has enabled the rise and sustainable success of companies like Airbnb, Facebook and Uber; completely transforming industries like hospitality, advertising and transportation. In fact,<a href="https://www-03.ibm.com/press/us/en/pressrelease/31670.wss" target="_blank" rel="external">an IBM study</a>of 1,500 CEOs found that creativity was considered the most essential feature of their organization, more than integrity or even vision. According to the CEOs, creativity enables companies to navigate today’s increasingly complex business environment.</p>
<p>The secret to creativity, according to science: persistence.</p>
<p>There are many reasons why we, as a society, abandon creative thinking as we enter adulthood. For one, creativity is messy and uncertain; it goes against everything we learn along the way in formal education and through socialization. Creative thinking can be scary because it makes us vulnerable to judgment and can sometimes feel like we’re giving up control. That’s why many people reassign themselves to the non-creative category – they repress their creative potential in exchange for structure, conformity and comfort.</p>
<p>The notion that individuals are inherently “creative” or “non-creative” is a dangerous one. It implies that only certain people are gifted with creativity, which has beendisproved by loads of research, including one<a href="http://psycnet.apa.org/journals/psp/109/2/232/" target="_blank" rel="external">study</a>from Northwestern University.</p>
<p>The research suggests we give up too easily when confronted with a problem that requires creative thinking. What’s more, the research finds the most creative ideas tend to arise after many others have been considered and discarded, proving that the key to creative thought is to just keep at it.</p>
<h2 id="Bad-ideas-are-building-blocks-to-great-ones"><a href="#Bad-ideas-are-building-blocks-to-great-ones" class="headerlink" title="Bad ideas are building blocks to great ones."></a>Bad ideas are building blocks to great ones.</h2><p>There are two reasons why embracing bad ideas is necessary for great ones:</p>
<ol>
<li>Ideas that solve a problem in a unique way are usually a combination of existing ideas, many of which may seem bad at first.</li>
<li>Accepting that most of your ideas will be bad will help you move on to new ideas faster and more easily.</li>
</ol>
<p>Ultimately, like most things, creative thought is a trial-and-error process that requires failure. And while bad ideas can be building blocks to creative thought, sometimes they are in fact actually good ideas – just ones that nobody else understands yet.</p>
<p>Ideas that were once ridiculed have led to some of the greatest inventions in history, such as like human flight or electricity.</p>
<h2 id="Design-Thinking-is-a-great-technique-to-boost-creativity"><a href="#Design-Thinking-is-a-great-technique-to-boost-creativity" class="headerlink" title="Design Thinking is a great technique to boost creativity."></a>Design Thinking is a great technique to boost creativity.</h2><p>Used by Apple,<a href="http://www.gv.com/sprint/" target="_blank" rel="external">Google</a>, Samsung, and GE, Design Thinking has become an increasingly popular problem solving<a href="https://www.interaction-design.org/literature/article/what-is-design-thinking-and-why-is-it-so-popular" target="_blank" rel="external">approach</a>not just in design, but in business.</p>
<p>At it’s core, Design Thinking boils down to defining a problem and creating as many solutions as possible in a limited period of time. It is a technique that’s highly conducive for creativity because, like creative thought, it’s also a trial-and-error process; it’s rooted in generating a high-volume of ideas.</p>
<p>To give you a better idea of how you can leverage Design Thinking to create a new offering or improve upon existing ones, here is a 7-step crash course you can use immediately:</p>
<p>Step 1. Listen to your customers.First and foremost, get out of the office and talk to your users or customers, observe everyday tendencies of what they do, how they think, and what they want_outside<em>of the context of your company. The goal is to gather enough observations that you can start to write down problem statements such as</em>“Samantha dreads scheduling doctor’s appointments. How might we help her schedule appointments more easily?”_</p>
<p>Step2. Create visual representations of wild ideas using comic strips.Really. Using the problem statement in Step 1, describe possible solutions using illustrated narratives like comic book strips. Use stick figures to describe the scene in which Samantha would schedule doctor’s appointments in a new way. Sketch out 8 comic strips in 5 minutes, then spend 5 minutes sketching out one big comic strip idea, with each strip containing a different idea. Take a break and do it again.</p>
<p>Step 3. Imagine your new offering in the headlines.This will help you articulate new value propositions. Sketch out your favorite business magazine covers and draw cover images and headlines of what everyone will say about your new offering. For example, based on your comic strips you imagined booking an appointment using Siri, the headline in Inc Magazine might read_”How This Company Helps You Book a Doctor’s Appointment In Just a Few Words.”_Try to draw 10 copies in 10 minutes, take a break and repeat the 10 minute cycle. You can also feel free to describe ideas that you didn’t sketch in Step 2.</p>
<p>Step 4. Eliminate the impossible (not the bad).Once you’ve gone through all the ideas on the table, talk through ideas that you think would would be valuable and eliminate ideas that can’t be pursued immediately, like your doctor visiting your home via holograms. You should be able to combine ideas and narrow them down to 3 new ideas. This usually takes anywhere from a few hours to a full day.</p>
<p>Step 5. Make something you can touch and feel.The goal here is to evaluate an idea, not launch it. Be as resourceful as you can and try to limit yourself to only an hour to make a physical or digital prototype. A good starting point for simulating physical products is glue and popsicle stick, and tools like InVision or light code for digital ones. As long as you can touch it, anything goes.</p>
<p>Step 6. Then put it in the hands of your customers.Your customers are likely more imaginative than you think. Get a focus group together, show them what you made and get some knee-jerk reactions. The rule of thumb is to talk to 5-7 people to get the most insight in as little time as possible.</p>
<p>Step 7. Go back to the drawing board.Remember, the purpose of all the work you’ve put in to this point is to generate new ideas. If you think your customers are excited about your prototypes, start putting a plan together to execute on what you’ve created. If not, take the new learnings and go back to Step 1.</p>
<p>The beauty of this approach is you can do it in one week or over the course of 6 months, with most of the variability being in how much time you spend making your prototypes. It can be used by any department or role in the company to to unlock the creative potential across your entire organization.</p>
<p>Source: <a href="http://www.tuicool.com/articles/hit/IRBjUju" target="_blank" rel="external">https://www.inc.com/yazin-akkawi/bad-ideas-are-the-key-to-creativity.html</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Growing up, we’re all taught to follow the rules. Wait your turn in line. Fill in the bubble of the right answer. Eat your dessert last. 
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>With Alphabet, Google faces a daunting challenge: organizing itself</title>
    <link href="https://gmagon.com/blog/2017/06/27/the-holy-wars-of-procrastination/"/>
    <id>https://gmagon.com/blog/2017/06/27/the-holy-wars-of-procrastination/</id>
    <published>2017-06-27T00:00:00.000Z</published>
    <updated>2017-06-27T09:28:23.938Z</updated>
    
    <content type="html"><![CDATA[<p>SAN FRANCISCOGoogle’s self-professed mission is to organize the world’s information. But a company known for engineering excellence is still trying to solve the very human problem of how to organize itself.</p>
<p>Nearly two years ago, Google co-founder Larry Page announced the tech giant would be remade as Alphabet, a holding company whose units would include Google and an array of unrelated pursuits in areas such as healthcare, self-driving cars and urban planning.</p>
<p>Wall Street cheered. Previously those riskier ventures had been lumped into Google’s overall financial results. Investors would now see Google’s performance independent of its so-called “Other Bets,” an eclectic collection of 11 ventures. They include Nest, a maker of Wi-Fi enabled thermostats; Calico, which seeks to prolong the human lifespan; and X, the company’s secretive research lab.</p>
<p>Alphabet’s top management also aimed to boost accountability by appointing chief executives to head each of the Other Bets. Few people in Google’s constellation of ventures had ever held the title prior to that.</p>
<p>But so far Alphabet has failed to show it can convert its Other Bets from experiments to businesses with the reach, impact and money-making potential of Google’s core search and advertising operations. Interviews with two dozen former Alphabet executives and employees reveal an organization grappling with how much time and resources Other Bets deserve in the pursuit of profitability.</p>
<p>In the first quarter, which ended March 31, the ventures lost a combined $855 million; that’s on top of a collective $3.6 billion loss for 2016. As a whole, Alphabet generated $90.3 billion in revenue in 2016. Google’s share of that revenue was $89.5 billion, while its 2016 operating income was $27.9 billion.</p>
<p>Alphabet’s early days have seen more pruning than expansion of its holdings.</p>
<p>The company has skinned back plans for Google Fiber, which delivers rapid Internet service in 10 metro areas. This month, Alphabet agreed to sell robotics company Boston Dynamics to Japanese multinational SoftBank Group Corp. It unloaded its Terra Bella satellite imaging business in February.</p>
<p>At one point last year, it was even looking to sell Nest, the largest of the Other Bets, three people familiar with the matter told Reuters. Google paid an eye-popping $3.2 billion for the start-up in 2014.</p>
<p>(For a graphic showing Alphabet’s holdings, see:<a href="http://tmsnrt.rs/2rNgdKN" target="_blank" rel="external">tmsnrt.rs/2rNgdKN</a>)</p>
<p>Meanwhile, a series of executives have departed since the reorganization, including the heads of Nest, an Internet operation called Access and a venture capital firm known as GV.</p>
<p>An Alphabet spokeswoman declined repeated requests for comment or to make executives available for interviews. Supporters of the restructuring frame the early struggles as typical growing pains.</p>
<p>For now, Wall Street isn’t worried: Alphabet’s stock is near an all-time high, having reached $1,000 per share in June. Ruth Porat, the no-nonsense chief financial officer who has steered the restructuring, has won rave reviews from investors for enforcing financial accountability across Alphabet.</p>
<p>Some Other Bets have made notable strides. Life sciences initiative Verily recently attracted $800 million in outside investment. Self-driving car project Waymo is considered among the leaders in the burgeoning industry.</p>
<p>Still, it’s not yet clear the structure will enable Alphabet to do what most companies cannot: conceive the next wave of innovation in-house or through the development of key acquisitions. That goal is central to both the company’s mission and investor expectations, analysts say.</p>
<p>“The reason Google gets to trade at a decent multiple… is because there’s a growth story beyond advertising,” said analyst James Wang of ARK Investment Management.</p>
<p>CEO or COO?</p>
<p>The Alphabet structure is Google’s stab at an age-old corporate conundrum: sustaining innovation within a giant enterprise.</p>
<p>Alphabet’s strategy is to give entrepreneurs the autonomy of a startup, coupled with the discipline of a traditional corporate structure.</p>
<p>Roughly once a quarter, Other Bets leaders meet with the Alphabet board – comprised of Porat, Page, Google co-founder Sergey Brin and David Drummond, Alphabet’s senior vice president of corporate development – to discuss funding and performance, according to two former employees.</p>
<p>At the same time, Alphabet is establishing separate compensation plans for the Other Bets to reward employees if their ventures succeed, mirroring startup incentives.</p>
<p>The formula has primed Alphabet’s emerging businesses for “global impact,” Alphabet Executive Chairman Eric Schmidt said this month at the annual stockholders meeting at the Mountain View headquarters.</p>
<p>“There is one solution that we know works well in capitalism, which is boards, shareholders, CEOs,” Schmidt said. “My bet is that the traditional lessons of business organization will in fact result in success at Alphabet.”</p>
<p>Still, Alphabet top brass continue to hold sway over key strategy and financing decisions, a dynamic that has chafed Other Bets chief executives who’ve complained they are treated more like chief operating officers than shot callers, according to people familiar with the situation.</p>
<p>In addition, scrutiny from Wall Street limits how generous Alphabet can be in extending Google’s resources to Other Bets, said Brian McClendon, a former vice president of engineering at Google.</p>
<p>“As of yet, the restructuring hasn’t provided what I think is one of the immediate benefits, which is risk-taking investment,” he said.</p>
<p>NICKELED AND DIMED</p>
<p>Some companies acquired by Google found that being part of Alphabet wasn’t what they’d bargained for.</p>
<p>Two former Nest employees said they were promised generous funding and time to achieve profitability following the company’s acquisition by Google in 2014. But after the restructuring, Alphabet executives were keenly focused on revenue, one former employee said.</p>
<p>Pricey overhead has made the path to profitability tougher. After the restructuring, Alphabet began charging Other Bets for their portion of shared services such as security and facilities, ending what had previously amounted to a subsidy, people familiar with the situation said. The units also felt pressure to maintain Google perks such as free employee meals.</p>
<p>“One of the pitfalls (of Alphabet) is that those companies are asked to stand on their own two feet, but they may inherit the cost structure of Google,” said Nest investor Peter Nieh, a partner at Lightspeed Venture Partners.</p>
<p>In early 2016, Alphabet explored selling Nest in an effort code-named Project Amalfi, according to three people familiar with the matter. No deal materialized, and Nest co-founder Tony Fadell departed last year. Fadell declined to comment.</p>
<p>Boston Dynamics, acquired in 2013 during a robotics shopping spree led by Android creator Andy Rubin, enjoyed generous funding at first. But it was adrift after Rubin’s departure, two former employees said. Rubin did not respond to requests for comment.</p>
<p>GRUMPY GOOGLERS</p>
<p>The creation of the Other Bets has also changed what it means to work for Google.</p>
<p>Some grumble that their role now is to subsidize innovation at their sister companies, rather than to innovate themselves.</p>
<p>“It did sort of send the message to people who stayed back at Google, whether in search or in ads: Your job isn’t to push the envelope,” one former Googler said.</p>
<p>Employee transfers to X, the illustrious “moonshot factory,” are more complicated now that it’s a separate entity, former employees say.</p>
<p>That’s a striking shift, especially for high-performing employees accustomed to moving about the company almost at will, said Punit Soni, a former Google employee who is now chief executive of Learning Motors, an artificial intelligence startup.</p>
<p>“A basic premise of Google was people could do whatever they wanted,” Soni said. “I can see why people will feel like it’s no longer the old Google.”</p>
<p>In the meantime, co-founder Page is pursuing yet another “moonshot”: flying cars.</p>
<p>He is the primary investor in Kitty Hawk, a startup in the field that is entirely outside the Alphabet umbrella.</p>
<p>(Editing by Marla Dickerson)</p>
<p>Source:<a href="http://www.tuicool.com/articles/hit/RvMJZ3B" target="_blank" rel="external">http://www.reuters.com/article/us-alphabet-tensions-insight-idUSKBN19I0G9?feedType=RSS&amp;feedName=technologyNews&amp;utm_source=feedburner&amp;utm_medium=feed&amp;utm_campaign=Feed: reuters/technologyNews (Reuters Technology News)</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;SAN FRANCISCOGoogle’s self-professed mission is to organize the world’s information. But a company known for engineering excellence is st
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>10 Ways to Design Menus That Don’t Suck</title>
    <link href="https://gmagon.com/blog/2017/06/27/10-ways-to-design-menus-that-dont-suck/"/>
    <id>https://gmagon.com/blog/2017/06/27/10-ways-to-design-menus-that-dont-suck/</id>
    <published>2017-06-27T00:00:00.000Z</published>
    <updated>2017-06-27T09:28:23.889Z</updated>
    
    <content type="html"><![CDATA[<p>There are definite right and wrong ways to design navigation menus. This basic part of a website is often overlooked in the design process and it shows in terms of usability.</p>
<p>Clunky, overcrowded or missing navigation are the most common issues and quite frankly they can make your website simply suck. Don’t be that guy (or girl). Use these tips to ensure that you are using modern navigation patterns in your website projects for cool, creative navigation elements that don’t suck. (And are highly usable.)</p>
<h2 id="1-Ditch-the-Mega-Menus"><a href="#1-Ditch-the-Mega-Menus" class="headerlink" title="1. Ditch the Mega Menus"></a>1. Ditch the Mega Menus</h2><p>Mega menus was a design fad that clients loved—even when designers hated it. The oversized menu style that includes “everything but the kitchen sink” is overwhelming to users and doesn’t provide any real value.</p>
<p>Only a handful of major retailers can really get away with using mega menus, and the purpose there is to show scale of inventory. The usefulness of the overloaded navigation element is questionable.</p>
<p>Often, a mega menu option is selected because it is too hard to narrow down what to put in the navigation. Make the tough choices. Dig in analytics to see what users are looking for. Honestly, most users who want a very specific thing will find it using search anyway.</p>
<p><img src="http://img2.tuicool.com/RzYZNna.jpg!web" alt=""></p>
<h2 id="2-Make-Search-Prominent"><a href="#2-Make-Search-Prominent" class="headerlink" title="2. Make Search Prominent"></a>2. Make Search Prominent</h2><p>And speaking of search: Make it prominent. Search should be on every page. It should in in the main navigation. And it should be large and easy to access.</p>
<p>Superb search functionality is the link that will keep users on a website. If what they are looking for isn’t readily available, the next option is likely to search for it. (You can thank Google for this search-first thought process.)</p>
<p>Don’t try to fight it. Work with users and include search as part of the main navigation. (And make sure the box is big enough to type, and fully see, common phrases into.)</p>
<p><img src="http://img1.tuicool.com/JJ73aur.jpg!web" alt=""></p>
<h2 id="3-Limit-the-Number-of-Navigation-Choices"><a href="#3-Limit-the-Number-of-Navigation-Choices" class="headerlink" title="3. Limit the Number of Navigation Choices"></a>3. Limit the Number of Navigation Choices</h2><p>It’s your job to anticipate what content users will want to access next. Limit navigation choices to the most popular pages and information in the website design.</p>
<p>Almost every navigation menu should include search, an about or contact page and e-commerce sites should always include a cart or buy now button. After that navigation elements should be driven by site content.</p>
<p><img src="http://img0.tuicool.com/nAJj6nR.jpg!web" alt=""></p>
<h2 id="4-Develop-Smart-Navigation-Menus"><a href="#4-Develop-Smart-Navigation-Menus" class="headerlink" title="4. Develop Smart Navigation Menus"></a>4. Develop Smart Navigation Menus</h2><p>Good navigation will help users move from one bit of content to the next logical point. This content is often different on different parts of the website.</p>
<p>Create multiple navigation configurations so that users have easy access to the content that is the next logical step in their path around the design. While some elements might overlap, others assist users and help them move deeper into the design.</p>
<p>We are in an age where users have come to expect certain levels of personalization. Amazon does a great job of this with navigation elements that even call users by name. Take a close look at the navigation next time you log in to see [Your Name Here]’s Amazon.com. The secondary navigation includes information such as the user’s annual donation for Smile users, recent order history and even credits to other Amazon services. (Everything thereafter is pretty personalized, too.)</p>
<p><img src="http://img1.tuicool.com/FvqYVnV.jpg!web" alt=""></p>
<h2 id="5-Order-Nav-Elements-Purposefully"><a href="#5-Order-Nav-Elements-Purposefully" class="headerlink" title="5. Order Nav Elements Purposefully"></a>5. Order Nav Elements Purposefully</h2><p>The order of navigation elements is just as important as the decision to use them. Items at the beginning and end of the navigation element will be most effective, most seen and most clicked. User these positions carefully.</p>
<p>There’s even some science to back this up. The<a href="https://en.wikipedia.org/wiki/Serial_position_effect" target="_blank" rel="external">serial position effect</a>is the tendency of a person to recall the first and last items in a list most consistency. Further, users tend to recall the most recent items best (recency effect) and the first few items in a list are recalled better than middle elements (primacy effect).</p>
<p>Look at user flow patterns in your website analytics to help determine exactly what pages and elements should be front and center. Include pages that users are going to from the homepage and content that you want users to connect with. Eliminate navigation elements that aren’t driving user flow.</p>
<p><img src="http://img0.tuicool.com/YjyENjZ.jpg!web" alt=""></p>
<h2 id="6-Use-Sticky-Navigation-for-Long-Scrolling-Pages"><a href="#6-Use-Sticky-Navigation-for-Long-Scrolling-Pages" class="headerlink" title="6. Use Sticky Navigation for Long-Scrolling Pages"></a>6. Use Sticky Navigation for Long-Scrolling Pages</h2><p>Don’t let users lose track of navigation. Whether it sticks to the top, or bottom or side of the screen, any page with a long-scrolling format should include a sticky menu. The reason behind this is simple: Don’t make users work to keep interacting with your website.</p>
<p>The easier it is to move around and experience content, the more likely users are to do just that. The more time a user spends on your website with your design, the more likely they are to convert on a desired user action.</p>
<p><img src="http://img1.tuicool.com/IJrE7nz.jpg!web" alt=""></p>
<h2 id="7-Don’t-Hide-the-Navigation"><a href="#7-Don’t-Hide-the-Navigation" class="headerlink" title="7. Don’t Hide the Navigation"></a>7. Don’t Hide the Navigation</h2><p>Tiny menu items, links tucked away at the bottom of the screen or only in the footer, and pop-out navigation hidden behind oddball icons and lack of navigation on interior pages will only keep users from clicking. Don’t hide website navigation. It should be front and center. It should be on every page.</p>
<p>Users can get to your website in any number of ways. Make sure that there’s a navigational element waiting form them when they arrive.</p>
<p><img src="http://img0.tuicool.com/IfErIz7.jpg!web" alt=""></p>
<h2 id="8-Use-Descriptive-Labels"><a href="#8-Use-Descriptive-Labels" class="headerlink" title="8. Use Descriptive Labels"></a>8. Use Descriptive Labels</h2><p>From navigation words to icons, every element should tell users exactly what will happen with a click. Use commonly accepted icons, such as a shopping card to check out or magnifying glass for search or even a hamburger icon for pop-out menu styles.</p>
<p>Then take it a step further and use text labels that tell the user exactly what information is contained therein. Try to avoid overly generic labels such as services or offerings, if there’s a word that better explains the content.</p>
<p><img src="http://img1.tuicool.com/Vn6fumA.jpg!web" alt=""></p>
<h2 id="9-Consider-Full-Page-Nav"><a href="#9-Consider-Full-Page-Nav" class="headerlink" title="9. Consider Full-Page Nav"></a>9. Consider Full-Page Nav</h2><p>Sometimes the design is the navigation. If there are a few key elements that are vital for users, showcase them with full-screen navigation.</p>
<p>While this won’t be appropriate for every project, it can be effective for smaller websites, portfolios or project work.</p>
<p><img src="http://img0.tuicool.com/JN7ry22.jpg!web" alt=""></p>
<h2 id="10-Go-Vertical"><a href="#10-Go-Vertical" class="headerlink" title="10. Go Vertical"></a>10. Go Vertical</h2><p><a href="https://www.webdesignerdepot.com/2017/06/10-sites-doing-vertical-navigation-right/" target="_blank" rel="external">Vertical navigation is trendy right now</a>, and for good reason. It is easy to see and draws the eye because it is somewhat different.</p>
<p>Side, vertically-oriented navigation is a good option for websites that need a little more space for number of navigation elements. With a deeper menu, the design can accommodate more nav elements without feeling cluttered and maintaining adequate space between elements.</p>
<p><img src="http://img1.tuicool.com/RNV7byY.jpg!web" alt=""></p>
<p>Source: <a href="http://www.tuicool.com/articles/hit/JRRR7za" target="_blank" rel="external">https://www.webdesignerdepot.com/2017/06/10-ways-to-design-menus-that</a>  </p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;There are definite right and wrong ways to design navigation menus. This basic part of a website is often overlooked in the design proces
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>7 hot illustration trends of 2017 to make your project stand out</title>
    <link href="https://gmagon.com/blog/2017/06/27/7-hot-illustration-trends-of-2017-to-make-your-project-stand-out/"/>
    <id>https://gmagon.com/blog/2017/06/27/7-hot-illustration-trends-of-2017-to-make-your-project-stand-out/</id>
    <published>2017-06-27T00:00:00.000Z</published>
    <updated>2017-06-27T09:28:23.928Z</updated>
    
    <content type="html"><![CDATA[<p>The world of illustration is constantly changing. And while we’d never encourage you to unthinkingly follow trends, it’s good to stay alert to the direction in which the creative world is moving.</p>
<p>So in this post, we’ll look at some of the biggest illustration trends to come our way in 2017 so far. But if you’re not an illustrator yourself, don’t worry; you can still get on board.</p>
<p><a href="http://istockphoto.7eer.net/c/247618/258824/4205?sharedid=june_advertoriaI&amp;u=http%3A%2F%2Fwww.istockphoto.com%2Fgb%2Fstock-illustrations" target="_blank" rel="external">iStock by Getty Images</a>has a huge range of high-quality, low-cost and royalty-free illustrations, created by talented professionals, to quickly and easily download and use in your designs. </p>
<p>We’ve featured some examples in this post: just click on the image to find it on the site. Alternatively, head<a href="http://istockphoto.7eer.net/c/247618/258824/4205?sharedid=june_advertoriaI&amp;u=http%3A%2F%2Fwww.istockphoto.com%2Fgb%2Fstock-illustrations" target="_blank" rel="external">here</a>to see all the illustrations<a href="http://istockphoto.7eer.net/c/247618/258824/4205?sharedid=june_advertoriaI&amp;u=http%3A%2F%2Fwww.istockphoto.com" target="_blank" rel="external">iStock by Getty Images</a>has to offer, and use the site’s powerful search functionality to find exactly what you’re looking for.</p>
<h3 id="01-Flat-and-minimal"><a href="#01-Flat-and-minimal" class="headerlink" title="01. Flat and minimal"></a>01. Flat and minimal</h3><p><a href="http://istockphoto.7eer.net/c/247618/258824/4205?sharedid=june_advertoriaI&amp;u=http%3A%2F%2Fwww.istockphoto.com%2Fgb%2Fvector%2Fvector-trendy-minimalistic-red-fox-head-icon-in-polygonal-style-gm679856450-124564055%09%0A" target="_blank" rel="external"><img src="http://img2.tuicool.com/vyayMrN.jpg!web" alt="">Vector trendy minimalistic red fox in polygonal style, by TechDesignWork. This illustration could be used, for example, as a menu icon on an animal welfare or animal rights website</a></p>
<p>Flat design has been the big graphics trend of the 2010s, and illustrators have followed in its wake, creating increasingly minimal, pixel-perfect vectorised art to match.</p>
<p>Magoz, Anna Kövecses, Sergio Membrillas, Malika Favre and Rob Bailey are amongst the illustrators creating inspiring and original work using this approach.</p>
<p>With strong emphasis on reduction and subtraction, these kind of illustrations are able to cross language and cultural barriers to convey a subject instantly and clearly. And in a world dominated by mobile devices and high-resolution screens, the demand for flat and minimal illustration is unlikely to go away anytime soon.</p>
<h3 id="02-Abstract-and-zen"><a href="#02-Abstract-and-zen" class="headerlink" title="02. Abstract and zen"></a>02. Abstract and zen</h3><p><a href="http://istockphoto.7eer.net/c/247618/258824/4205?sharedid=june_advertoriaI&amp;u=http%3A%2F%2Fwww.istockphoto.com%2Fgb%2Fvector%2Fornate-circular-mandala-multicolored-designs-gm604349222-103770285" target="_blank" rel="external"><img src="http://img2.tuicool.com/fYFJZr2.jpg!web" alt="">Ornate Circular Mandala Multicolored Design by Jennifer Borton. This illustration could be used, for example, as a background texture on a yoga and meditation website</a></p>
<p>The world of 2016-2017 has been a chaotic one in which old certainties have been overturned and uncomfortable new realities are starting to sink in. So it’s not surprising that there’s been a trend in illustration towards more relaxing, spiritually inspired patterns and imagery.</p>
<p>Influenced by Buddhism, Hinduism and abstract religious art in general, this kind of zen illustration acts as a philosophical comfort blanket in a rapidly changing and divided world.</p>
<h3 id="03-Hand-drawn-geometrics"><a href="#03-Hand-drawn-geometrics" class="headerlink" title="03. Hand-drawn geometrics"></a>03. Hand-drawn geometrics</h3><p><a href="http://istockphoto.7eer.net/c/247618/258824/4205?sharedid=june_advertoriaI&amp;u=http%3A%2F%2Fwww.istockphoto.com%2Fgb%2Fvector%2Fvector-seamless-pattern-with-ink-circle-textures-abstract-seamless-background-with-gm694120898-128302289%09%0A" target="_blank" rel="external"><img src="http://img1.tuicool.com/Zfyumqn.jpg!web" alt="">Vector seamless pattern with ink circle textures by Utro Na More. This illustration could be used, for example, as the background for a book cover design</a></p>
<p>Geometric illustration has been a popular trend throughout the decade, but recently we’ve seen a move away from the clinical, digital vector approach and a softening of the style through the incorporation of hand-drawn elements.</p>
<p>This kind of illustration combines the brain-delighting qualities of mathematically-based patterns with the spirit and beauty of physical drawing and painting, to create images that are alluring, inviting and potentially quite magical.</p>
<h3 id="04-Tattoo-art"><a href="#04-Tattoo-art" class="headerlink" title="04. Tattoo art"></a>04. Tattoo art</h3><p><a href="http://istockphoto.7eer.net/c/247618/258824/4205?sharedid=june_advertoriaI&amp;u=http%3A%2F%2Fwww.istockphoto.com%2Fgb%2Fvector%2Fblue-phoenix-art-gm670133472-122538917%0A" target="_blank" rel="external"><img src="http://img1.tuicool.com/zEVBjeQ.jpg!web" alt="">Blue phoenix art by Stereohype. This illustration could be used, for example, as a graphical element on a festival poster or program</a></p>
<p>You may have noticed that these days, almost everyone under the age of 25 is covered in tattoos. No longer just for those who walk on the wild side, tattoos have entered the mainstream, with their designs become increasingly expressive and beautiful.</p>
<p>Now popular tattoo styles are crossing over into the world of illustration too. Their influence can be seen in the work of creatives as diverse as Elena Gumeniuk, Daniel Mackie and Ollie Munden, while tattooists who’ve crossed over into full-blown illustration include Nomi Chi, Shawn Barber and Tim Lehi.</p>
<h3 id="05-Illustrative-icons"><a href="#05-Illustrative-icons" class="headerlink" title="05. Illustrative icons"></a>05. Illustrative icons</h3><p><a href="http://istockphoto.7eer.net/c/247618/258824/4205?sharedid=june_advertoriaI&amp;u=http%3A%2F%2Fwww.istockphoto.com%2Fgb%2Fvector%2Foktoberfest-beer-icon-sign-illustration-gm693409416-128051075" target="_blank" rel="external"><img src="http://img0.tuicool.com/iIRRRbR.jpg!web" alt="">Oktoberfest beer icon sign by pseudodaemon. With Oktoberfest-themed events taking place around the world, this illustration could work well as a hero image on an event-specific app</a></p>
<p>Once, computer icons were just tiny, basic shapes made of just a few pixels. In recent years, however, rapidly increasing levels of resolution on even the smallest screens means there’s been in an explosion in demand for more sophisticated designs.</p>
<p>Illustrators have followed suit, creating high resolution icons that make strong use of colour and complexity, while holding true to the fundamental purpose of an icon: to immediately convey a concept in a simple and easy-to-understand way.</p>
<h3 id="06-Multiple-exposure"><a href="#06-Multiple-exposure" class="headerlink" title="06. Multiple exposure"></a>06. Multiple exposure</h3><p><a href="http://istockphoto.7eer.net/c/247618/258824/4205?sharedid=june_advertoriaI&amp;u=http%3A%2F%2Fwww.istockphoto.com%2Fgb%2Fvector%2Fmultiple-exposure-of-woman-and-trees-gm689165604-127201521" target="_blank" rel="external"><img src="http://img1.tuicool.com/IRJvInA.jpg!web" alt="">Multiple exposure of woman and trees by George Peters. This illustration could be used, for example, on a flyer for a rock band</a></p>
<p>Creative disciplines have always borrowed from each other, and today’s creatives are getting more multidisciplinary than ever. Consequently, one of the latest trend we’ve spotted takes an idea from the world of photography (multiple exposures) and transfers it to the world of illustration. When done right, this collage-style approach offers a great way to evoke a combination of thoughts and feelings in the viewer, in an eye-catching, emotionally engaging way.</p>
<h3 id="07-Vivid-colour"><a href="#07-Vivid-colour" class="headerlink" title="07. Vivid colour"></a>07. Vivid colour</h3><p><a href="http://istockphoto.7eer.net/c/247618/258824/4205?sharedid=june_advertoriaI&amp;u=http%3A%2F%2Fwww.istockphoto.com%2Fgb%2Fvector%2Fcolorful-humming-birds-and-rainbow-gm119958960-15439504" target="_blank" rel="external"><img src="http://img1.tuicool.com/qUBBryY.jpg!web" alt="">Colourful humming birds and rainbow by Cienpies. This illustration could be used, for example, to help illustrate a children’s book or leaflet</a></p>
<p>With creatives looking to brighten up an increasingly dark and divided world in 2017, vivid colour has been everywhere. Evident in the work of Nejc Prah, Jack Sachs, Dominic Kesterton, Sebastian Curi, and others, vivid doesn’t necessarily mean primary, but it does mean in-your-face, mood brightening hues that can’t fail to grab the public’s attention. And that can be invaluable when incorporating an illustration into your design, whether that’s for print or online.</p>
<h3 id="Make-your-visuals-stand-out"><a href="#Make-your-visuals-stand-out" class="headerlink" title="Make your visuals stand out"></a>Make your visuals stand out</h3><p>Whatever kind of creative project you’re involved in, visuals are key to its success. Our brains process images 60,000 times faster than text and so making sure your images stand out is essential.</p>
<p>At<a href="http://istockphoto.7eer.net/c/247618/258824/4205?sharedid=june_advertoriaI&amp;u=http%3A%2F%2Fwww.istockphoto.com%2Fgb%2Fstock-illustrations" target="_blank" rel="external">iStock by Getty Images</a>, you’ll find millions of authentic illustrations, and they even offer a free illustration to download each week. And the best news is, once you’ve found the perfect visual for your project, Creative Bloq readers can get a 10 per cent off discount with code CBTEN.</p>
<p>Source: <a href="http://www.tuicool.com/articles/hit/iYZ7R3Z" target="_blank" rel="external">http://www.creativebloq.com/features/7-hot-illustration-trends-of-2017-to-make-your-project-stand-out</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;The world of illustration is constantly changing. And while we’d never encourage you to unthinkingly follow trends, it’s good to stay ale
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>What’s new in JPA 2.2 – Java 8 Date and Time Types</title>
    <link href="https://gmagon.com/blog/2017/06/26/whats-new-in-jpa-22-java-8-date-and-time-types/"/>
    <id>https://gmagon.com/blog/2017/06/26/whats-new-in-jpa-22-java-8-date-and-time-types/</id>
    <published>2017-06-26T00:00:00.000Z</published>
    <updated>2017-06-26T09:37:13.942Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://twitter.com/vlad_mihalcea" target="_blank" rel="external">Follow @vlad_mihalcea</a></p>
<h2 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h2><p>Now that the<a href="https://www.jcp.org/en/jsr/results?id=6002" target="_blank" rel="external">JPA 2.2 Review Ballot was approved</a>, let’s start analyzing some of the new additions to the standard which have been supported by Hibernate for quite some time already.</p>
<p>In this article, we are going to see how Java 8 Date/Time API is supported and which types you need to use depending on your business case requirements.</p>
<h2 id="Java-8-Date-Time-support"><a href="#Java-8-Date-Time-support" class="headerlink" title="Java 8 Date/Time support"></a>Java 8 Date/Time support</h2><p>The<a href="https://jcp.org/aboutJava/communityprocess/maintenance/jsr338/ChangeLog-JPA-2.2-MR.txt" target="_blank" rel="external">JPA 2.2 change log</a>says that only<a href="https://github.com/javaee/jpa-spec/issues/63" target="_blank" rel="external">the following types are going to be supported</a>:</p>
<ul>
<li><code>java.time.LocalDate</code></li>
<li><code>java.time.LocalTime</code></li>
<li><code>java.time.LocalDateTime</code></li>
<li><code>java.time.OffsetTime</code></li>
<li><code>java.time.OffsetDateTime</code></li>
</ul>
<p>While<code>LocalDateTime</code>is rather straightforward since it only captures a point in time, similar to<code>java.util.Date</code>,<a href="https://docs.oracle.com/javase/8/docs/api/java/time/OffsetDateTime.html" target="_blank" rel="external"><code>OffsetDateTime</code></a>is more problematic because it only captures the offset, but not the time zone rules such as DST (Daylight Saving Time) or other rules defined by ZoneId and typically supported by<a href="https://docs.oracle.com/javase/8/docs/api/java/time/ZonedDateTime.html" target="_blank" rel="external"><code>ZonedDateTime</code></a>.</p>
<p>It’s also curious that the standard does not support the<a href="https://docs.oracle.com/javase/8/docs/api/java/time/Duration.html" target="_blank" rel="external"><code>java.time.Duration</code></a>type which can come in handy in many business use cases.</p>
<h2 id="Domain-Model"><a href="#Domain-Model" class="headerlink" title="Domain Model"></a>Domain Model</h2><p>Considering we have following entities in our system:</p>
<p><img src="http://img0.tuicool.com/yEBFvmm.png!web" alt=""></p>
<p>The<code>Employee</code>entity contains the following Java 8 Date Time attributes:</p>
<ul>
<li><code>birthday</code><br>attribute is a<br><code>LocalDate</code><br>since we are only interested in the Date part</li>
<li><code>updatedOn</code><br>is a<br><code>LocalDateTime</code><br>since this attribute needs to store both Date and Time information</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div></pre></td><td class="code"><pre><div class="line">@Entity</div><div class="line">(name = </div><div class="line">&quot;Employee&quot;</div><div class="line">)</div><div class="line">public class Employee &#123;</div><div class="line"></div><div class="line">    </div><div class="line">@Id</div><div class="line">@GeneratedValue</div><div class="line"></div><div class="line">    private Long id;</div><div class="line"></div><div class="line">    </div><div class="line">@NaturalId</div><div class="line"></div><div class="line">    private String name;</div><div class="line"></div><div class="line">    </div><div class="line">private</div><div class="line">LocalDate</div><div class="line">birthday</div><div class="line">;</div><div class="line"></div><div class="line">    @</div><div class="line">Column</div><div class="line">(name = </div><div class="line">&quot;updated_on&quot;</div><div class="line">)</div><div class="line">    </div><div class="line">private</div><div class="line">LocalDateTime</div><div class="line">updatedOn</div><div class="line">;</div><div class="line"></div><div class="line">    </div><div class="line">//Getters are setters omitted for brevity</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>The<code>Meeting</code>entity features the following Java 8 Date Time attributes:</p>
<ul>
<li><code>startsAt</code><br>is a<br><code>ZoneDateTime</code><br>which, even if not supported by JPA 2.2, is probably a more suitable version of<br><code>OffsetDateTime</code></li>
<li>the<br><code>duration</code><br>attribute might not be supported by JPA 2.2, but we will use it since Hibernate supports all these types</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div></pre></td><td class="code"><pre><div class="line">@Entity</div><div class="line">(name = </div><div class="line">&quot;Meeting&quot;</div><div class="line">)</div><div class="line">public class Meeting &#123;</div><div class="line"></div><div class="line">    </div><div class="line">@Id</div><div class="line"></div><div class="line">    private Long id;</div><div class="line"></div><div class="line">    </div><div class="line">@ManyToOne</div><div class="line">(fetch = FetchType.LAZY)</div><div class="line">    </div><div class="line">@JoinColumn</div><div class="line">(name = </div><div class="line">&quot;employee_id&quot;</div><div class="line">)</div><div class="line">    private Employee createdBy;</div><div class="line"></div><div class="line">    </div><div class="line">@Column</div><div class="line">(name = </div><div class="line">&quot;starts_at&quot;</div><div class="line">)</div><div class="line">    private ZonedDateTime startsAt;</div><div class="line"></div><div class="line">    </div><div class="line">private</div><div class="line">Duration</div><div class="line">duration</div><div class="line">;</div><div class="line">    </div><div class="line">    </div><div class="line">//Getters are setters omitted for brevity</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="Testing-time"><a href="#Testing-time" class="headerlink" title="Testing time"></a>Testing time</h2><p>Assuming we persist the following entities:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div></pre></td><td class="code"><pre><div class="line">Employee employee = </div><div class="line">new</div><div class="line"> Employee();</div><div class="line">employee.setName( </div><div class="line">&quot;Vlad Mihalcea&quot;</div><div class="line"> );</div><div class="line">employee.setBirthday(</div><div class="line">    LocalDate.</div><div class="line">of</div><div class="line">(</div><div class="line">        </div><div class="line">1981</div><div class="line">, </div><div class="line">12</div><div class="line">, </div><div class="line">10</div><div class="line"></div><div class="line">    )</div><div class="line">);</div><div class="line">employee.setUpdatedOn(</div><div class="line">    LocalDateTime.</div><div class="line">of</div><div class="line">(</div><div class="line">        </div><div class="line">2015</div><div class="line">, </div><div class="line">12</div><div class="line">, </div><div class="line">1</div><div class="line">,</div><div class="line">        </div><div class="line">8</div><div class="line">, </div><div class="line">0</div><div class="line">, </div><div class="line">0</div><div class="line"></div><div class="line">    )</div><div class="line">);</div><div class="line"></div><div class="line">entityManager.persist( employee );</div><div class="line"></div><div class="line">Meeting meeting = </div><div class="line">new</div><div class="line"> Meeting();</div><div class="line">meeting.setId( </div><div class="line">1</div><div class="line">L );</div><div class="line">meeting.setCreatedBy( employee );</div><div class="line">meeting.setStartsAt(</div><div class="line">    ZonedDateTime.</div><div class="line">of</div><div class="line">(</div><div class="line">        </div><div class="line">2017</div><div class="line">, </div><div class="line">6</div><div class="line">, </div><div class="line">25</div><div class="line">,</div><div class="line">        </div><div class="line">11</div><div class="line">, </div><div class="line">30</div><div class="line">, </div><div class="line">0</div><div class="line">, </div><div class="line">0</div><div class="line">,</div><div class="line">        ZoneId.systemDefault()</div><div class="line">    )</div><div class="line">);</div><div class="line">meeting.setDuration(</div><div class="line">    Duration.</div><div class="line">of</div><div class="line">( </div><div class="line">45</div><div class="line">, ChronoUnit.MINUTES )</div><div class="line">);</div><div class="line"></div><div class="line">entityManager.persist( meeting );</div></pre></td></tr></table></figure>
<p>Hibernate is going to generate the following SQL statements:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div></pre></td><td class="code"><pre><div class="line">INSERT</div><div class="line">INTO</div><div class="line"> Employee (</div><div class="line">    birthday, </div><div class="line">    </div><div class="line">name</div><div class="line">, </div><div class="line">    updated_on, </div><div class="line">    </div><div class="line">id</div><div class="line"></div><div class="line">) </div><div class="line"></div><div class="line">VALUES</div><div class="line"> (</div><div class="line">    </div><div class="line">&apos;1981-12-10&apos;</div><div class="line">, </div><div class="line">    </div><div class="line">&apos;Vlad Mihalcea&apos;</div><div class="line">, </div><div class="line">    </div><div class="line">&apos;2015-12-01 08:00:00.0&apos;</div><div class="line">, </div><div class="line">    </div><div class="line">1</div><div class="line"></div><div class="line">)</div><div class="line"></div><div class="line"></div><div class="line">INSERT</div><div class="line">INTO</div><div class="line"> Meeting (</div><div class="line">    employee_id, </div><div class="line">    </div><div class="line">duration</div><div class="line">, </div><div class="line">    starts_at, </div><div class="line">    </div><div class="line">id</div><div class="line"></div><div class="line">) </div><div class="line"></div><div class="line">VALUES</div><div class="line"> (</div><div class="line">    </div><div class="line">1</div><div class="line">, </div><div class="line">    </div><div class="line">2700000000000</div><div class="line">, </div><div class="line">    </div><div class="line">&apos;2017-06-25 11:30:00.0&apos;</div><div class="line">, </div><div class="line">    </div><div class="line">1</div><div class="line"></div><div class="line">)</div></pre></td></tr></table></figure>
<p>Both<code>LocalDateTime</code>and<code>ZonedDateTime</code>share the<code>org.hibernate.type.descriptor.sql.TimestampTypeDescriptor</code>, meaning that they are going to be persisted as<code>java.sql.Timestamp</code>.</p>
<p>While for<code>LocalDateTime</code>it makes no difference since, just like<code>java.sql.Timestamp</code>, it only captures a time snapshot, the<code>ZonedDateTime</code>is going to lose the zone information.</p>
<p>When loading back our entities:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div></pre></td><td class="code"><pre><div class="line">Employee employee = entityManager</div><div class="line">.unwrap( Session.</div><div class="line">class</div><div class="line"> )</div><div class="line">.bySimpleNaturalId( Employee.</div><div class="line">class</div><div class="line"> )</div><div class="line">.load( </div><div class="line">&quot;Vlad Mihalcea&quot;</div><div class="line"> );</div><div class="line"></div><div class="line">assertEquals(</div><div class="line">    LocalDate.</div><div class="line">of</div><div class="line">(</div><div class="line">        </div><div class="line">1981</div><div class="line">, </div><div class="line">12</div><div class="line">, </div><div class="line">10</div><div class="line"></div><div class="line">    ),</div><div class="line">    employee.getBirthday()</div><div class="line">);</div><div class="line">assertEquals(</div><div class="line">    LocalDateTime.</div><div class="line">of</div><div class="line">(</div><div class="line">        </div><div class="line">2015</div><div class="line">, </div><div class="line">12</div><div class="line">, </div><div class="line">1</div><div class="line">,</div><div class="line">        </div><div class="line">8</div><div class="line">, </div><div class="line">0</div><div class="line">, </div><div class="line">0</div><div class="line"></div><div class="line">    ),</div><div class="line">    employee.getUpdatedOn()</div><div class="line">);</div><div class="line"></div><div class="line">Meeting meeting = entityManager.find( Meeting.</div><div class="line">class</div><div class="line">, </div><div class="line">1</div><div class="line">L );</div><div class="line">assertSame(</div><div class="line">    employee, meeting.getCreatedBy()</div><div class="line">);</div><div class="line">assertEquals(</div><div class="line">    ZonedDateTime.</div><div class="line">of</div><div class="line">(</div><div class="line">        </div><div class="line">2017</div><div class="line">, </div><div class="line">6</div><div class="line">, </div><div class="line">25</div><div class="line">,</div><div class="line">        </div><div class="line">11</div><div class="line">, </div><div class="line">30</div><div class="line">, </div><div class="line">0</div><div class="line">, </div><div class="line">0</div><div class="line">,</div><div class="line">        ZoneId.systemDefault()</div><div class="line">    ),</div><div class="line">    meeting.getStartsAt()</div><div class="line">);</div><div class="line">assertEquals(</div><div class="line">    Duration.</div><div class="line">of</div><div class="line">( </div><div class="line">45</div><div class="line">, ChronoUnit.MINUTES ),</div><div class="line">    meeting.getDuration()</div><div class="line">);</div></pre></td></tr></table></figure>
<p>The original Java 8 Data Time objects match the ones being persisted.</p>
<p>If you enjoyed this article, I bet you are going to love<a href="https://leanpub.com/high-performance-java-persistence?utm_source=blog&amp;utm_medium=banner&amp;utm_campaign=article" target="_blank" rel="external">my book</a>as well.</p>
<p><img src="http://img0.tuicool.com/YbQ7ziI.jpg!web" alt=""></p>
<h2 id="Conclusion"><a href="#Conclusion" class="headerlink" title="Conclusion"></a>Conclusion</h2><p>The reason why<code>ZonedDateTime</code>equals the one we previously saved is because the undnerlying<code>TIMESTAMP</code>value was transposed in the current System Time Zone.</p>
<p>Until all JDBC Drivers will support<code>TIMESTAMP WITH TIMEZONE</code>at the<code>java.sql.Statement</code>paraeter value binding level which is a requirement for<a href="http://hibernate%20https//hibernate.atlassian.net/browse/HHH-11773" target="_blank" rel="external">HHH-11773</a>, it’s doubtful that you really need to use<code>ZonedDateTime</code>or<code>OffsetDateTime</code>.</p>
<p>Currently, it’s much wiser to save all<code>TIMESTAMP</code>values inUTC, meaning that<code>LocalDateTime</code>is a much better fit for your JPA entities.</p>
<p>If you liked this article, you might want to subscribe to<a href="http://eepurl.com/bg3d3n" target="_blank" rel="external">my newsletter</a> too.</p>
<p>Source: <a href="http://www.tuicool.com/articles/hit/UVF3Mzy" target="_blank" rel="external">https://vladmihalcea.com/2017/06/26/whats-new-in-jpa-2-2-java-8-date-and-time-types/</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://twitter.com/vlad_mihalcea&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Follow @vlad_mihalcea&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;Introduction&quot;&gt;&lt;a href=&quot;#
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>The Holy Wars of procrastination</title>
    <link href="https://gmagon.com/blog/2017/06/26/the-holy-wars-of-procrastination/"/>
    <id>https://gmagon.com/blog/2017/06/26/the-holy-wars-of-procrastination/</id>
    <published>2017-06-26T00:00:00.000Z</published>
    <updated>2017-06-26T09:37:13.938Z</updated>
    
    <content type="html"><![CDATA[<p>Procrastination is putting a task that we should be doing to do later instead of now. It may be because the task seems daunting or maybe because we sometimes have a strike of ergophobia (fear of completion) and in programming there are some frequent “wars” we tend to fight with the pretext “this is important before I start”.</p>
<p>This articles comes because I see a lot of awesome projects, mine and otherwise, never being finished because the wars that end up being fought with ourselves and colleagues are in most cases a form of procrastination.</p>
<p>Create that great ideia you have on your head instead of being idle by fighting wars that have no end goal.</p>
<p>To name a few, and some possible solutions, here were we go…</p>
<h3 id="IDE-war"><a href="#IDE-war" class="headerlink" title="IDE war"></a>IDE war</h3><p>This one occurs specially in teams to choose what IDE to use, VS Code vs Atom, Intellij vs Eclipse, vim vs emacs, and so many others. These take a lot of development time at the start of a project because everyone has a favorite and those who don’t don’t know what to use in the mist of all the arguments.</p>
<p>If have no clue of what to use do a quick search for what IDE supports the programming language you want to use “out of the box” and start learning it has you go, don’t get stuck with add-ons configurations and learning every feature from the start.</p>
<p>When on a team just decide which one most people are comfortable with and go with it, you can keep using your favorite one most of the time, you just have to keep the one that everyone agreed at the start at hand and configured just in case you have to do some pair programming.</p>
<h3 id="Syntax-war"><a href="#Syntax-war" class="headerlink" title="Syntax war"></a>Syntax war</h3><p>“I use tabs and not spaces”, “No ; at the end of a expression”, “I rather use “ than ‘ ”. I see this kind of arguments all the time and at my current job every project has a different style guide defined.</p>
<p>What we ended up noticing is that “consistency is key”, you can adapt faster than you think to a style guide that you are not familiar with you just keep a linter for each project.</p>
<p>If you’re having problems fighting this war by defining a style guide from scratch just use already existing ones, in case of javascript google’s or airbnb’s work like a charm with eslint running to check the files. You don’t need to leave it “has is”, adapt it to your preference has you start coding your project, in case of a team, with the feedback of everyone, if a rule is not fitting just discuss it when you’re having problems with it, maybe the rest of the team is on the same boat and it ends of being ignored on the linter.</p>
<h3 id="Over-engineering-war"><a href="#Over-engineering-war" class="headerlink" title="Over-engineering war"></a>Over-engineering war</h3><p>“I’m gonna do a calendar app with react…oh…I read that I should use redux, or maybe MOBX….I want to use ES6+ so maybe webpack along the way…I’m adding that cool thing, what was it…oh…yes GraphQL, so maybe I should use node on the backend and Grunt and PostCSS and Tape for testing, or enzyme, maybe I also install Yarn since is faster than NPM….almost forgot, should add I will add typescript since that way I will have less problems from what I’ve read, and….”</p>
<p>I think I made my point that, specially if your not familiar with those tech libraries/frameworks, 2 weeks later you will still have a Hello World and few else (if not, congrats!). Most of the time is better at the start of a project to keep with what you know plus 1 or 2 new libraries/frameworks that way you will see progress in your project and will learn new stuff nonetheless.</p>
<p>Any “extra” libraries aside from those 1 or 2 you choose at the start can be added as you have the need for them, you will know you have the need when the thought “this is repetitive and has to have a way to be made better” is starting to be frequent has you develop your project.</p>
<h3 id="Perfection-war"><a href="#Perfection-war" class="headerlink" title="Perfection war"></a>Perfection war</h3><p>“The project is not perfect yet, I have 100 more ideias, I have to add tests, need to have CI, need to…”</p>
<p>Same old same old, the fear of something we make being judged sometimes leaves us to endlessly add features and never releasing with fear that someone will not like it because that one feature that we add on our head was not sent from the start.</p>
<p>Perfect is the enemy of good, it’s better to have something good being used and improved than having something perfect just stuck in our heads or computer.</p>
<h3 id="TL-DR"><a href="#TL-DR" class="headerlink" title="TL;DR"></a>TL;DR</h3><ul>
<li>If you are working on a team, choose an IDE that fits most people, most of the time you will use your favorite tool, just keep the one that everyone agreed upon configured like the rest of the team just in case you have to do pair programming or something of the sort;</li>
<li>Choose 1 or 2 new frameworks or libraries to start your project alongside the tech stack you already are comfortable with, that way you will not be stuck for hours without end trying to understand 30 libraries you would like to know and think are necessary for the development of your project. This will make the project evolve more naturally and you will see faster progress;</li>
<li>Choose a syntax and adapt it as you go, it is hard, if not even impossible, to know before hand if style guides like google’s or airbnb’s will fit completely to your needs/habits;</li>
<li>Create an MVP and just add future features to a “up next” list of sorts, unless it is really critical to whatever you’re developing, most of the ideias you will have along the way are “should have” and not “must have or this project will go nowhere” it will only go nowhere if you never ship it.</li>
</ul>
<p>While it is important to fight this wars before the start of a project my point is that you should not overthink it, start doing whatever you have on your mind and learn has you go, adapt, but stop fighting wars that at the end, will only waste your time.</p>
<p>Now that you’ve finished reading, leave a comment, follow me at @daspinola and go get that brilliant project of yours on the way!</p>
<p>Source: <a href="http://www.tuicool.com/articles/hit/EfmIv2z" target="_blank" rel="external">https://medium.com/@daspinola/the-holy-wars-of-procrastination-ac0a1298a459</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Procrastination is putting a task that we should be doing to do later instead of now. It may be because the task seems daunting or maybe 
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>C++17 in details: Templates</title>
    <link href="https://gmagon.com/blog/2017/06/26/c++17-in-details-templates/"/>
    <id>https://gmagon.com/blog/2017/06/26/c++17-in-details-templates/</id>
    <published>2017-06-26T00:00:00.000Z</published>
    <updated>2017-06-26T09:37:13.931Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://img1.tuicool.com/raeeu2i.png!web" alt=""></p>
<p>For C++17 everyone wanted to have concepts, and as you know, we didn’t get them. But does it mean C++17 doesn’t improve templates/template meta-programming? Far from that! In my opinion, we get excellent features.</p>
<p>Read more for details.</p>
<h2 id="Intro"><a href="#Intro" class="headerlink" title="Intro"></a>Intro</h2><p>Do you work a lot with templates and meta-programming?</p>
<p>With C++17 we get a few nice improvements: some are quite small, but also there are notable features as well! All in all, the additions should significantly improve writing template code.</p>
<p>Today I wrote about:</p>
<ul>
<li>Template argument deduction for class templates</li>
<li><code>template</code><br><code>&lt;</code><br><code>auto</code><br><code>&gt;</code></li>
<li>Fold expressions</li>
<li><code>constexpr if</code></li>
<li>Plus some smaller, detailed improvements/fixes</li>
</ul>
<p>BTW: if you’re really brave you can still use concepts! They are merged into GCC so you can play with them even before they are finally published.</p>
<h2 id="The-Series"><a href="#The-Series" class="headerlink" title="The Series"></a>The Series</h2><p>This post is the third one in the series about C++17 features details.</p>
<p>The plan for the series</p>
<ol>
<li><a href="http://www.bfilipek.com/2017/05/cpp17-details-fixes-deprecation.html" target="_blank" rel="external">Fixes and deprecation</a></li>
<li><a href="http://www.bfilipek.com/2017/06/cpp17-details-clarifications.html" target="_blank" rel="external">Language clarification</a></li>
<li>Templates (<br><strong>today</strong><br>)</li>
<li>Attributes (soon)</li>
<li>Simplification (soon + 1)</li>
<li>Library changes 1 (soon + 2)</li>
<li>Library changes 2 (soon + 3)</li>
</ol>
<h2 id="Documents-amp-Links"><a href="#Documents-amp-Links" class="headerlink" title="Documents &amp; Links"></a>Documents &amp; Links</h2><p>Just to recall:</p>
<p>First of all, if you want to dig into the standard on your own, you can read the latest draft here:</p>
<p><a href="http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2017/n4659.pdf" target="_blank" rel="external">N4659, 2017-03-21,Working Draft, Standard for Programming Language C++</a>- the link also appears on the<a href="https://isocpp.org/" target="_blank" rel="external">isocpp.org</a>.</p>
<p>WG21 P0636r0:<a href="https://isocpp.org/files/papers/p0636r0.html" target="_blank" rel="external">Changes between C++14 and C++17</a></p>
<p>Compiler support:<a href="http://en.cppreference.com/w/cpp/compiler_support" target="_blank" rel="external">C++ compiler support</a></p>
<p>Moreover, I’ve prepared a list of concise descriptions of all of the C++17 language features:</p>
<p><a href="http://eepurl.com/cyycFz" target="_blank" rel="external">Download a free copy of my C++17 Cheat Sheet!</a></p>
<p>It’s a one-page reference card, PDF.</p>
<p>There’s also a talk from Bryce Lelbach:<a href="https://www.youtube.com/watch?v=LvwXJjRQfHk" target="_blank" rel="external">C++Now 2017: C++17 Features</a></p>
<p>And have a look at my master C++17 features post:C++17 Features</p>
<h2 id="Template-argument-deduction-for-class-templates"><a href="#Template-argument-deduction-for-class-templates" class="headerlink" title="Template argument deduction for class templates"></a>Template argument deduction for class templates</h2><p>I have good and bad news for you :)</p>
<p>Do you often use<code>make&lt;T&gt;</code>functions to construct a templated object (like<code>std::make_pair</code>)?</p>
<p>With C++17 you can forget about (most of) them and just use a regular constructor :)</p>
<p>That also means that a lot of your code - those<code>make&lt;T&gt;</code>functions can now be removed.</p>
<p>The reason?</p>
<p>C++17 filled a gap in the deduction rules for templates. Now the template deduction can happen for standard class templates and not just for functions.</p>
<p>For instance, the following code is (and was) legal:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line">void</div><div class="line">f</div><div class="line">(</div><div class="line">std</div><div class="line">::pair</div><div class="line">&lt;</div><div class="line">int</div><div class="line">, </div><div class="line">char</div><div class="line">&gt;</div><div class="line">)</div><div class="line">;</div><div class="line"></div><div class="line"></div><div class="line">// call:</div><div class="line"></div><div class="line">f(</div><div class="line">std</div><div class="line">::make_pair(</div><div class="line">42</div><div class="line">, </div><div class="line">&apos;z&apos;</div><div class="line">));</div></pre></td></tr></table></figure>
<p>Because<code>std::make_pair</code>is a template function (so we can perform template deduction).</p>
<p>But the following wasn’t (before C++17)</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line">void</div><div class="line">f</div><div class="line">(</div><div class="line">std</div><div class="line">::pair</div><div class="line">&lt;</div><div class="line">int</div><div class="line">, </div><div class="line">char</div><div class="line">&gt;</div><div class="line">)</div><div class="line">;</div><div class="line"></div><div class="line"></div><div class="line">// call:</div><div class="line"></div><div class="line">f(</div><div class="line">std</div><div class="line">::pair(</div><div class="line">42</div><div class="line">, </div><div class="line">&apos;z&apos;</div><div class="line">));</div></pre></td></tr></table></figure>
<p>Looks the same, right? This was not OK because<code>std::pair</code>is a template class, and template classes could not apply type deduction in their initialization.</p>
<p>But now we can do that so that the above code will compile under C++17 conformant compiler.</p>
<p>What about creating local variables like tuples or pairs?</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line">std</div><div class="line">::pair</div><div class="line">&lt;</div><div class="line">int</div><div class="line">, </div><div class="line">double</div><div class="line">&gt;</div><div class="line"> p(</div><div class="line">10</div><div class="line">, </div><div class="line">0.0</div><div class="line">);</div><div class="line"></div><div class="line">// same as</div><div class="line">std</div><div class="line">::</div><div class="line">pair </div><div class="line">p</div><div class="line">(</div><div class="line">10</div><div class="line">, </div><div class="line">0.0</div><div class="line">)</div><div class="line">; </div><div class="line">// deduced automatically!</div></pre></td></tr></table></figure>
<p>Try in Compiler Explorer:<a href="https://godbolt.org/g/z62jwK" target="_blank" rel="external">example, GCC 7.1</a>.</p>
<p>This can substantially reduce complex constructions like</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">std:</div><div class="line">:lock_guard</div><div class="line">&lt;</div><div class="line">std</div><div class="line">:</div><div class="line">:shared_timed_mutex</div><div class="line">, </div><div class="line">        </div><div class="line">std:</div><div class="line">:shared_lock</div><div class="line">&lt;</div><div class="line">std</div><div class="line">:</div><div class="line">:shared_timed_mutex</div><div class="line">&gt;</div><div class="line">&gt;</div><div class="line"> lck(mut</div><div class="line">_</div><div class="line">, r1);</div></pre></td></tr></table></figure>
<p>Can now become:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">std</div><div class="line">::</div><div class="line">lock_guard </div><div class="line">lck</div><div class="line">(mut_, r1)</div><div class="line">;</div></pre></td></tr></table></figure>
<p>Note, that partial deduction cannot happen, you have to specify all the template parameters or none:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div></pre></td><td class="code"><pre><div class="line">std</div><div class="line">::</div><div class="line">tuple </div><div class="line">t</div><div class="line">(</div><div class="line">1</div><div class="line">, </div><div class="line">2</div><div class="line">, </div><div class="line">3</div><div class="line">)</div><div class="line">;              </div><div class="line">// OK: deduction</div><div class="line">std</div><div class="line">::tuple</div><div class="line">&lt;</div><div class="line">int</div><div class="line">,</div><div class="line">int</div><div class="line">,</div><div class="line">int</div><div class="line">&gt;</div><div class="line"> t(</div><div class="line">1</div><div class="line">, </div><div class="line">2</div><div class="line">, </div><div class="line">3</div><div class="line">); </div><div class="line">// OK: all arguments are provided</div><div class="line">std</div><div class="line">::tuple</div><div class="line">&lt;</div><div class="line">int</div><div class="line">&gt;</div><div class="line"> t(</div><div class="line">1</div><div class="line">, </div><div class="line">2</div><div class="line">, </div><div class="line">3</div><div class="line">);         </div><div class="line">// Error: partial deduction</div></pre></td></tr></table></figure>
<p>Also if you’re adventurous you can create your custom class template deduction guides: see here for more information: recent post: Arne Mertz:<a href="https://arne-mertz.de/2017/06/class-template-argument-deduction/#User-defined_deduction_guides" target="_blank" rel="external">Modern C++ Features - Class Template Argument Deduction</a>.</p>
<p>BTW: why not all<code>make</code>functions can be removed? For example, consider<code>make_unique</code>or<code>make_shared</code>are they only for ‘syntactic sugar’ ? I’ll leave this as an open question for now.</p>
<p>More details in</p>
<ul>
<li><a href="http://wg21.link/p0091r3" target="_blank" rel="external">P0091R3</a></li>
<li>Simon Brand:<br><a href="https://blog.tartanllama.xyz/c++/2017/01/11/deduction-for-class-templates/" target="_blank" rel="external">Template argument deduction for class template constructors</a></li>
<li><a href="http://en.cppreference.com/w/cpp/language/class_template_deduction" target="_blank" rel="external">Class template deduction(since C++17) - cppreference</a><br>.</li>
</ul>
<p>MSVC<strong>not yet</strong>, GCC: 7.0, Clang:<strong>not yet</strong>.</p>
<h2 id="Declaring-non-type-template-parameters-with-auto"><a href="#Declaring-non-type-template-parameters-with-auto" class="headerlink" title="Declaring non-type template parameters with auto"></a>Declaring non-type template parameters with auto</h2><p>This is another part of the strategy to use<code>auto</code>everywhere. With C++11 and C++14 you can use it to automatically deduce variables or even return types, plus there are also generic lambdas. Now you can also use it for deducing non-type template parameters.</p>
<p>For example:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">template</div><div class="line">&lt;</div><div class="line">auto</div><div class="line"> value</div><div class="line">&gt;</div><div class="line">void</div><div class="line">f</div><div class="line">()</div><div class="line">&#123; &#125;</div><div class="line"></div><div class="line">f</div><div class="line">&lt;</div><div class="line">10</div><div class="line">&gt;</div><div class="line">();               </div><div class="line">// deduces int</div></pre></td></tr></table></figure>
<p>This is useful, as you don’t have to have a separate parameter for the type of non-type parameter. Like:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">template</div><div class="line">&lt;</div><div class="line">typename</div><div class="line"> Type, Type value</div><div class="line">&gt;</div><div class="line">constexpr</div><div class="line"> Type TConstant = value;</div><div class="line">                </div><div class="line">// ^^^^                        ^^^^  </div><div class="line">constexpr</div><div class="line">auto</div><div class="line">const</div><div class="line"> MySuperConst = TConstant</div><div class="line">&lt;</div><div class="line">int</div><div class="line">, </div><div class="line">100</div><div class="line">&gt;</div><div class="line">;</div></pre></td></tr></table></figure>
<p>with C++17 it’s a bit simpler:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">template</div><div class="line">&lt;</div><div class="line">auto</div><div class="line"> value</div><div class="line">&gt;</div><div class="line">constexpr</div><div class="line">auto</div><div class="line"> TConstant = value;</div><div class="line">                             </div><div class="line">// ^^^^</div><div class="line">constexpr</div><div class="line">auto</div><div class="line">const</div><div class="line"> MySuperConst = TConstant </div><div class="line">&lt;</div><div class="line">100</div><div class="line">&gt;</div><div class="line">;</div></pre></td></tr></table></figure>
<p>So no need to write<code>Type</code>explicitly.</p>
<p>As one of the advanced uses a lot of papers/blogs/talks point to an example of Heterogeneous compile time list:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">template</div><div class="line">&lt;</div><div class="line">auto</div><div class="line"> ... vs</div><div class="line">&gt;</div><div class="line">struct</div><div class="line"> HeterogenousValueList &#123;&#125;;</div><div class="line"></div><div class="line">using</div><div class="line"> MyList = HeterogenousValueList</div><div class="line">&lt;</div><div class="line">&apos;a&apos;</div><div class="line">, </div><div class="line">100</div><div class="line">, </div><div class="line">&apos;b&apos;</div><div class="line">&gt;</div><div class="line">;</div></pre></td></tr></table></figure>
<p>Before C++17 it was not possible to declare such list directly, some wrapper class would have to be provided first.</p>
<p>More details in</p>
<ul>
<li><a href="http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2016/p0127r2.html" target="_blank" rel="external">P0127R2 - Declaring non-type template parameters with auto</a></li>
<li><a href="http://open-std.org/JTC1/SC22/WG21/docs/papers/2016/p0127r1.html" target="_blank" rel="external">P0127R1 - Declaring non-type template arguments with auto</a><ul>
<li>motivation, examples, discussion.</li>
</ul>
</li>
<li><a href="https://stackoverflow.com/questions/38026884/advantages-of-auto-in-template-parameters-in-c17" target="_blank" rel="external">c++ - Advantages of auto in template parameters in C++17 - Stack Overflow</a></li>
<li><a href="https://herbsutter.com/2016/06/30/trip-report-summer-iso-c-standards-meeting-oulu/" target="_blank" rel="external">Trip report: Summer ISO C++ standards meeting (Oulu) | Sutter’s Mill</a></li>
</ul>
<p>MSVC<strong>not yet</strong>, GCC: 7.0, Clang: 4.0.</p>
<h2 id="Fold-expressions"><a href="#Fold-expressions" class="headerlink" title="Fold expressions"></a>Fold expressions</h2><p>With C++11 we got variadic templates which is a great feature, especially if you want to work with a variable number of input parameters to a function. For example, previously (pre C++11) you had to write several different versions of a function (like one for one parameter, another for two parameters, another for three params… ).</p>
<p>Still, variadic templates required some additional code when you wanted to implement ‘recursive’ functions like<code>sum</code>,<code>all</code>. You had to specify rules for the recursion:</p>
<p>For example:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line">auto</div><div class="line">SumCpp11</div><div class="line">()</div><div class="line">&#123;</div><div class="line">    </div><div class="line">return</div><div class="line">0</div><div class="line">;</div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line">template</div><div class="line">&lt;</div><div class="line">typename</div><div class="line"> T1, </div><div class="line">typename</div><div class="line">... T</div><div class="line">&gt;</div><div class="line">auto</div><div class="line">SumCpp11</div><div class="line">(T1 s, T... ts)</div><div class="line">&#123;</div><div class="line">    </div><div class="line">return</div><div class="line"> s + SumCpp11(ts...);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>And with C++17 we can write much simpler code:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line">template</div><div class="line">&lt;</div><div class="line">typename</div><div class="line"> ...Args</div><div class="line">&gt;</div><div class="line">auto</div><div class="line">sum</div><div class="line">(Args ...args)</div><div class="line">&#123; </div><div class="line">    </div><div class="line">return</div><div class="line"> (args + ... + </div><div class="line">0</div><div class="line">); </div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line">// or even:</div><div class="line">template</div><div class="line">&lt;</div><div class="line">typename</div><div class="line"> ...Args</div><div class="line">&gt;</div><div class="line">auto</div><div class="line">sum2</div><div class="line">(Args ...args)</div><div class="line">&#123; </div><div class="line">    </div><div class="line">return</div><div class="line"> (args + ...);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>Fold expressions over a<a href="http://en.cppreference.com/w/cpp/language/parameter_pack" target="_blank" rel="external">parameter pack</a>.</p>
<table>
<thead>
<tr>
<th style="text-align:left">Expression</th>
<th style="text-align:left">Expansion</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">(… op pack)</td>
<td style="text-align:left">((pack1 op pack2) op …) op packN</td>
</tr>
<tr>
<td style="text-align:left">(init op … op pack)</td>
<td style="text-align:left">(((init op pack1) op pack2) op …) op packN</td>
</tr>
<tr>
<td style="text-align:left">(pack op …)</td>
<td style="text-align:left">pack1 op (… op (packN-1 op packN))</td>
</tr>
<tr>
<td style="text-align:left">(pack op … op init)</td>
<td style="text-align:left">pack1 op (… op (packN-1 op (packN op init)))</td>
</tr>
</tbody>
</table>
<p>Also by default we get the following values for empty parameter packs:</p>
<table>
<thead>
<tr>
<th style="text-align:left">Operator</th>
<th style="text-align:left">default value</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">+</td>
<td style="text-align:left">0</td>
</tr>
<tr>
<td style="text-align:left">*</td>
<td style="text-align:left">1</td>
</tr>
<tr>
<td style="text-align:left">&amp;</td>
<td style="text-align:left">-1</td>
</tr>
<tr>
<td style="text-align:left">\</td>
<td style="text-align:left"></td>
<td>0</td>
</tr>
<tr>
<td style="text-align:left">&amp;&amp;</td>
<td style="text-align:left">true</td>
</tr>
<tr>
<td style="text-align:left">\</td>
<td style="text-align:left">\</td>
<td></td>
<td>false</td>
</tr>
<tr>
<td style="text-align:left">,</td>
<td style="text-align:left">void()</td>
</tr>
</tbody>
</table>
<p>Here’s quite nice implementation of a<code>printf</code>using folds:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line">template</div><div class="line">&lt;</div><div class="line">typename</div><div class="line"> ...Args</div><div class="line">&gt;</div><div class="line">void</div><div class="line">FoldPrint</div><div class="line">(Args</div><div class="line">&amp;</div><div class="line">&amp;</div><div class="line">... args)</div><div class="line">&#123;</div><div class="line">    (</div><div class="line">cout</div><div class="line">&lt;</div><div class="line">&lt;</div><div class="line"> ... </div><div class="line">&lt;</div><div class="line">&lt;</div><div class="line"> forward</div><div class="line">&lt;</div><div class="line">Args</div><div class="line">&gt;</div><div class="line">(args)) </div><div class="line">&lt;</div><div class="line">&lt;</div><div class="line">&apos;\n&apos;</div><div class="line">;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>Or a fold over a comma operator:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line">template</div><div class="line">&lt;</div><div class="line">typename</div><div class="line"> T, </div><div class="line">typename</div><div class="line">... Args</div><div class="line">&gt;</div><div class="line">void</div><div class="line">push_back_vec</div><div class="line">(</div><div class="line">std</div><div class="line">::</div><div class="line">vector</div><div class="line">&lt;</div><div class="line">T</div><div class="line">&gt;</div><div class="line">&amp;</div><div class="line"> v, Args</div><div class="line">&amp;</div><div class="line">&amp;</div><div class="line">... args)</div><div class="line">&#123;</div><div class="line">    (v.push_back(args), ...);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>In general, fold expression allows writing cleaner, shorter and probably easier to read code.</p>
<p>More details in:</p>
<ul>
<li><a href="http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2014/n4295.html" target="_blank" rel="external">N4295</a><br>and<br><a href="http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2014/n4295.html" target="_blank" rel="external">N4295</a></li>
<li>“Using fold expressions to simplify variadic function templates” in<br><a href="http://amzn.to/2t62io9" target="_blank" rel="external">Modern C++ Programming Cookbook</a><br>.</li>
<li><a href="https://tartanllama.github.io/c++/2016/11/10/exploding-tuples-fold-expressions/" target="_blank" rel="external">Simon Brand: Exploding tuples with fold expressions</a></li>
<li><a href="http://baptiste-wicht.com/posts/2015/05/cpp17-fold-expressions.html" target="_blank" rel="external">Baptiste Wicht: C++17 Fold Expressions</a></li>
<li><a href="http://www.modernescpp.com/index.php/fold-expressions" target="_blank" rel="external">Fold Expressions - ModernesCpp.com</a></li>
</ul>
<p>MSVC<strong>not yet</strong>, GCC: 6.0, Clang: 3.6 (N4295)/3.9 (N4295).</p>
<h2 id="constexpr-if"><a href="#constexpr-if" class="headerlink" title="constexpr if"></a><code>constexpr if</code></h2><p>This is a big one!</p>
<p>The static-if for C++!</p>
<p>The feature allows you to discard branches of an if statement at compile-time based on a constant expression condition.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">if</div><div class="line"> constexpr(cond)</div><div class="line">     statement1; </div><div class="line">//</div><div class="line"> Discarded </div><div class="line">if</div><div class="line"> cond is </div><div class="line">false</div><div class="line">else</div><div class="line"></div><div class="line">     statement2; </div><div class="line">//</div><div class="line"> Discarded </div><div class="line">if</div><div class="line"> cond is </div><div class="line">true</div></pre></td></tr></table></figure>
<p>For example:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line">template</div><div class="line">&lt;</div><div class="line">typename</div><div class="line"> T</div><div class="line">&gt;</div><div class="line">auto</div><div class="line">get_value</div><div class="line">(T t)</div><div class="line">&#123;</div><div class="line">    </div><div class="line">if</div><div class="line">constexpr</div><div class="line">(</div><div class="line">std</div><div class="line">::is_pointer_v</div><div class="line">&lt;</div><div class="line">T</div><div class="line">&gt;</div><div class="line">)</div><div class="line">return</div><div class="line"> *t</div><div class="line">;</div><div class="line">    </div><div class="line">else</div><div class="line">return</div><div class="line"> t;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>This removes a lot of the necessity for tag dispatching and SFINAE and even for<code>#ifdefs</code>.</p>
<p>I’d like to return to this feature when we are discussing features of C++17 that simplify the language. I hope to come back with more examples of<code>constexpr if</code>.</p>
<p>More details in:</p>
<ul>
<li><a href="http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2016/p0292r2.html" target="_blank" rel="external">P0292R2</a></li>
<li>Simon Brand:<br><a href="https://blog.tartanllama.xyz/c++/2016/12/12/if-constexpr/" target="_blank" rel="external">Simplifying templates and #ifdefs with if constexpr</a></li>
</ul>
<p>MSVC<strong>not yet</strong>, GCC: 7.0, Clang: 3.9.</p>
<h2 id="Other"><a href="#Other" class="headerlink" title="Other"></a>Other</h2><p>In C++17 there are also other language features related to templates. In this post, I wanted to focus on biggest enhancements, so I’ll just mention the other briefly:</p>
<ul>
<li><p>Allow<code>typename</code>in a template template parameters:<a href="http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2014/n4051.html" target="_blank" rel="external">N4051</a>.</p>
<ul>
<li>Allows you to use<br><code>typename</code><br>instead of<br><code>class</code><br>when declaring a template template parameter. Normal type parameters can use them interchangeably, but template template parameters were restricted to<br><code>class</code><br>.</li>
</ul>
</li>
<li><p>DR: Matching of template template-arguments excludes compatible templates:<a href="http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2016/p0522r0.html" target="_blank" rel="external">P0522R0</a>.</p>
<ul>
<li>Improves matching of template template arguments. Resolves<br><a href="http://open-std.org/JTC1/SC22/WG21/docs/papers/2015/n4457.html#150" target="_blank" rel="external">Core issue CWG 150</a><br>.</li>
</ul>
</li>
<li><p>Allow constant evaluation for all non-type template arguments:<a href="http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2014/n4268.html" target="_blank" rel="external">N4268</a></p>
<ul>
<li>Remove syntactic restrictions for pointers, references, and pointers to members that appear as non-type template parameters:</li>
</ul>
</li>
<li><p><code>constexpr</code>lambdas:<a href="http://wg21.link/p0170r1" target="_blank" rel="external">P0170R1</a></p>
<ul>
<li>Lambda expressions may now be constant expressions.</li>
</ul>
</li>
</ul>
<h2 id="Summary"><a href="#Summary" class="headerlink" title="Summary"></a>Summary</h2><p>Is C++17 improving templates and meta-programming? Definitely!</p>
<p>We have really solid features like template deduction for class templates,<code>template&lt;auto&gt;</code>plus some detailed features that fix some of the problems.</p>
<p>Still, for me, the most powerful features, that might have a significant impact on the code is<code>constexpr if</code>and folds. They greatly clean up the code and make it more readable.</p>
<p>What are your favorite parts regarding templates?</p>
<p>Next time we’ll address attributes like<code>[[fallthrough]]</code>or<code>[[nodiscard]]</code>, and I’d like to recall other, already existing attributes. Stay tuned!</p>
<p>Once again, remember to grab my<a href="http://eepurl.com/cyycFz" target="_blank" rel="external"><strong>C++17 Language Ref Card</strong></a>.</p>
<p>Source: <a href="http://www.tuicool.com/articles/hit/rauARne" target="_blank" rel="external">http://www.bfilipek.com/2017/06/cpp17-details-templates.html</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://img1.tuicool.com/raeeu2i.png!web&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;For C++17 everyone wanted to have concepts, and as you know, we didn’t 
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Snap Behaviour iOS Tutorial</title>
    <link href="https://gmagon.com/blog/2017/06/26/snap-behaviour-ios-tutorial/"/>
    <id>https://gmagon.com/blog/2017/06/26/snap-behaviour-ios-tutorial/</id>
    <published>2017-06-26T00:00:00.000Z</published>
    <updated>2017-06-26T09:37:13.934Z</updated>
    
    <content type="html"><![CDATA[<p>As part of UIKit Dynamics you can add Snap Behavior to a view, which allows it  to be “snapped” to a specific location. The view will move to its new position as if it is pulled by a spring. In this tutorial we will let the user click on the screen to “snap” an image into place. This tutorial is made with Xcode 8.3.3 and built for iOS 10.3.</p>
<p>Open Xcode and create a new Single View Application.</p>
<p><img src="http://img2.tuicool.com/q6zmueM.png!web" alt=""></p>
<p>For product name, use<strong>IOS10SnapBehaviourTutorial</strong>and then fill out the Organization Name and Organization Identifier with your customary values. Enter Swift as Language and make sure only iPhone is selected in Devices.</p>
<p><img src="http://img2.tuicool.com/NzQvArq.png!web" alt=""></p>
<p>Go the<strong>Storyboard</strong>and drag an Image View to the main view, Go to the Size Inspector and set the size to 100 by 100 points.</p>
<p><img src="http://img1.tuicool.com/zuAJziF.png!web" alt=""></p>
<p>We need a image to insert in our Image View. Downloadthisimage, unpack it and add it to the project. </p>
<p><img src="http://img2.tuicool.com/euYBfir.png!web" alt=""></p>
<p>Select the Image View, go to the Attributes Inspector and add the apple.jpg file to Image field.</p>
<p><img src="http://img2.tuicool.com/Y3iuqyM.png!web" alt=""></p>
<p>The Storyboard should now look like this.</p>
<p><img src="http://img0.tuicool.com/vmQjI3q.png!web" alt=""></p>
<p>Open the Assistant Editor and make sure the ViewController.swift file is visible. Ctrl + drag from the Image View to the ViewController class and create the following Outlet.</p>
<p><img src="http://img1.tuicool.com/MfuIj2z.png!web" alt=""></p>
<p>Go to the<strong>ViewController.swift</strong>file and add the following properties</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">var</div><div class="line">animator</div><div class="line">:UIDynamicAnimator</div><div class="line">!</div><div class="line"></div><div class="line">var</div><div class="line">snapBehaviour</div><div class="line">:UISnapBehavior</div><div class="line">!</div></pre></td></tr></table></figure>
<p>The animator property provides physics-related capabilities for its item and the snapBehaviour property will be applied to the Image View later on. Next, change the<strong>viewDidLoad</strong>method to</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line">override</div><div class="line">func</div><div class="line">viewDidLoad</div><div class="line">()</div><div class="line"> &#123;</div><div class="line">    </div><div class="line">super</div><div class="line">.viewDidLoad()</div><div class="line">        </div><div class="line">    </div><div class="line">// Create the Tap Gesture Recognizer</div><div class="line">let</div><div class="line"> tapGesture = </div><div class="line">UITapGestureRecognizer</div><div class="line">(target: </div><div class="line">self</div><div class="line">, action: #selector(userHasTapped))</div><div class="line">    </div><div class="line">self</div><div class="line">.view.addGestureRecognizer(tapGesture)</div><div class="line">        </div><div class="line">    </div><div class="line">// Create the Dynamic Animator</div><div class="line"></div><div class="line">    animator = </div><div class="line">UIDynamicAnimator</div><div class="line">(referenceView: </div><div class="line">self</div><div class="line">.view)</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>A Tap Gesture Recognizer is created, which will call the userHasTapped method when the user taps on the screen. The Dynamic Animator is created with the main view as its reference view. Next, implement the<strong>userHasTapped</strong>method</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line">func</div><div class="line">userHasTapped</div><div class="line">(tap:UITapGestureRecognizer)</div><div class="line"> &#123;</div><div class="line">    </div><div class="line">let</div><div class="line"> touchPoint = tap.location(</div><div class="line">in</div><div class="line">: </div><div class="line">self</div><div class="line">.view)</div><div class="line">    </div><div class="line">if</div><div class="line"> snapBehaviour != </div><div class="line">nil</div><div class="line"> &#123;</div><div class="line">        animator.removeBehavior(snapBehaviour)</div><div class="line">    &#125;</div><div class="line">        </div><div class="line">    snapBehaviour = </div><div class="line">UISnapBehavior</div><div class="line">(item: imageView, snapTo: touchPoint)</div><div class="line">    snapBehaviour.damping = </div><div class="line">0.3</div><div class="line"></div><div class="line">    animator.addBehavior(snapBehaviour)</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>First the point is captured where the user has touched the screen. There can be only one Snap Behaviour instance active so we check if there is already a behaviour active. If so, we will remove this behaviour. Next the Snap Behaviour is initialized with the<strong>item:snapToPoint</strong>initializer. The item is our Image View and the point to snap to is the user’s touch input. The damping property is the amount of oscillation the item has of the end of the snap animation. Finally, the Snap Behaviour is added to the Dynamic Animator.</p>
<p>Build and Runthe project, click anywhere on the screen to “snap” the image to its new location.</p>
<p><img src="http://img2.tuicool.com/mIvmY33.png!web" alt=""></p>
<p>You can download the source code of the<strong>IOS10SnapBehaviourTutorial</strong>at the ioscreator repository on<a href="https://github.com/ioscreator/ioscreator" target="_blank" rel="external">Github</a></p>
<p>Source: <a href="http://www.tuicool.com/articles/hit/QJfqM33" target="_blank" rel="external">https://www.ioscreator.com/tutorials/snap-behaviour-ios-tutorial-ios10</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;As part of UIKit Dynamics you can add Snap Behavior to a view, which allows it  to be “snapped” to a specific location. The view will mov
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>An Overview of Garbage Collection in Java</title>
    <link href="https://gmagon.com/blog/2017/06/26/an-overview-of-garbage-collection-in-java/"/>
    <id>https://gmagon.com/blog/2017/06/26/an-overview-of-garbage-collection-in-java/</id>
    <published>2017-06-26T00:00:00.000Z</published>
    <updated>2017-06-26T10:20:16.608Z</updated>
    
    <content type="html"><![CDATA[<h2 id="An-Overview-of-Garbage-Collection-in-Java"><a href="#An-Overview-of-Garbage-Collection-in-Java" class="headerlink" title="An Overview of Garbage Collection in Java"></a>An Overview of Garbage Collection in Java</h2><p>DZone’s Guide to</p>
<p>Here we examine the importance of proper garbage collection for Java apps, the components of GC, and the various patterns at your disposal.</p>
<p><a href="https://dzone.com/users/2746645/guideinfoways.html" target="_blank" rel="external">Johnny Morgan</a></p>
<p>Jun. 26, 17</p>
<p>·</p>
<p><a href="https://dzone.com/java-jdk-development-tutorials-tools-news" target="_blank" rel="external">Java Zone</a></p>
<p>Free Resource</p>
<p>Join the DZone community and get the full member experience.</p>
<p>What every Java engineer should know about microservices:<a href="https://info.lightbend.com/COLL-20XX-Reactive-Microservices-Architecture-RES-LP.html?utm_source=dzone&amp;utm_medium=pre-roll-text&amp;utm_campaign=COLL-20XX-Reactive-Microservices-Architecture&amp;utm_term=none&amp;utm_content=java-zone" target="_blank" rel="external">Reactive Microservices Architecture</a>.  Brought to you in partnership with<a href="https://info.lightbend.com/COLL-20XX-Reactive-Microservices-Architecture-RES-LP.html?utm_source=dzone&amp;utm_medium=pre-roll-text&amp;utm_campaign=COLL-20XX-Reactive-Microservices-Architecture&amp;utm_term=none&amp;utm_content=java-zone" target="_blank" rel="external">Lightbend</a>.</p>
<p>The Java garbage collector poses a great impact on the overall working and performance of an application. As the size of the garbage grows, the runtime of an application decreases. Hence, it is essential that you clear this garbage off of your application every now and then to enhance its productivity and user performance.</p>
<p>Garbage collection can be quite a daunting task. After all, choosing a wrong garbage collector type or settings can hamper the functionality of your app. There are typically seven types of garbage collectors known to us. These are classically bifurcated between the ‘mostly’ and ‘most concurrent’ category. With the ‘mostly’ types, they sometimes do not operate as expected and a fallback mechanism takes place. On the other hand, the ‘most concurrent’ collectors function concurrently with the application’s execution and rarely stop the world.</p>
<h2 id="Steps-Involved-in-Garbage-Collection"><a href="#Steps-Involved-in-Garbage-Collection" class="headerlink" title="Steps Involved in Garbage Collection"></a>Steps Involved in Garbage Collection</h2><p>Before implementing the garbage cleaning step, it is essential to note whether your application has touched the GC safe point. That is the range where the collector can quickly recognize the thread execution references and complete the process. If your application has to wait for the safe point, it could very well run out of memory and collapse.</p>
<ul>
<li><p>Mark: Otherwise known as trace, this step involves finding all the live and dead objects in the expansive heap. The collector paints all the reachable live objects, and those left are tagged as dead.</p>
</li>
<li><p>Sweep: Here, the garbage collector looks for dead objects and tracks their location. The bigger the heap, the more time will it take in the sweep to complete the task.</p>
</li>
<li><p>Compact: In this step, the garbage collector rearranges the live objects in order to make the space congestion free. As the process commences, remapping takes place, which means your application’s overall runtime should be significantly enhanced.</p>
</li>
</ul>
<h2 id="Types-of-Collectors"><a href="#Types-of-Collectors" class="headerlink" title="Types of Collectors"></a>Types of Collectors</h2><ul>
<li><p>Mark/sweep/compact collector: Performs the function in three phases.</p>
</li>
<li><p>Mark/Compact Collector: Performs the task in two steps, skipping the sweep phase.</p>
</li>
<li><p>Copying Collector: Performs all the three phases in one go. It’s quite aggressive in nature and makes use of ‘from’ and ‘to’ space to move all the live objects. It then fixes the bugs and removes the garbage.</p>
</li>
<li><p>Generation Collector: This works on the principle that most objects die young. The software creates new objects but at the same time, sooner rather later, it discards them, too. Through a generator collector, a developer can filter the creation, reduce the rate at which the Young Generation is pushed to the Old Generation, and keep pace with contemporary CPU throughput.</p>
</li>
<li><p>Remembered Set: In this set, marks are used. These record the exact location of the Young Generation. Write banners are put to use to track the references from these generations into the Old Generation and keep these ‘remembered sets’ up-to-date.</p>
</li>
</ul>
<p>Note on commercial implementations: There are two basic commercially available and proven approaches for the garbage collection implementation. The first one being a parallel approach and the other being the concurrent approach. </p>
<h2 id="Role-of-Developers-and-Architects"><a href="#Role-of-Developers-and-Architects" class="headerlink" title="Role of Developers and Architects"></a>Role of Developers and Architects</h2><p>The first and the foremost thing is to understand the nature of the application and the core functionality of the garbage collector.</p>
<ul>
<li><p>Garbage Collection Metrics: A plethora of application features affect the workings of the garbage collector. These include the allocation time of objects in memory, their life, and the need to save some for a long time. The mutation rate is the next thing that matters. And lastly, there are the metrics that help track the live set and the heap shape of these objects.</p>
</li>
<li><p>The compaction time and the mark time make for the most important metrics for tracking the time of the garbage collection cycle. While the latter measures the time taken for identification of live objects, the former maps time taken to free up the memory and do the necessary allocation.</p>
</li>
<li><p>Empty Memory for Clean-up Process: Each of these above-listed garbage collectors needs some amount of space to perform the task efficiently. More space practically halves the collector’s work and CPU consumption required for the job. The opposite applies to when there’s a shortage of empty memory.</p>
</li>
<li><p>Implementing the GC Strategy: While the process of compaction is unavoidable, what many GCs do is delay the process to a possible point and free the easy empty space as soon as possible. Another technique is the focusing on concurrent markings and sweeping while at the same time skipping compaction. This proves helpful, too.</p>
</li>
</ul>
<p>Bottom line, garbage collection is an integral part of an application’s performance over the Java platform. As Java devs, we need to implement strategies in order to build an application that speaks of excellent performance, scalability, and reliability.</p>
<p>Microservices for Java, explained. Revitalize your legacy systems (and your career) with<a href="https://info.lightbend.com/COLL-20XX-Reactive-Microservices-Architecture-RES-LP.html?utm_source=dzone&amp;utm_medium=post-roll-text&amp;utm_campaign=COLL-20XX-Reactive-Microservices-Architecture&amp;utm_term=none&amp;utm_content=java-zone" target="_blank" rel="external">Reactive Microservices Architecture</a>, a free O’Reilly book. Brought to you in partnership with<a href="https://info.lightbend.com/COLL-20XX-Reactive-Microservices-Architecture-RES-LP.html?utm_source=dzone&amp;utm_medium=post-roll-text&amp;utm_campaign=COLL-20XX-Reactive-Microservices-Architecture&amp;utm_term=none&amp;utm_content=java-zone" target="_blank" rel="external">Lightbend</a>.</p>
<p>Source: <a href="http://www.tuicool.com/articles/hit/rmQJJzJ" target="_blank" rel="external">https://dzone.com/articles/an-overview-of-garbage-collection-in-java</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;An-Overview-of-Garbage-Collection-in-Java&quot;&gt;&lt;a href=&quot;#An-Overview-of-Garbage-Collection-in-Java&quot; class=&quot;headerlink&quot; title=&quot;An Overvie
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>YouTube has 1.5 billion logged-in monthly users watching a ton of mobile video</title>
    <link href="https://gmagon.com/blog/2017/06/23/youtube-has-15-billion-logged-in-monthly-users-watching-a-ton-of-mobile-video/"/>
    <id>https://gmagon.com/blog/2017/06/23/youtube-has-15-billion-logged-in-monthly-users-watching-a-ton-of-mobile-video/</id>
    <published>2017-06-23T00:00:00.000Z</published>
    <updated>2017-06-23T07:53:27.168Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://img0.tuicool.com/FN7BjyZ.jpg!web" alt=""></p>
<p>This year at VidCon, YouTube shared some new metrics that really drive home how much its dominating mobile video usage and how quickly its service is gaining viewers on TVs.</p>
<p>The highlight was the fact that there are now 1.5 billion logged-in users visiting the site every month. The distinction is important as there are undoubtedly still quite a few folks hopping on YouTube that aren’t necessarily using Google Accounts to do so.</p>
<p>The site announced it hit 1 billion monthly active users in 2013, though that number assumedly related to all visitors, logged-in and not.</p>
<p>Logged-in users spend an average of_<strong> over one hour per day</strong>_watching YouTube just on mobile devices, a pretty daunting number that showcases just how pervasive video has gotten on the mobile web.</p>
<p>“When we compare that [metric] to TV, people — in some countries like the US — watch up to four hours per day so we think there’s lots of room to get people to watch even more YouTube,” CEO Susan Wojcicki said onstage.</p>
<p>On that note, the company said that the TV screen was their fastest growing medium of consumption, noting that the category was growing 90% year-over-year, something that the company’s new YouTube TV service is undoubtedly going to add to. The company didn’t have any new details to share on desktop video viewing habits.</p>
<p>While sites like Facebook begin to throw more resources behind video efforts, it’s clear that regardless of the arbitrary “view” statistics thrown around, the sheer amount of time spent engaging with a service is a constant metric and one that YouTube has a lot to say about.</p>
<p>Source: <a href="http://www.tuicool.com/articles/hit/u2i2MzM" target="_blank" rel="external">https://techcrunch.com/2017/06/22/youtube-has-1-5-billion-logged-in-monthly-users-watching-a-ton-of-mobile-video/</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://img0.tuicool.com/FN7BjyZ.jpg!web&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;This year at VidCon, YouTube shared some new metrics that really drive 
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Is 30 Years Old GIF Still Popular Now?</title>
    <link href="https://gmagon.com/blog/2017/06/23/is-30-years-old-gif-still-popular-now/"/>
    <id>https://gmagon.com/blog/2017/06/23/is-30-years-old-gif-still-popular-now/</id>
    <published>2017-06-23T00:00:00.000Z</published>
    <updated>2017-06-23T09:54:32.282Z</updated>
    
    <content type="html"><![CDATA[<p>Several days ago,  Facebook has been celebrated the 30 years birthday to the most popular image format-GIF. GIF born on June 15, 1987 which stands a big step up from its old black-and-white graphics. </p>
<p>Maybe you cannot comprehend what actually GIF is, but you must familiar with this: </p>
<p><img src="/assets/bXQNq_s-200x150.gif" alt=""></p>
<p>That’s right, memes in your phone is made of GIF format, which you always use when talking with someone in your social network and can’t stop using it, just as following:</p>
<p><img src="/assets/text-messages_o_295497.jpg" alt=""></p>
<p>Memes has been popular just  in recent years, but GIF is ancient in the Web, maybe older than you…</p>
<p>There has been a haunting question about GIF is how to pronounce it.</p>
<p>some say it it pronounced with a soft G, like “jiff.” Others with a hard G, like “ghiff.” </p>
<p>Fortunately, most dictionaries accept both pronunciations as correct. So you can read it as what you want.</p>
<p>GIF has a rival, called APNG or animated PNG, “it is a high quality animated image format complete with full alpha channel and graceful degradation has been available and usable since 2004.” The major advantage of APNG versus an animated GIF is image quality. APNGs simply look better, especially on a wider variety of backgrounds, and there’s already support baked into both Firefox and Opera; Chrome users can <a href="https://chrome.google.com/webstore/detail/apng/ehkepjiconegkhpodgoaeamnpckdbblp?hl=en" target="_blank" rel="external">download an extension</a> to support APNG files.</p>
<p><img src="http://img2.tuicool.com/YZBjiu.jpg" alt=""></p>
<p>The good news is you can easily convert you GIF files to APNG through the free tool: </p>
<p>Gmagon Gif</p>
<p><a href="https://gmagon.com/products/store/gmagon_gif/">https://gmagon.com/products/store/gmagon_gif/</a></p>
<p>Maybe we should feel grateful for those GIF or memes that brings much happiness to us.</p>
<p><img src="/assets/dicaprio3-583e33155f9b58d5b19e3a00.jpg" alt=""></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Several days ago,  Facebook has been celebrated the 30 years birthday to the most popular image format-GIF. GIF born on June 15, 1987 whi
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Search an element in an unsorted array using minimum number of comparisons</title>
    <link href="https://gmagon.com/blog/2017/06/23/search-an-element-in-an-unsorted-array-using-minimum-number-of-comparisons/"/>
    <id>https://gmagon.com/blog/2017/06/23/search-an-element-in-an-unsorted-array-using-minimum-number-of-comparisons/</id>
    <published>2017-06-23T00:00:00.000Z</published>
    <updated>2017-06-23T07:53:27.164Z</updated>
    
    <content type="html"><![CDATA[<p>Given an array of <strong>n </strong>distinct integers and an element <strong>x</strong>. Search the element <strong>x </strong>in the array using minimum number of comparisons. Any sort of comparison will contribute 1 to the count of comparisons. For example, the condition used to terminate a loop, will also contribute 1 to the count of comparisons each time it gets executed. Expressions like <strong>while (n) {n–;} </strong>also contribute to the count of comparisons as value of <strong>n </strong>is being compared internally so as to decide whether or not to terminate the loop.</p>
<p>Examples:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div></pre></td><td class="code"><pre><div class="line">Input :</div><div class="line"> arr[] = &#123;</div><div class="line">4</div><div class="line">, </div><div class="line">6</div><div class="line">, </div><div class="line">1</div><div class="line">, </div><div class="line">5</div><div class="line">, </div><div class="line">8</div><div class="line">&#125;, </div><div class="line">        x = </div><div class="line">1</div><div class="line">Output :</div><div class="line"> Found</div><div class="line"></div><div class="line"></div><div class="line">Input :</div><div class="line"> arr[] = &#123;</div><div class="line">10</div><div class="line">, </div><div class="line">3</div><div class="line">, </div><div class="line">12</div><div class="line">, </div><div class="line">7</div><div class="line">, </div><div class="line">2</div><div class="line">, </div><div class="line">11</div><div class="line">, </div><div class="line">9</div><div class="line">&#125;, </div><div class="line">        x = </div><div class="line">15</div><div class="line">Output :</div><div class="line"> Not Found</div></pre></td></tr></table></figure>
<p>Asked in Adobe Interview</p>
<h2 id="Recommended-Please-try-your-approach-on-IDE-first-before-moving-on-to-the-solution"><a href="#Recommended-Please-try-your-approach-on-IDE-first-before-moving-on-to-the-solution" class="headerlink" title="Recommended: Please try your approach on{IDE}first, before moving on to the solution."></a><a href="http://ide.geeksforgeeks.org/" target="_blank" rel="external">Recommended: Please try your approach on<strong>{IDE}</strong>first, before moving on to the solution.</a></h2><p>Below simple method to search requires<strong>2n + 1</strong>comparisons in worst case.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">for</div><div class="line"> (i = </div><div class="line">0</div><div class="line">; i </div><div class="line">&lt;</div><div class="line"> n; i++)  </div><div class="line">// Worst case n+1</div><div class="line">if</div><div class="line"> (arr[i] == x)  </div><div class="line">// Worst case n</div><div class="line">return</div><div class="line"> i;</div></pre></td></tr></table></figure>
<p>How to reduce number of comparisons?</p>
<p>The idea is to copy x (element to be searched) to last location so that one last comparison when x is not present in arr[] is saved.</p>
<p><strong>Algorithm:</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div></pre></td><td class="code"><pre><div class="line">search(arr, n, x)</div><div class="line"></div><div class="line">if</div><div class="line"> arr[n</div><div class="line">-1</div><div class="line">] == x  </div><div class="line">// 1 comparison</div><div class="line">return</div><div class="line">&quot;true&quot;</div><div class="line"></div><div class="line">    backup = arr[n</div><div class="line">-1</div><div class="line">]</div><div class="line">    arr[n</div><div class="line">-1</div><div class="line">] = x</div><div class="line"></div><div class="line"></div><div class="line">for</div><div class="line"> i=</div><div class="line">0</div><div class="line">, i++ </div><div class="line">// no termination condition</div><div class="line">if</div><div class="line"> arr[i] == x </div><div class="line">// execute at most n times</div><div class="line">// that is at-most n comparisons</div><div class="line"></div><div class="line">            arr[n</div><div class="line">-1</div><div class="line">] = backup</div><div class="line"></div><div class="line">return</div><div class="line"> (i </div><div class="line">&lt;</div><div class="line"> n</div><div class="line">-1</div><div class="line">) </div><div class="line">// 1 comparison</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div></pre></td><td class="code"><pre><div class="line">// C++ implementation to search an element in</div><div class="line">// the unsorted array using minimum number of</div><div class="line">// comparisons</div><div class="line">#</div><div class="line">include</div><div class="line">&lt;</div><div class="line">bits/stdc++.h</div><div class="line">&gt;</div><div class="line">using</div><div class="line">namespace</div><div class="line">std</div><div class="line">;</div><div class="line"></div><div class="line"></div><div class="line">// function to search an element in</div><div class="line">// minimum number of comparisons</div><div class="line">string</div><div class="line">search</div><div class="line">(</div><div class="line">int</div><div class="line"> arr[], </div><div class="line">int</div><div class="line"> n, </div><div class="line">int</div><div class="line"> x)</div><div class="line">&#123;</div><div class="line"></div><div class="line">// 1st comparison</div><div class="line">if</div><div class="line"> (arr[n</div><div class="line">-1</div><div class="line">] == x)</div><div class="line"></div><div class="line">return</div><div class="line">&quot;Found&quot;</div><div class="line">;</div><div class="line"></div><div class="line"></div><div class="line">int</div><div class="line"> backup = arr[n</div><div class="line">-1</div><div class="line">];</div><div class="line">    arr[n</div><div class="line">-1</div><div class="line">] = x;</div><div class="line"></div><div class="line"></div><div class="line">// no termination condition and thus</div><div class="line">// no comparison</div><div class="line">for</div><div class="line"> (</div><div class="line">int</div><div class="line"> i = </div><div class="line">0</div><div class="line">; ;i++)</div><div class="line">    &#123;</div><div class="line"></div><div class="line">// this would be executed at-most n times</div><div class="line">// and therefore at-most n comparisons</div><div class="line">if</div><div class="line"> (arr[i] == x)</div><div class="line">        &#123;</div><div class="line"></div><div class="line">// replace arr[n-1] with its actual element</div><div class="line">// as in original &apos;arr[]&apos;</div><div class="line"></div><div class="line">            arr[n</div><div class="line">-1</div><div class="line">] = backup;</div><div class="line"></div><div class="line"></div><div class="line">// if &apos;x&apos; is found before the &apos;(n-1)th&apos;</div><div class="line">// index, then it is present in the array</div><div class="line">// final comparison</div><div class="line">if</div><div class="line"> (i </div><div class="line">&lt;</div><div class="line"> n</div><div class="line">-1</div><div class="line">)</div><div class="line"></div><div class="line">return</div><div class="line">&quot;Found&quot;</div><div class="line">;</div><div class="line"></div><div class="line"></div><div class="line">// else not present in the array</div><div class="line">return</div><div class="line">&quot;Not Found&quot;</div><div class="line">;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line">// Driver program to test above</div><div class="line">int</div><div class="line">main</div><div class="line">()</div><div class="line">&#123;</div><div class="line"></div><div class="line">int</div><div class="line"> arr[] = &#123;</div><div class="line">4</div><div class="line">, </div><div class="line">6</div><div class="line">, </div><div class="line">1</div><div class="line">, </div><div class="line">5</div><div class="line">, </div><div class="line">8</div><div class="line">&#125;;</div><div class="line"></div><div class="line">int</div><div class="line"> n = </div><div class="line">sizeof</div><div class="line">(arr) / </div><div class="line">sizeof</div><div class="line">(arr[</div><div class="line">0</div><div class="line">]);</div><div class="line"></div><div class="line">int</div><div class="line"> x = </div><div class="line">1</div><div class="line">;</div><div class="line"></div><div class="line">cout</div><div class="line">&lt;</div><div class="line">&lt;</div><div class="line"> search(arr, n, x);</div><div class="line"></div><div class="line">return</div><div class="line">0</div><div class="line">;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>Output:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Found</div></pre></td></tr></table></figure>
<p>Time Complexity: O(n)</p>
<p>Number of Comparisons: atmost<strong>(n+2)</strong>comparisons</p>
<p>This article is contributed by<strong>Ayush Jauhari</strong>. If you like GeeksforGeeks and would like to contribute, you can also write an article using<a href="http://www.contribute.geeksforgeeks.org/" target="_blank" rel="external">contribute.geeksforgeeks.org</a>or mail your article to contribute@geeksforgeeks.org. See your article appearing on the GeeksforGeeks main page and help other Geeks.</p>
<p>Please write comments if you find anything incorrect, or you want to share more information about the topic discussed above.</p>
<p>Source: <a href="http://www.tuicool.com/articles/hit/iQrQvm3" target="_blank" rel="external">http://www.geeksforgeeks.org/search-element-unsorted-array-using-minimum-number-comparisons/</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Given an array of &lt;strong&gt;n &lt;/strong&gt;distinct integers and an element &lt;strong&gt;x&lt;/strong&gt;. Search the element &lt;strong&gt;x &lt;/strong&gt;in the ar
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>12 Factors to Cloud Success</title>
    <link href="https://gmagon.com/blog/2017/06/23/12-factors-to-cloud-success/"/>
    <id>https://gmagon.com/blog/2017/06/23/12-factors-to-cloud-success/</id>
    <published>2017-06-23T00:00:00.000Z</published>
    <updated>2017-06-23T07:53:27.158Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://img1.tuicool.com/3AZNviN.png!web" alt=""></p>
<h2 id="12-Factors-to-Cloud-Success"><a href="#12-Factors-to-Cloud-Success" class="headerlink" title="12 Factors to Cloud Success"></a>12 Factors to Cloud Success</h2><p>Posted byRafael Benevides onJune 22, 2017June 19, 2017</p>
<p>Hey, developers! Do you care about using the best practices to apply your application to the cloud? If so then you should be using<a href="https://12factor.net/" target="_blank" rel="external">The 12-factor App</a>, which is a methodology for building software-as-a-service. Today I like to talk about the 12-factor App, which I had presented to a group at the Red Hat Summit last month.</p>
<p>Every developer that is moving their application to the cloud will face a different environment than what they are used to, their datacenter or own premise and that’s why they should care about the 12-factor methodology. This 12 step methodology was created by Heroku, which is a cloud provider who found a common solution to most of what their customers were experiencing and decided to release these solutions as a methodology. These 12 factors are intended to solve problems related to applications running in the cloud. If there was one key takeaway from my session it was not the idea to have the audience memorize these 12 factors but to have an understanding of why each one is important.</p>
<ol>
<li><strong>Codebase</strong><br>– use version control, one codebase tracked in revision control for many deployments.</li>
<li><strong>Dependencies</strong><br>– use a package manager and don’t commit dependencies in the codebase repository.</li>
<li><strong>Config</strong><br>– store the config in Environment Variable, if you have to repackage your application, you’re doing it wrong.</li>
<li><strong>Backing Services</strong><br>– a<br><a href="https://12factor.net/codebase" target="_blank" rel="external">deploy</a><br>of the twelve-factor app should be able to swap out a local MySQL database with one managed by a third party (such as<br><a href="http://aws.amazon.com/rds/" target="_blank" rel="external">Amazon RDS</a><br>) without any changes to the app’s code.</li>
<li><strong>Build, Release, Run</strong><br>– the twelve-factor app uses strict separation between the build, release, and run stages. Every release should always have a unique release ID and releases should allow rollback.</li>
<li><strong>Processes</strong><br>– execute the app as one or more stateless processes, the Twelve-factor processes are stateless and<br><a href="http://en.wikipedia.org/wiki/Shared_nothing_architecture" target="_blank" rel="external">share-nothing</a><br>.</li>
<li><strong>Port Binding</strong><br>– export services via port binding, The twelve-factor app is completely self-contained.</li>
<li><strong>Concurrency</strong><br>– scale out via the process model. Each process should be individually scaled, with Factor 6 (Stateless), it is easy to scale the services.</li>
<li><strong>Disposability</strong><br>– maximize robustness with fast startup and graceful shutdown, we can achieve this with containers.</li>
<li><strong>Dev/Prod Parity</strong><br>– Keep development, staging, and production as similar as possible, the twelve-factor app is designed for<br><a href="http://www.avc.com/a_vc/2011/02/continuous-deployment.html" target="_blank" rel="external">continuous deployment</a><br>by keeping the gap between development and production small.</li>
<li><strong>Logs</strong><br>– treat logs as event streams, a twelve-factor app never concerns itself with routing or storage of its output stream.</li>
<li><strong>Admin Processes</strong><br>– run admin/management tasks as one-off processes.</li>
</ol>
<p>The 12-factor App methodology is technology and language agnostic but satisfied by<a href="https://developers.redhat.com/containers/" target="_blank" rel="external">Containers</a>,<a href="https://developers.redhat.com/microservices/" target="_blank" rel="external">Microservices</a>, and CI/CD Pipelines with a focus on<a href="https://developers.redhat.com/devops/" target="_blank" rel="external">DevOps</a>.You can access more information on The 12-factor Appat<a href="https://12factor.net/" target="_blank" rel="external">https://12factor.net/</a>.</p>
<p><strong>Whether you are new to Containers or have experience, downloading this</strong><a href="https://developers.redhat.com/promotions/docker-cheatsheet/" target="_blank" rel="external"><strong>cheat sheet</strong></a><strong>can assist you when encountering tasks you haven’t done lately.</strong></p>
<p>Source: <a href="http://www.tuicool.com/articles/hit/qqa2yyN" target="_blank" rel="external">https://developers.redhat.com/blog/2017/06/22/12-factors-to-cloud-success/</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://img1.tuicool.com/3AZNviN.png!web&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;12-Factors-to-Cloud-Success&quot;&gt;&lt;a href=&quot;#12-Factors-to-Cloud-Success
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Face Recognition in R</title>
    <link href="https://gmagon.com/blog/2017/06/23/face-recognition-in-r/"/>
    <id>https://gmagon.com/blog/2017/06/23/face-recognition-in-r/</id>
    <published>2017-06-23T00:00:00.000Z</published>
    <updated>2017-06-23T07:53:27.161Z</updated>
    
    <content type="html"><![CDATA[<p>(This article was first published on<a href="https://www.stoltzmaniac.com/facial-recognition-in-r/" target="_blank" rel="external"><strong>R-Projects – Stoltzmaniac</strong></a>, and kindly contributed toR-bloggers)</p>
<h3 id="Face-Recognition-in-R"><a href="#Face-Recognition-in-R" class="headerlink" title="Face Recognition in R"></a>Face Recognition in R</h3><p>OpenCV is an incredibly powerful tool to have in your toolbox. I have had a lot of success using it in Python but very little success in R. I haven’t done too much other than searching Google but it seems as if “imager” and “videoplayR” provide a lot of the functionality but not all of it.</p>
<p>I have never actually called Python functions from R before. Initially, I tried the “rPython” library – that has a lot of advantages, but was completely unnecessary for me so system() worked absolutely fine. While this example is extremely simple, it should help to illustrate how easy it is to utilize the power of Python from within R. I need to give credit to Harrison Kinsley for all of his efforts and work at<a href="https://www.pythonprogramming.net/" target="_blank" rel="external">PythonProgramming.net</a>– I used a lot of his code and ideas for this post (especially the Python portion).</p>
<p>Using videoplayR I created a function which would take a picture with my webcam and save it as “originalWebcamShot.png”</p>
<p>Note:saving images and then loading them isn’t very efficient but works in this case and is extremely easy to implement. It saves us from passing variables, functions, objects, and/or methods between R and Python in this case.</p>
<p><img src="http://img2.tuicool.com/vayqquF.png!web" alt=""></p>
<p>I’ll trace my steps backward through this post (I think it’s easier to understand what’s going on in this case).</p>
<h4 id="The-main-R-file"><a href="#The-main-R-file" class="headerlink" title="The main.R file:"></a>The main.R file:</h4><ol>
<li>Calls my user-defined function<ul>
<li>Turns on the camera</li>
<li>Takes a picture</li>
<li>Saves it as “originalWebcamShot.png”</li>
</ul>
</li>
<li>Runs the Python script<ul>
<li>Loads the previously saved image</li>
<li>Loads the Haar Cascade algorithms</li>
<li>Detects faces and eyes</li>
<li>Draws colored rectangles around them</li>
<li>Saves the new image as “modifiedWebcamShot.png”</li>
</ul>
</li>
<li>Reads new image into R</li>
<li>Displays both images</li>
</ol>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div></pre></td><td class="code"><pre><div class="line">source</div><div class="line">(</div><div class="line">&apos;imageFunctions.R&apos;</div><div class="line">)</div><div class="line"></div><div class="line">library</div><div class="line">(</div><div class="line">&quot;videoplayR&quot;</div><div class="line">)</div><div class="line"></div><div class="line"></div><div class="line"># Take a picture and save it</div><div class="line"></div><div class="line">img = webcamImage(rollFrames = </div><div class="line">10</div><div class="line">, </div><div class="line">                  showImage = </div><div class="line">FALSE</div><div class="line">,</div><div class="line">                  saveImageToWD = </div><div class="line">&apos;originalWebcamShot.png&apos;</div><div class="line">)</div><div class="line"></div><div class="line"></div><div class="line"># Run Python script to detect faces, draw rectangles, return new image</div><div class="line"></div><div class="line">system(</div><div class="line">&apos;python3 facialRecognition.py&apos;</div><div class="line">)</div><div class="line"></div><div class="line"></div><div class="line"># Read in new image</div><div class="line"></div><div class="line">img.face = readImg(</div><div class="line">&quot;modifiedWebcamShot.png&quot;</div><div class="line">)</div><div class="line"></div><div class="line"></div><div class="line"># Display images</div><div class="line"></div><div class="line">imshow(img)</div><div class="line">imshow(img.face)</div></pre></td></tr></table></figure>
<p>The user-defined function:</p>
<ol>
<li>Function inputs<ul>
<li>rollFrames is the number of pictures to take (allows the camera to adjust)</li>
<li>showImage gives the option to display the image</li>
<li>saveImageToWD saves the image generated to the current working directory</li>
</ul>
</li>
<li>Turns the webcam on</li>
<li>Takes pictures (number of rollFrames)</li>
<li>Uses basic logic to determine to show images and/or save them</li>
<li>Returns the image</li>
</ol>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div></pre></td><td class="code"><pre><div class="line">library(</div><div class="line">&quot;videoplayR&quot;</div><div class="line">)</div><div class="line"></div><div class="line">webcamImage = function(rollFrames = </div><div class="line">4</div><div class="line">, showImage = FALSE, saveImageToWD = NA)&#123;</div><div class="line"></div><div class="line">  </div><div class="line"># rollFrames runs through multiple pictures - allows camera to adjust</div><div class="line"># showImage allows opportunity to display image within function</div><div class="line"># Turn on webcam</div><div class="line"></div><div class="line">  stream = readStream(</div><div class="line">0</div><div class="line">)</div><div class="line"></div><div class="line">  </div><div class="line"># Take pictures</div><div class="line">print</div><div class="line">(</div><div class="line">&quot;Video stream initiated.&quot;</div><div class="line">)</div><div class="line">  </div><div class="line">for</div><div class="line">(i in se</div><div class="line">q(rollFrames)</div><div class="line">)&#123;</div><div class="line">    img = nextFrame(stream)</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  </div><div class="line"># Turn off camera</div><div class="line"></div><div class="line">  release(stream)</div><div class="line"></div><div class="line">  </div><div class="line"># Display image if requested</div><div class="line">if</div><div class="line">(showImage == TRUE)&#123;</div><div class="line">    imshow(img)</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  </div><div class="line">if</div><div class="line">(!is.na(saveImageToWD))&#123;</div><div class="line">    fileName = paste(getwd(),</div><div class="line">&quot;/&quot;</div><div class="line">,saveImageToWD,sep=</div><div class="line">&apos;&apos;</div><div class="line">)</div><div class="line">    </div><div class="line">print</div><div class="line">(paste(</div><div class="line">&quot;Saving Image To: &quot;</div><div class="line">,fileName, sep=</div><div class="line">&apos;&apos;</div><div class="line">))</div><div class="line">    writeImg(fileName,img)</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  </div><div class="line">return</div><div class="line">(img)</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>The Python script:</p>
<ol>
<li>Loads the algorithms from xml files</li>
<li>Loads the image from “originalWebcamShot.png”</li>
<li>Converts the image to grayscale</li>
<li>Runs the facial detection algorithm</li>
<li>Runs the eye detection algorithm (within the face)</li>
<li>Draws rectangles around the face and eyes (different colors)</li>
<li>Saves the new image as “modifiedWebcamShot.png”</li>
</ol>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div></pre></td><td class="code"><pre><div class="line">import</div><div class="line"> numpy </div><div class="line">as</div><div class="line"> np</div><div class="line"></div><div class="line">import</div><div class="line"> cv2</div><div class="line"></div><div class="line"></div><div class="line">def</div><div class="line">main</div><div class="line">()</div><div class="line">:</div><div class="line"># I followed Harrison Kingsley&apos;s work for this</div><div class="line"># Much of the source code is found https://pythonprogramming.net/haar-cascade-face-eye-detection-python-opencv-tutorial/</div><div class="line"></div><div class="line"></div><div class="line">    face_cascade = cv2.CascadeClassifier(</div><div class="line">&apos;haarcascade_frontalface_default.xml&apos;</div><div class="line">)</div><div class="line">    eye_cascade = cv2.CascadeClassifier(</div><div class="line">&apos;haarcascade_eye.xml&apos;</div><div class="line">)</div><div class="line"></div><div class="line">    img = cv2.imread(</div><div class="line">&apos;originalWebcamShot.png&apos;</div><div class="line">)</div><div class="line"></div><div class="line">    gray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)</div><div class="line">    faces = face_cascade.detectMultiScale(gray, </div><div class="line">1.3</div><div class="line">, </div><div class="line">5</div><div class="line">)</div><div class="line"></div><div class="line">    </div><div class="line">for</div><div class="line"> (x,y,w,h) </div><div class="line">in</div><div class="line"> faces:</div><div class="line">        cv2.rectangle(img,(x,y),(x+w,y+h),(</div><div class="line">0</div><div class="line">,</div><div class="line">0</div><div class="line">,</div><div class="line">255</div><div class="line">),</div><div class="line">2</div><div class="line">)</div><div class="line">        roi_gray = gray[y:y+h, x:x+w]</div><div class="line">        roi_color = img[y:y+h, x:x+w]</div><div class="line"></div><div class="line">        eyes = eye_cascade.detectMultiScale(roi_gray)</div><div class="line">        </div><div class="line">for</div><div class="line"> (ex,ey,ew,eh) </div><div class="line">in</div><div class="line"> eyes:</div><div class="line">            cv2.rectangle(roi_color,(ex,ey),(ex+ew,ey+eh),(</div><div class="line">0</div><div class="line">,</div><div class="line">255</div><div class="line">,</div><div class="line">0</div><div class="line">),</div><div class="line">2</div><div class="line">)</div><div class="line"></div><div class="line">    cv2.imwrite(</div><div class="line">&apos;modifiedWebcamShot.png&apos;</div><div class="line">,img)</div><div class="line"></div><div class="line"></div><div class="line">if</div><div class="line"> __name__ == </div><div class="line">&apos;__main__&apos;</div><div class="line">:</div><div class="line">    main()</div></pre></td></tr></table></figure>
<p>The Python code was entirely based off of Harrison Kinsley’s work:</p>
<ul>
<li>@sentdex<br><a href="https://twitter.com/Sentdex" target="_blank" rel="external">Twitter</a><br>|<br><a href="https://www.youtube.com/sentdex" target="_blank" rel="external">YouTube</a></li>
<li>Website:<br><a href="https://pythonprogramming.net/haar-cascade-face-eye-detection-python-opencv-tutorial/" target="_blank" rel="external">PythonProgramming.net</a></li>
</ul>
<p>Thanks for reading. As always, the code is on my<a href="https://github.com/stoltzmaniac/ML-Image-Processing-R" target="_blank" rel="external">GitHub</a></p>
<p>Source: <a href="http://www.tuicool.com/articles/hit/6VZ3MzF" target="_blank" rel="external">https://www.r-bloggers.com/face-recognition-in-r/</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;(This article was first published on&lt;a href=&quot;https://www.stoltzmaniac.com/facial-recognition-in-r/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;stron
    
    </summary>
    
    
  </entry>
  
</feed>
