<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Gmagon Software Official Website - Fast, simple &amp; powerful solutions for everyone.</title>
  <subtitle>Gmagon Software Official Website - Fast, simple &amp; powerful solutions for everyone and more. Visit the site to learn, buy, and get support.</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://gmagon.com/"/>
  <updated>2017-06-26T09:37:13.942Z</updated>
  <id>https://gmagon.com/</id>
  
  <author>
    <name>Gmagon Inc</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>What’s new in JPA 2.2 – Java 8 Date and Time Types</title>
    <link href="https://gmagon.com/blog/2017/06/26/whats-new-in-jpa-22-java-8-date-and-time-types/"/>
    <id>https://gmagon.com/blog/2017/06/26/whats-new-in-jpa-22-java-8-date-and-time-types/</id>
    <published>2017-06-26T00:00:00.000Z</published>
    <updated>2017-06-26T09:37:13.942Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://twitter.com/vlad_mihalcea" target="_blank" rel="external">Follow @vlad_mihalcea</a></p>
<h2 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h2><p>Now that the<a href="https://www.jcp.org/en/jsr/results?id=6002" target="_blank" rel="external">JPA 2.2 Review Ballot was approved</a>, let’s start analyzing some of the new additions to the standard which have been supported by Hibernate for quite some time already.</p>
<p>In this article, we are going to see how Java 8 Date/Time API is supported and which types you need to use depending on your business case requirements.</p>
<h2 id="Java-8-Date-Time-support"><a href="#Java-8-Date-Time-support" class="headerlink" title="Java 8 Date/Time support"></a>Java 8 Date/Time support</h2><p>The<a href="https://jcp.org/aboutJava/communityprocess/maintenance/jsr338/ChangeLog-JPA-2.2-MR.txt" target="_blank" rel="external">JPA 2.2 change log</a>says that only<a href="https://github.com/javaee/jpa-spec/issues/63" target="_blank" rel="external">the following types are going to be supported</a>:</p>
<ul>
<li><code>java.time.LocalDate</code></li>
<li><code>java.time.LocalTime</code></li>
<li><code>java.time.LocalDateTime</code></li>
<li><code>java.time.OffsetTime</code></li>
<li><code>java.time.OffsetDateTime</code></li>
</ul>
<p>While<code>LocalDateTime</code>is rather straightforward since it only captures a point in time, similar to<code>java.util.Date</code>,<a href="https://docs.oracle.com/javase/8/docs/api/java/time/OffsetDateTime.html" target="_blank" rel="external"><code>OffsetDateTime</code></a>is more problematic because it only captures the offset, but not the time zone rules such as DST (Daylight Saving Time) or other rules defined by ZoneId and typically supported by<a href="https://docs.oracle.com/javase/8/docs/api/java/time/ZonedDateTime.html" target="_blank" rel="external"><code>ZonedDateTime</code></a>.</p>
<p>It’s also curious that the standard does not support the<a href="https://docs.oracle.com/javase/8/docs/api/java/time/Duration.html" target="_blank" rel="external"><code>java.time.Duration</code></a>type which can come in handy in many business use cases.</p>
<h2 id="Domain-Model"><a href="#Domain-Model" class="headerlink" title="Domain Model"></a>Domain Model</h2><p>Considering we have following entities in our system:</p>
<p><img src="http://img0.tuicool.com/yEBFvmm.png!web" alt=""></p>
<p>The<code>Employee</code>entity contains the following Java 8 Date Time attributes:</p>
<ul>
<li><code>birthday</code><br>attribute is a<br><code>LocalDate</code><br>since we are only interested in the Date part</li>
<li><code>updatedOn</code><br>is a<br><code>LocalDateTime</code><br>since this attribute needs to store both Date and Time information</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div></pre></td><td class="code"><pre><div class="line">@Entity</div><div class="line">(name = </div><div class="line">&quot;Employee&quot;</div><div class="line">)</div><div class="line">public class Employee &#123;</div><div class="line"></div><div class="line">    </div><div class="line">@Id</div><div class="line">@GeneratedValue</div><div class="line"></div><div class="line">    private Long id;</div><div class="line"></div><div class="line">    </div><div class="line">@NaturalId</div><div class="line"></div><div class="line">    private String name;</div><div class="line"></div><div class="line">    </div><div class="line">private</div><div class="line">LocalDate</div><div class="line">birthday</div><div class="line">;</div><div class="line"></div><div class="line">    @</div><div class="line">Column</div><div class="line">(name = </div><div class="line">&quot;updated_on&quot;</div><div class="line">)</div><div class="line">    </div><div class="line">private</div><div class="line">LocalDateTime</div><div class="line">updatedOn</div><div class="line">;</div><div class="line"></div><div class="line">    </div><div class="line">//Getters are setters omitted for brevity</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>The<code>Meeting</code>entity features the following Java 8 Date Time attributes:</p>
<ul>
<li><code>startsAt</code><br>is a<br><code>ZoneDateTime</code><br>which, even if not supported by JPA 2.2, is probably a more suitable version of<br><code>OffsetDateTime</code></li>
<li>the<br><code>duration</code><br>attribute might not be supported by JPA 2.2, but we will use it since Hibernate supports all these types</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div></pre></td><td class="code"><pre><div class="line">@Entity</div><div class="line">(name = </div><div class="line">&quot;Meeting&quot;</div><div class="line">)</div><div class="line">public class Meeting &#123;</div><div class="line"></div><div class="line">    </div><div class="line">@Id</div><div class="line"></div><div class="line">    private Long id;</div><div class="line"></div><div class="line">    </div><div class="line">@ManyToOne</div><div class="line">(fetch = FetchType.LAZY)</div><div class="line">    </div><div class="line">@JoinColumn</div><div class="line">(name = </div><div class="line">&quot;employee_id&quot;</div><div class="line">)</div><div class="line">    private Employee createdBy;</div><div class="line"></div><div class="line">    </div><div class="line">@Column</div><div class="line">(name = </div><div class="line">&quot;starts_at&quot;</div><div class="line">)</div><div class="line">    private ZonedDateTime startsAt;</div><div class="line"></div><div class="line">    </div><div class="line">private</div><div class="line">Duration</div><div class="line">duration</div><div class="line">;</div><div class="line">    </div><div class="line">    </div><div class="line">//Getters are setters omitted for brevity</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="Testing-time"><a href="#Testing-time" class="headerlink" title="Testing time"></a>Testing time</h2><p>Assuming we persist the following entities:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div></pre></td><td class="code"><pre><div class="line">Employee employee = </div><div class="line">new</div><div class="line"> Employee();</div><div class="line">employee.setName( </div><div class="line">&quot;Vlad Mihalcea&quot;</div><div class="line"> );</div><div class="line">employee.setBirthday(</div><div class="line">    LocalDate.</div><div class="line">of</div><div class="line">(</div><div class="line">        </div><div class="line">1981</div><div class="line">, </div><div class="line">12</div><div class="line">, </div><div class="line">10</div><div class="line"></div><div class="line">    )</div><div class="line">);</div><div class="line">employee.setUpdatedOn(</div><div class="line">    LocalDateTime.</div><div class="line">of</div><div class="line">(</div><div class="line">        </div><div class="line">2015</div><div class="line">, </div><div class="line">12</div><div class="line">, </div><div class="line">1</div><div class="line">,</div><div class="line">        </div><div class="line">8</div><div class="line">, </div><div class="line">0</div><div class="line">, </div><div class="line">0</div><div class="line"></div><div class="line">    )</div><div class="line">);</div><div class="line"></div><div class="line">entityManager.persist( employee );</div><div class="line"></div><div class="line">Meeting meeting = </div><div class="line">new</div><div class="line"> Meeting();</div><div class="line">meeting.setId( </div><div class="line">1</div><div class="line">L );</div><div class="line">meeting.setCreatedBy( employee );</div><div class="line">meeting.setStartsAt(</div><div class="line">    ZonedDateTime.</div><div class="line">of</div><div class="line">(</div><div class="line">        </div><div class="line">2017</div><div class="line">, </div><div class="line">6</div><div class="line">, </div><div class="line">25</div><div class="line">,</div><div class="line">        </div><div class="line">11</div><div class="line">, </div><div class="line">30</div><div class="line">, </div><div class="line">0</div><div class="line">, </div><div class="line">0</div><div class="line">,</div><div class="line">        ZoneId.systemDefault()</div><div class="line">    )</div><div class="line">);</div><div class="line">meeting.setDuration(</div><div class="line">    Duration.</div><div class="line">of</div><div class="line">( </div><div class="line">45</div><div class="line">, ChronoUnit.MINUTES )</div><div class="line">);</div><div class="line"></div><div class="line">entityManager.persist( meeting );</div></pre></td></tr></table></figure>
<p>Hibernate is going to generate the following SQL statements:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div></pre></td><td class="code"><pre><div class="line">INSERT</div><div class="line">INTO</div><div class="line"> Employee (</div><div class="line">    birthday, </div><div class="line">    </div><div class="line">name</div><div class="line">, </div><div class="line">    updated_on, </div><div class="line">    </div><div class="line">id</div><div class="line"></div><div class="line">) </div><div class="line"></div><div class="line">VALUES</div><div class="line"> (</div><div class="line">    </div><div class="line">&apos;1981-12-10&apos;</div><div class="line">, </div><div class="line">    </div><div class="line">&apos;Vlad Mihalcea&apos;</div><div class="line">, </div><div class="line">    </div><div class="line">&apos;2015-12-01 08:00:00.0&apos;</div><div class="line">, </div><div class="line">    </div><div class="line">1</div><div class="line"></div><div class="line">)</div><div class="line"></div><div class="line"></div><div class="line">INSERT</div><div class="line">INTO</div><div class="line"> Meeting (</div><div class="line">    employee_id, </div><div class="line">    </div><div class="line">duration</div><div class="line">, </div><div class="line">    starts_at, </div><div class="line">    </div><div class="line">id</div><div class="line"></div><div class="line">) </div><div class="line"></div><div class="line">VALUES</div><div class="line"> (</div><div class="line">    </div><div class="line">1</div><div class="line">, </div><div class="line">    </div><div class="line">2700000000000</div><div class="line">, </div><div class="line">    </div><div class="line">&apos;2017-06-25 11:30:00.0&apos;</div><div class="line">, </div><div class="line">    </div><div class="line">1</div><div class="line"></div><div class="line">)</div></pre></td></tr></table></figure>
<p>Both<code>LocalDateTime</code>and<code>ZonedDateTime</code>share the<code>org.hibernate.type.descriptor.sql.TimestampTypeDescriptor</code>, meaning that they are going to be persisted as<code>java.sql.Timestamp</code>.</p>
<p>While for<code>LocalDateTime</code>it makes no difference since, just like<code>java.sql.Timestamp</code>, it only captures a time snapshot, the<code>ZonedDateTime</code>is going to lose the zone information.</p>
<p>When loading back our entities:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div></pre></td><td class="code"><pre><div class="line">Employee employee = entityManager</div><div class="line">.unwrap( Session.</div><div class="line">class</div><div class="line"> )</div><div class="line">.bySimpleNaturalId( Employee.</div><div class="line">class</div><div class="line"> )</div><div class="line">.load( </div><div class="line">&quot;Vlad Mihalcea&quot;</div><div class="line"> );</div><div class="line"></div><div class="line">assertEquals(</div><div class="line">    LocalDate.</div><div class="line">of</div><div class="line">(</div><div class="line">        </div><div class="line">1981</div><div class="line">, </div><div class="line">12</div><div class="line">, </div><div class="line">10</div><div class="line"></div><div class="line">    ),</div><div class="line">    employee.getBirthday()</div><div class="line">);</div><div class="line">assertEquals(</div><div class="line">    LocalDateTime.</div><div class="line">of</div><div class="line">(</div><div class="line">        </div><div class="line">2015</div><div class="line">, </div><div class="line">12</div><div class="line">, </div><div class="line">1</div><div class="line">,</div><div class="line">        </div><div class="line">8</div><div class="line">, </div><div class="line">0</div><div class="line">, </div><div class="line">0</div><div class="line"></div><div class="line">    ),</div><div class="line">    employee.getUpdatedOn()</div><div class="line">);</div><div class="line"></div><div class="line">Meeting meeting = entityManager.find( Meeting.</div><div class="line">class</div><div class="line">, </div><div class="line">1</div><div class="line">L );</div><div class="line">assertSame(</div><div class="line">    employee, meeting.getCreatedBy()</div><div class="line">);</div><div class="line">assertEquals(</div><div class="line">    ZonedDateTime.</div><div class="line">of</div><div class="line">(</div><div class="line">        </div><div class="line">2017</div><div class="line">, </div><div class="line">6</div><div class="line">, </div><div class="line">25</div><div class="line">,</div><div class="line">        </div><div class="line">11</div><div class="line">, </div><div class="line">30</div><div class="line">, </div><div class="line">0</div><div class="line">, </div><div class="line">0</div><div class="line">,</div><div class="line">        ZoneId.systemDefault()</div><div class="line">    ),</div><div class="line">    meeting.getStartsAt()</div><div class="line">);</div><div class="line">assertEquals(</div><div class="line">    Duration.</div><div class="line">of</div><div class="line">( </div><div class="line">45</div><div class="line">, ChronoUnit.MINUTES ),</div><div class="line">    meeting.getDuration()</div><div class="line">);</div></pre></td></tr></table></figure>
<p>The original Java 8 Data Time objects match the ones being persisted.</p>
<p>If you enjoyed this article, I bet you are going to love<a href="https://leanpub.com/high-performance-java-persistence?utm_source=blog&amp;utm_medium=banner&amp;utm_campaign=article" target="_blank" rel="external">my book</a>as well.</p>
<p><img src="http://img0.tuicool.com/YbQ7ziI.jpg!web" alt=""></p>
<h2 id="Conclusion"><a href="#Conclusion" class="headerlink" title="Conclusion"></a>Conclusion</h2><p>The reason why<code>ZonedDateTime</code>equals the one we previously saved is because the undnerlying<code>TIMESTAMP</code>value was transposed in the current System Time Zone.</p>
<p>Until all JDBC Drivers will support<code>TIMESTAMP WITH TIMEZONE</code>at the<code>java.sql.Statement</code>paraeter value binding level which is a requirement for<a href="http://hibernate%20https//hibernate.atlassian.net/browse/HHH-11773" target="_blank" rel="external">HHH-11773</a>, it’s doubtful that you really need to use<code>ZonedDateTime</code>or<code>OffsetDateTime</code>.</p>
<p>Currently, it’s much wiser to save all<code>TIMESTAMP</code>values inUTC, meaning that<code>LocalDateTime</code>is a much better fit for your JPA entities.</p>
<p>If you liked this article, you might want to subscribe to<a href="http://eepurl.com/bg3d3n" target="_blank" rel="external">my newsletter</a> too.</p>
<p>Source: <a href="http://www.tuicool.com/articles/hit/UVF3Mzy" target="_blank" rel="external">https://vladmihalcea.com/2017/06/26/whats-new-in-jpa-2-2-java-8-date-and-time-types/</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://twitter.com/vlad_mihalcea&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Follow @vlad_mihalcea&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;Introduction&quot;&gt;&lt;a href=&quot;#
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>The Holy Wars of procrastination</title>
    <link href="https://gmagon.com/blog/2017/06/26/the-holy-wars-of-procrastination/"/>
    <id>https://gmagon.com/blog/2017/06/26/the-holy-wars-of-procrastination/</id>
    <published>2017-06-26T00:00:00.000Z</published>
    <updated>2017-06-26T09:37:13.938Z</updated>
    
    <content type="html"><![CDATA[<p>Procrastination is putting a task that we should be doing to do later instead of now. It may be because the task seems daunting or maybe because we sometimes have a strike of ergophobia (fear of completion) and in programming there are some frequent “wars” we tend to fight with the pretext “this is important before I start”.</p>
<p>This articles comes because I see a lot of awesome projects, mine and otherwise, never being finished because the wars that end up being fought with ourselves and colleagues are in most cases a form of procrastination.</p>
<p>Create that great ideia you have on your head instead of being idle by fighting wars that have no end goal.</p>
<p>To name a few, and some possible solutions, here were we go…</p>
<h3 id="IDE-war"><a href="#IDE-war" class="headerlink" title="IDE war"></a>IDE war</h3><p>This one occurs specially in teams to choose what IDE to use, VS Code vs Atom, Intellij vs Eclipse, vim vs emacs, and so many others. These take a lot of development time at the start of a project because everyone has a favorite and those who don’t don’t know what to use in the mist of all the arguments.</p>
<p>If have no clue of what to use do a quick search for what IDE supports the programming language you want to use “out of the box” and start learning it has you go, don’t get stuck with add-ons configurations and learning every feature from the start.</p>
<p>When on a team just decide which one most people are comfortable with and go with it, you can keep using your favorite one most of the time, you just have to keep the one that everyone agreed at the start at hand and configured just in case you have to do some pair programming.</p>
<h3 id="Syntax-war"><a href="#Syntax-war" class="headerlink" title="Syntax war"></a>Syntax war</h3><p>“I use tabs and not spaces”, “No ; at the end of a expression”, “I rather use “ than ‘ ”. I see this kind of arguments all the time and at my current job every project has a different style guide defined.</p>
<p>What we ended up noticing is that “consistency is key”, you can adapt faster than you think to a style guide that you are not familiar with you just keep a linter for each project.</p>
<p>If you’re having problems fighting this war by defining a style guide from scratch just use already existing ones, in case of javascript google’s or airbnb’s work like a charm with eslint running to check the files. You don’t need to leave it “has is”, adapt it to your preference has you start coding your project, in case of a team, with the feedback of everyone, if a rule is not fitting just discuss it when you’re having problems with it, maybe the rest of the team is on the same boat and it ends of being ignored on the linter.</p>
<h3 id="Over-engineering-war"><a href="#Over-engineering-war" class="headerlink" title="Over-engineering war"></a>Over-engineering war</h3><p>“I’m gonna do a calendar app with react…oh…I read that I should use redux, or maybe MOBX….I want to use ES6+ so maybe webpack along the way…I’m adding that cool thing, what was it…oh…yes GraphQL, so maybe I should use node on the backend and Grunt and PostCSS and Tape for testing, or enzyme, maybe I also install Yarn since is faster than NPM….almost forgot, should add I will add typescript since that way I will have less problems from what I’ve read, and….”</p>
<p>I think I made my point that, specially if your not familiar with those tech libraries/frameworks, 2 weeks later you will still have a Hello World and few else (if not, congrats!). Most of the time is better at the start of a project to keep with what you know plus 1 or 2 new libraries/frameworks that way you will see progress in your project and will learn new stuff nonetheless.</p>
<p>Any “extra” libraries aside from those 1 or 2 you choose at the start can be added as you have the need for them, you will know you have the need when the thought “this is repetitive and has to have a way to be made better” is starting to be frequent has you develop your project.</p>
<h3 id="Perfection-war"><a href="#Perfection-war" class="headerlink" title="Perfection war"></a>Perfection war</h3><p>“The project is not perfect yet, I have 100 more ideias, I have to add tests, need to have CI, need to…”</p>
<p>Same old same old, the fear of something we make being judged sometimes leaves us to endlessly add features and never releasing with fear that someone will not like it because that one feature that we add on our head was not sent from the start.</p>
<p>Perfect is the enemy of good, it’s better to have something good being used and improved than having something perfect just stuck in our heads or computer.</p>
<h3 id="TL-DR"><a href="#TL-DR" class="headerlink" title="TL;DR"></a>TL;DR</h3><ul>
<li>If you are working on a team, choose an IDE that fits most people, most of the time you will use your favorite tool, just keep the one that everyone agreed upon configured like the rest of the team just in case you have to do pair programming or something of the sort;</li>
<li>Choose 1 or 2 new frameworks or libraries to start your project alongside the tech stack you already are comfortable with, that way you will not be stuck for hours without end trying to understand 30 libraries you would like to know and think are necessary for the development of your project. This will make the project evolve more naturally and you will see faster progress;</li>
<li>Choose a syntax and adapt it as you go, it is hard, if not even impossible, to know before hand if style guides like google’s or airbnb’s will fit completely to your needs/habits;</li>
<li>Create an MVP and just add future features to a “up next” list of sorts, unless it is really critical to whatever you’re developing, most of the ideias you will have along the way are “should have” and not “must have or this project will go nowhere” it will only go nowhere if you never ship it.</li>
</ul>
<p>While it is important to fight this wars before the start of a project my point is that you should not overthink it, start doing whatever you have on your mind and learn has you go, adapt, but stop fighting wars that at the end, will only waste your time.</p>
<p>Now that you’ve finished reading, leave a comment, follow me at @daspinola and go get that brilliant project of yours on the way!</p>
<p>Source: <a href="http://www.tuicool.com/articles/hit/EfmIv2z" target="_blank" rel="external">https://medium.com/@daspinola/the-holy-wars-of-procrastination-ac0a1298a459</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Procrastination is putting a task that we should be doing to do later instead of now. It may be because the task seems daunting or maybe 
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>C++17 in details: Templates</title>
    <link href="https://gmagon.com/blog/2017/06/26/c++17-in-details-templates/"/>
    <id>https://gmagon.com/blog/2017/06/26/c++17-in-details-templates/</id>
    <published>2017-06-26T00:00:00.000Z</published>
    <updated>2017-06-26T09:37:13.931Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://img1.tuicool.com/raeeu2i.png!web" alt=""></p>
<p>For C++17 everyone wanted to have concepts, and as you know, we didn’t get them. But does it mean C++17 doesn’t improve templates/template meta-programming? Far from that! In my opinion, we get excellent features.</p>
<p>Read more for details.</p>
<h2 id="Intro"><a href="#Intro" class="headerlink" title="Intro"></a>Intro</h2><p>Do you work a lot with templates and meta-programming?</p>
<p>With C++17 we get a few nice improvements: some are quite small, but also there are notable features as well! All in all, the additions should significantly improve writing template code.</p>
<p>Today I wrote about:</p>
<ul>
<li>Template argument deduction for class templates</li>
<li><code>template</code><br><code>&lt;</code><br><code>auto</code><br><code>&gt;</code></li>
<li>Fold expressions</li>
<li><code>constexpr if</code></li>
<li>Plus some smaller, detailed improvements/fixes</li>
</ul>
<p>BTW: if you’re really brave you can still use concepts! They are merged into GCC so you can play with them even before they are finally published.</p>
<h2 id="The-Series"><a href="#The-Series" class="headerlink" title="The Series"></a>The Series</h2><p>This post is the third one in the series about C++17 features details.</p>
<p>The plan for the series</p>
<ol>
<li><a href="http://www.bfilipek.com/2017/05/cpp17-details-fixes-deprecation.html" target="_blank" rel="external">Fixes and deprecation</a></li>
<li><a href="http://www.bfilipek.com/2017/06/cpp17-details-clarifications.html" target="_blank" rel="external">Language clarification</a></li>
<li>Templates (<br><strong>today</strong><br>)</li>
<li>Attributes (soon)</li>
<li>Simplification (soon + 1)</li>
<li>Library changes 1 (soon + 2)</li>
<li>Library changes 2 (soon + 3)</li>
</ol>
<h2 id="Documents-amp-Links"><a href="#Documents-amp-Links" class="headerlink" title="Documents &amp; Links"></a>Documents &amp; Links</h2><p>Just to recall:</p>
<p>First of all, if you want to dig into the standard on your own, you can read the latest draft here:</p>
<p><a href="http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2017/n4659.pdf" target="_blank" rel="external">N4659, 2017-03-21,Working Draft, Standard for Programming Language C++</a>- the link also appears on the<a href="https://isocpp.org/" target="_blank" rel="external">isocpp.org</a>.</p>
<p>WG21 P0636r0:<a href="https://isocpp.org/files/papers/p0636r0.html" target="_blank" rel="external">Changes between C++14 and C++17</a></p>
<p>Compiler support:<a href="http://en.cppreference.com/w/cpp/compiler_support" target="_blank" rel="external">C++ compiler support</a></p>
<p>Moreover, I’ve prepared a list of concise descriptions of all of the C++17 language features:</p>
<p><a href="http://eepurl.com/cyycFz" target="_blank" rel="external">Download a free copy of my C++17 Cheat Sheet!</a></p>
<p>It’s a one-page reference card, PDF.</p>
<p>There’s also a talk from Bryce Lelbach:<a href="https://www.youtube.com/watch?v=LvwXJjRQfHk" target="_blank" rel="external">C++Now 2017: C++17 Features</a></p>
<p>And have a look at my master C++17 features post:C++17 Features</p>
<h2 id="Template-argument-deduction-for-class-templates"><a href="#Template-argument-deduction-for-class-templates" class="headerlink" title="Template argument deduction for class templates"></a>Template argument deduction for class templates</h2><p>I have good and bad news for you :)</p>
<p>Do you often use<code>make&lt;T&gt;</code>functions to construct a templated object (like<code>std::make_pair</code>)?</p>
<p>With C++17 you can forget about (most of) them and just use a regular constructor :)</p>
<p>That also means that a lot of your code - those<code>make&lt;T&gt;</code>functions can now be removed.</p>
<p>The reason?</p>
<p>C++17 filled a gap in the deduction rules for templates. Now the template deduction can happen for standard class templates and not just for functions.</p>
<p>For instance, the following code is (and was) legal:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line">void</div><div class="line">f</div><div class="line">(</div><div class="line">std</div><div class="line">::pair</div><div class="line">&lt;</div><div class="line">int</div><div class="line">, </div><div class="line">char</div><div class="line">&gt;</div><div class="line">)</div><div class="line">;</div><div class="line"></div><div class="line"></div><div class="line">// call:</div><div class="line"></div><div class="line">f(</div><div class="line">std</div><div class="line">::make_pair(</div><div class="line">42</div><div class="line">, </div><div class="line">&apos;z&apos;</div><div class="line">));</div></pre></td></tr></table></figure>
<p>Because<code>std::make_pair</code>is a template function (so we can perform template deduction).</p>
<p>But the following wasn’t (before C++17)</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line">void</div><div class="line">f</div><div class="line">(</div><div class="line">std</div><div class="line">::pair</div><div class="line">&lt;</div><div class="line">int</div><div class="line">, </div><div class="line">char</div><div class="line">&gt;</div><div class="line">)</div><div class="line">;</div><div class="line"></div><div class="line"></div><div class="line">// call:</div><div class="line"></div><div class="line">f(</div><div class="line">std</div><div class="line">::pair(</div><div class="line">42</div><div class="line">, </div><div class="line">&apos;z&apos;</div><div class="line">));</div></pre></td></tr></table></figure>
<p>Looks the same, right? This was not OK because<code>std::pair</code>is a template class, and template classes could not apply type deduction in their initialization.</p>
<p>But now we can do that so that the above code will compile under C++17 conformant compiler.</p>
<p>What about creating local variables like tuples or pairs?</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line">std</div><div class="line">::pair</div><div class="line">&lt;</div><div class="line">int</div><div class="line">, </div><div class="line">double</div><div class="line">&gt;</div><div class="line"> p(</div><div class="line">10</div><div class="line">, </div><div class="line">0.0</div><div class="line">);</div><div class="line"></div><div class="line">// same as</div><div class="line">std</div><div class="line">::</div><div class="line">pair </div><div class="line">p</div><div class="line">(</div><div class="line">10</div><div class="line">, </div><div class="line">0.0</div><div class="line">)</div><div class="line">; </div><div class="line">// deduced automatically!</div></pre></td></tr></table></figure>
<p>Try in Compiler Explorer:<a href="https://godbolt.org/g/z62jwK" target="_blank" rel="external">example, GCC 7.1</a>.</p>
<p>This can substantially reduce complex constructions like</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">std:</div><div class="line">:lock_guard</div><div class="line">&lt;</div><div class="line">std</div><div class="line">:</div><div class="line">:shared_timed_mutex</div><div class="line">, </div><div class="line">        </div><div class="line">std:</div><div class="line">:shared_lock</div><div class="line">&lt;</div><div class="line">std</div><div class="line">:</div><div class="line">:shared_timed_mutex</div><div class="line">&gt;</div><div class="line">&gt;</div><div class="line"> lck(mut</div><div class="line">_</div><div class="line">, r1);</div></pre></td></tr></table></figure>
<p>Can now become:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">std</div><div class="line">::</div><div class="line">lock_guard </div><div class="line">lck</div><div class="line">(mut_, r1)</div><div class="line">;</div></pre></td></tr></table></figure>
<p>Note, that partial deduction cannot happen, you have to specify all the template parameters or none:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div></pre></td><td class="code"><pre><div class="line">std</div><div class="line">::</div><div class="line">tuple </div><div class="line">t</div><div class="line">(</div><div class="line">1</div><div class="line">, </div><div class="line">2</div><div class="line">, </div><div class="line">3</div><div class="line">)</div><div class="line">;              </div><div class="line">// OK: deduction</div><div class="line">std</div><div class="line">::tuple</div><div class="line">&lt;</div><div class="line">int</div><div class="line">,</div><div class="line">int</div><div class="line">,</div><div class="line">int</div><div class="line">&gt;</div><div class="line"> t(</div><div class="line">1</div><div class="line">, </div><div class="line">2</div><div class="line">, </div><div class="line">3</div><div class="line">); </div><div class="line">// OK: all arguments are provided</div><div class="line">std</div><div class="line">::tuple</div><div class="line">&lt;</div><div class="line">int</div><div class="line">&gt;</div><div class="line"> t(</div><div class="line">1</div><div class="line">, </div><div class="line">2</div><div class="line">, </div><div class="line">3</div><div class="line">);         </div><div class="line">// Error: partial deduction</div></pre></td></tr></table></figure>
<p>Also if you’re adventurous you can create your custom class template deduction guides: see here for more information: recent post: Arne Mertz:<a href="https://arne-mertz.de/2017/06/class-template-argument-deduction/#User-defined_deduction_guides" target="_blank" rel="external">Modern C++ Features - Class Template Argument Deduction</a>.</p>
<p>BTW: why not all<code>make</code>functions can be removed? For example, consider<code>make_unique</code>or<code>make_shared</code>are they only for ‘syntactic sugar’ ? I’ll leave this as an open question for now.</p>
<p>More details in</p>
<ul>
<li><a href="http://wg21.link/p0091r3" target="_blank" rel="external">P0091R3</a></li>
<li>Simon Brand:<br><a href="https://blog.tartanllama.xyz/c++/2017/01/11/deduction-for-class-templates/" target="_blank" rel="external">Template argument deduction for class template constructors</a></li>
<li><a href="http://en.cppreference.com/w/cpp/language/class_template_deduction" target="_blank" rel="external">Class template deduction(since C++17) - cppreference</a><br>.</li>
</ul>
<p>MSVC<strong>not yet</strong>, GCC: 7.0, Clang:<strong>not yet</strong>.</p>
<h2 id="Declaring-non-type-template-parameters-with-auto"><a href="#Declaring-non-type-template-parameters-with-auto" class="headerlink" title="Declaring non-type template parameters with auto"></a>Declaring non-type template parameters with auto</h2><p>This is another part of the strategy to use<code>auto</code>everywhere. With C++11 and C++14 you can use it to automatically deduce variables or even return types, plus there are also generic lambdas. Now you can also use it for deducing non-type template parameters.</p>
<p>For example:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">template</div><div class="line">&lt;</div><div class="line">auto</div><div class="line"> value</div><div class="line">&gt;</div><div class="line">void</div><div class="line">f</div><div class="line">()</div><div class="line">&#123; &#125;</div><div class="line"></div><div class="line">f</div><div class="line">&lt;</div><div class="line">10</div><div class="line">&gt;</div><div class="line">();               </div><div class="line">// deduces int</div></pre></td></tr></table></figure>
<p>This is useful, as you don’t have to have a separate parameter for the type of non-type parameter. Like:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">template</div><div class="line">&lt;</div><div class="line">typename</div><div class="line"> Type, Type value</div><div class="line">&gt;</div><div class="line">constexpr</div><div class="line"> Type TConstant = value;</div><div class="line">                </div><div class="line">// ^^^^                        ^^^^  </div><div class="line">constexpr</div><div class="line">auto</div><div class="line">const</div><div class="line"> MySuperConst = TConstant</div><div class="line">&lt;</div><div class="line">int</div><div class="line">, </div><div class="line">100</div><div class="line">&gt;</div><div class="line">;</div></pre></td></tr></table></figure>
<p>with C++17 it’s a bit simpler:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">template</div><div class="line">&lt;</div><div class="line">auto</div><div class="line"> value</div><div class="line">&gt;</div><div class="line">constexpr</div><div class="line">auto</div><div class="line"> TConstant = value;</div><div class="line">                             </div><div class="line">// ^^^^</div><div class="line">constexpr</div><div class="line">auto</div><div class="line">const</div><div class="line"> MySuperConst = TConstant </div><div class="line">&lt;</div><div class="line">100</div><div class="line">&gt;</div><div class="line">;</div></pre></td></tr></table></figure>
<p>So no need to write<code>Type</code>explicitly.</p>
<p>As one of the advanced uses a lot of papers/blogs/talks point to an example of Heterogeneous compile time list:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">template</div><div class="line">&lt;</div><div class="line">auto</div><div class="line"> ... vs</div><div class="line">&gt;</div><div class="line">struct</div><div class="line"> HeterogenousValueList &#123;&#125;;</div><div class="line"></div><div class="line">using</div><div class="line"> MyList = HeterogenousValueList</div><div class="line">&lt;</div><div class="line">&apos;a&apos;</div><div class="line">, </div><div class="line">100</div><div class="line">, </div><div class="line">&apos;b&apos;</div><div class="line">&gt;</div><div class="line">;</div></pre></td></tr></table></figure>
<p>Before C++17 it was not possible to declare such list directly, some wrapper class would have to be provided first.</p>
<p>More details in</p>
<ul>
<li><a href="http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2016/p0127r2.html" target="_blank" rel="external">P0127R2 - Declaring non-type template parameters with auto</a></li>
<li><a href="http://open-std.org/JTC1/SC22/WG21/docs/papers/2016/p0127r1.html" target="_blank" rel="external">P0127R1 - Declaring non-type template arguments with auto</a><ul>
<li>motivation, examples, discussion.</li>
</ul>
</li>
<li><a href="https://stackoverflow.com/questions/38026884/advantages-of-auto-in-template-parameters-in-c17" target="_blank" rel="external">c++ - Advantages of auto in template parameters in C++17 - Stack Overflow</a></li>
<li><a href="https://herbsutter.com/2016/06/30/trip-report-summer-iso-c-standards-meeting-oulu/" target="_blank" rel="external">Trip report: Summer ISO C++ standards meeting (Oulu) | Sutter’s Mill</a></li>
</ul>
<p>MSVC<strong>not yet</strong>, GCC: 7.0, Clang: 4.0.</p>
<h2 id="Fold-expressions"><a href="#Fold-expressions" class="headerlink" title="Fold expressions"></a>Fold expressions</h2><p>With C++11 we got variadic templates which is a great feature, especially if you want to work with a variable number of input parameters to a function. For example, previously (pre C++11) you had to write several different versions of a function (like one for one parameter, another for two parameters, another for three params… ).</p>
<p>Still, variadic templates required some additional code when you wanted to implement ‘recursive’ functions like<code>sum</code>,<code>all</code>. You had to specify rules for the recursion:</p>
<p>For example:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line">auto</div><div class="line">SumCpp11</div><div class="line">()</div><div class="line">&#123;</div><div class="line">    </div><div class="line">return</div><div class="line">0</div><div class="line">;</div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line">template</div><div class="line">&lt;</div><div class="line">typename</div><div class="line"> T1, </div><div class="line">typename</div><div class="line">... T</div><div class="line">&gt;</div><div class="line">auto</div><div class="line">SumCpp11</div><div class="line">(T1 s, T... ts)</div><div class="line">&#123;</div><div class="line">    </div><div class="line">return</div><div class="line"> s + SumCpp11(ts...);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>And with C++17 we can write much simpler code:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line">template</div><div class="line">&lt;</div><div class="line">typename</div><div class="line"> ...Args</div><div class="line">&gt;</div><div class="line">auto</div><div class="line">sum</div><div class="line">(Args ...args)</div><div class="line">&#123; </div><div class="line">    </div><div class="line">return</div><div class="line"> (args + ... + </div><div class="line">0</div><div class="line">); </div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line">// or even:</div><div class="line">template</div><div class="line">&lt;</div><div class="line">typename</div><div class="line"> ...Args</div><div class="line">&gt;</div><div class="line">auto</div><div class="line">sum2</div><div class="line">(Args ...args)</div><div class="line">&#123; </div><div class="line">    </div><div class="line">return</div><div class="line"> (args + ...);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>Fold expressions over a<a href="http://en.cppreference.com/w/cpp/language/parameter_pack" target="_blank" rel="external">parameter pack</a>.</p>
<table>
<thead>
<tr>
<th style="text-align:left">Expression</th>
<th style="text-align:left">Expansion</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">(… op pack)</td>
<td style="text-align:left">((pack1 op pack2) op …) op packN</td>
</tr>
<tr>
<td style="text-align:left">(init op … op pack)</td>
<td style="text-align:left">(((init op pack1) op pack2) op …) op packN</td>
</tr>
<tr>
<td style="text-align:left">(pack op …)</td>
<td style="text-align:left">pack1 op (… op (packN-1 op packN))</td>
</tr>
<tr>
<td style="text-align:left">(pack op … op init)</td>
<td style="text-align:left">pack1 op (… op (packN-1 op (packN op init)))</td>
</tr>
</tbody>
</table>
<p>Also by default we get the following values for empty parameter packs:</p>
<table>
<thead>
<tr>
<th style="text-align:left">Operator</th>
<th style="text-align:left">default value</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">+</td>
<td style="text-align:left">0</td>
</tr>
<tr>
<td style="text-align:left">*</td>
<td style="text-align:left">1</td>
</tr>
<tr>
<td style="text-align:left">&amp;</td>
<td style="text-align:left">-1</td>
</tr>
<tr>
<td style="text-align:left">\</td>
<td style="text-align:left"></td>
<td>0</td>
</tr>
<tr>
<td style="text-align:left">&amp;&amp;</td>
<td style="text-align:left">true</td>
</tr>
<tr>
<td style="text-align:left">\</td>
<td style="text-align:left">\</td>
<td></td>
<td>false</td>
</tr>
<tr>
<td style="text-align:left">,</td>
<td style="text-align:left">void()</td>
</tr>
</tbody>
</table>
<p>Here’s quite nice implementation of a<code>printf</code>using folds:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line">template</div><div class="line">&lt;</div><div class="line">typename</div><div class="line"> ...Args</div><div class="line">&gt;</div><div class="line">void</div><div class="line">FoldPrint</div><div class="line">(Args</div><div class="line">&amp;</div><div class="line">&amp;</div><div class="line">... args)</div><div class="line">&#123;</div><div class="line">    (</div><div class="line">cout</div><div class="line">&lt;</div><div class="line">&lt;</div><div class="line"> ... </div><div class="line">&lt;</div><div class="line">&lt;</div><div class="line"> forward</div><div class="line">&lt;</div><div class="line">Args</div><div class="line">&gt;</div><div class="line">(args)) </div><div class="line">&lt;</div><div class="line">&lt;</div><div class="line">&apos;\n&apos;</div><div class="line">;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>Or a fold over a comma operator:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line">template</div><div class="line">&lt;</div><div class="line">typename</div><div class="line"> T, </div><div class="line">typename</div><div class="line">... Args</div><div class="line">&gt;</div><div class="line">void</div><div class="line">push_back_vec</div><div class="line">(</div><div class="line">std</div><div class="line">::</div><div class="line">vector</div><div class="line">&lt;</div><div class="line">T</div><div class="line">&gt;</div><div class="line">&amp;</div><div class="line"> v, Args</div><div class="line">&amp;</div><div class="line">&amp;</div><div class="line">... args)</div><div class="line">&#123;</div><div class="line">    (v.push_back(args), ...);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>In general, fold expression allows writing cleaner, shorter and probably easier to read code.</p>
<p>More details in:</p>
<ul>
<li><a href="http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2014/n4295.html" target="_blank" rel="external">N4295</a><br>and<br><a href="http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2014/n4295.html" target="_blank" rel="external">N4295</a></li>
<li>“Using fold expressions to simplify variadic function templates” in<br><a href="http://amzn.to/2t62io9" target="_blank" rel="external">Modern C++ Programming Cookbook</a><br>.</li>
<li><a href="https://tartanllama.github.io/c++/2016/11/10/exploding-tuples-fold-expressions/" target="_blank" rel="external">Simon Brand: Exploding tuples with fold expressions</a></li>
<li><a href="http://baptiste-wicht.com/posts/2015/05/cpp17-fold-expressions.html" target="_blank" rel="external">Baptiste Wicht: C++17 Fold Expressions</a></li>
<li><a href="http://www.modernescpp.com/index.php/fold-expressions" target="_blank" rel="external">Fold Expressions - ModernesCpp.com</a></li>
</ul>
<p>MSVC<strong>not yet</strong>, GCC: 6.0, Clang: 3.6 (N4295)/3.9 (N4295).</p>
<h2 id="constexpr-if"><a href="#constexpr-if" class="headerlink" title="constexpr if"></a><code>constexpr if</code></h2><p>This is a big one!</p>
<p>The static-if for C++!</p>
<p>The feature allows you to discard branches of an if statement at compile-time based on a constant expression condition.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">if</div><div class="line"> constexpr(cond)</div><div class="line">     statement1; </div><div class="line">//</div><div class="line"> Discarded </div><div class="line">if</div><div class="line"> cond is </div><div class="line">false</div><div class="line">else</div><div class="line"></div><div class="line">     statement2; </div><div class="line">//</div><div class="line"> Discarded </div><div class="line">if</div><div class="line"> cond is </div><div class="line">true</div></pre></td></tr></table></figure>
<p>For example:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line">template</div><div class="line">&lt;</div><div class="line">typename</div><div class="line"> T</div><div class="line">&gt;</div><div class="line">auto</div><div class="line">get_value</div><div class="line">(T t)</div><div class="line">&#123;</div><div class="line">    </div><div class="line">if</div><div class="line">constexpr</div><div class="line">(</div><div class="line">std</div><div class="line">::is_pointer_v</div><div class="line">&lt;</div><div class="line">T</div><div class="line">&gt;</div><div class="line">)</div><div class="line">return</div><div class="line"> *t</div><div class="line">;</div><div class="line">    </div><div class="line">else</div><div class="line">return</div><div class="line"> t;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>This removes a lot of the necessity for tag dispatching and SFINAE and even for<code>#ifdefs</code>.</p>
<p>I’d like to return to this feature when we are discussing features of C++17 that simplify the language. I hope to come back with more examples of<code>constexpr if</code>.</p>
<p>More details in:</p>
<ul>
<li><a href="http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2016/p0292r2.html" target="_blank" rel="external">P0292R2</a></li>
<li>Simon Brand:<br><a href="https://blog.tartanllama.xyz/c++/2016/12/12/if-constexpr/" target="_blank" rel="external">Simplifying templates and #ifdefs with if constexpr</a></li>
</ul>
<p>MSVC<strong>not yet</strong>, GCC: 7.0, Clang: 3.9.</p>
<h2 id="Other"><a href="#Other" class="headerlink" title="Other"></a>Other</h2><p>In C++17 there are also other language features related to templates. In this post, I wanted to focus on biggest enhancements, so I’ll just mention the other briefly:</p>
<ul>
<li><p>Allow<code>typename</code>in a template template parameters:<a href="http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2014/n4051.html" target="_blank" rel="external">N4051</a>.</p>
<ul>
<li>Allows you to use<br><code>typename</code><br>instead of<br><code>class</code><br>when declaring a template template parameter. Normal type parameters can use them interchangeably, but template template parameters were restricted to<br><code>class</code><br>.</li>
</ul>
</li>
<li><p>DR: Matching of template template-arguments excludes compatible templates:<a href="http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2016/p0522r0.html" target="_blank" rel="external">P0522R0</a>.</p>
<ul>
<li>Improves matching of template template arguments. Resolves<br><a href="http://open-std.org/JTC1/SC22/WG21/docs/papers/2015/n4457.html#150" target="_blank" rel="external">Core issue CWG 150</a><br>.</li>
</ul>
</li>
<li><p>Allow constant evaluation for all non-type template arguments:<a href="http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2014/n4268.html" target="_blank" rel="external">N4268</a></p>
<ul>
<li>Remove syntactic restrictions for pointers, references, and pointers to members that appear as non-type template parameters:</li>
</ul>
</li>
<li><p><code>constexpr</code>lambdas:<a href="http://wg21.link/p0170r1" target="_blank" rel="external">P0170R1</a></p>
<ul>
<li>Lambda expressions may now be constant expressions.</li>
</ul>
</li>
</ul>
<h2 id="Summary"><a href="#Summary" class="headerlink" title="Summary"></a>Summary</h2><p>Is C++17 improving templates and meta-programming? Definitely!</p>
<p>We have really solid features like template deduction for class templates,<code>template&lt;auto&gt;</code>plus some detailed features that fix some of the problems.</p>
<p>Still, for me, the most powerful features, that might have a significant impact on the code is<code>constexpr if</code>and folds. They greatly clean up the code and make it more readable.</p>
<p>What are your favorite parts regarding templates?</p>
<p>Next time we’ll address attributes like<code>[[fallthrough]]</code>or<code>[[nodiscard]]</code>, and I’d like to recall other, already existing attributes. Stay tuned!</p>
<p>Once again, remember to grab my<a href="http://eepurl.com/cyycFz" target="_blank" rel="external"><strong>C++17 Language Ref Card</strong></a>.</p>
<p>Source: <a href="http://www.tuicool.com/articles/hit/rauARne" target="_blank" rel="external">http://www.bfilipek.com/2017/06/cpp17-details-templates.html</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://img1.tuicool.com/raeeu2i.png!web&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;For C++17 everyone wanted to have concepts, and as you know, we didn’t 
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>An Overview of Garbage Collection in Java</title>
    <link href="https://gmagon.com/blog/2017/06/26/an-overview-of-garbage-collection-in-java/"/>
    <id>https://gmagon.com/blog/2017/06/26/an-overview-of-garbage-collection-in-java/</id>
    <published>2017-06-26T00:00:00.000Z</published>
    <updated>2017-06-26T10:20:16.608Z</updated>
    
    <content type="html"><![CDATA[<h2 id="An-Overview-of-Garbage-Collection-in-Java"><a href="#An-Overview-of-Garbage-Collection-in-Java" class="headerlink" title="An Overview of Garbage Collection in Java"></a>An Overview of Garbage Collection in Java</h2><p>DZone’s Guide to</p>
<p>Here we examine the importance of proper garbage collection for Java apps, the components of GC, and the various patterns at your disposal.</p>
<p><a href="https://dzone.com/users/2746645/guideinfoways.html" target="_blank" rel="external">Johnny Morgan</a></p>
<p>Jun. 26, 17</p>
<p>·</p>
<p><a href="https://dzone.com/java-jdk-development-tutorials-tools-news" target="_blank" rel="external">Java Zone</a></p>
<p>Free Resource</p>
<p>Join the DZone community and get the full member experience.</p>
<p>What every Java engineer should know about microservices:<a href="https://info.lightbend.com/COLL-20XX-Reactive-Microservices-Architecture-RES-LP.html?utm_source=dzone&amp;utm_medium=pre-roll-text&amp;utm_campaign=COLL-20XX-Reactive-Microservices-Architecture&amp;utm_term=none&amp;utm_content=java-zone" target="_blank" rel="external">Reactive Microservices Architecture</a>.  Brought to you in partnership with<a href="https://info.lightbend.com/COLL-20XX-Reactive-Microservices-Architecture-RES-LP.html?utm_source=dzone&amp;utm_medium=pre-roll-text&amp;utm_campaign=COLL-20XX-Reactive-Microservices-Architecture&amp;utm_term=none&amp;utm_content=java-zone" target="_blank" rel="external">Lightbend</a>.</p>
<p>The Java garbage collector poses a great impact on the overall working and performance of an application. As the size of the garbage grows, the runtime of an application decreases. Hence, it is essential that you clear this garbage off of your application every now and then to enhance its productivity and user performance.</p>
<p>Garbage collection can be quite a daunting task. After all, choosing a wrong garbage collector type or settings can hamper the functionality of your app. There are typically seven types of garbage collectors known to us. These are classically bifurcated between the ‘mostly’ and ‘most concurrent’ category. With the ‘mostly’ types, they sometimes do not operate as expected and a fallback mechanism takes place. On the other hand, the ‘most concurrent’ collectors function concurrently with the application’s execution and rarely stop the world.</p>
<h2 id="Steps-Involved-in-Garbage-Collection"><a href="#Steps-Involved-in-Garbage-Collection" class="headerlink" title="Steps Involved in Garbage Collection"></a>Steps Involved in Garbage Collection</h2><p>Before implementing the garbage cleaning step, it is essential to note whether your application has touched the GC safe point. That is the range where the collector can quickly recognize the thread execution references and complete the process. If your application has to wait for the safe point, it could very well run out of memory and collapse.</p>
<ul>
<li><p>Mark: Otherwise known as trace, this step involves finding all the live and dead objects in the expansive heap. The collector paints all the reachable live objects, and those left are tagged as dead.</p>
</li>
<li><p>Sweep: Here, the garbage collector looks for dead objects and tracks their location. The bigger the heap, the more time will it take in the sweep to complete the task.</p>
</li>
<li><p>Compact: In this step, the garbage collector rearranges the live objects in order to make the space congestion free. As the process commences, remapping takes place, which means your application’s overall runtime should be significantly enhanced.</p>
</li>
</ul>
<h2 id="Types-of-Collectors"><a href="#Types-of-Collectors" class="headerlink" title="Types of Collectors"></a>Types of Collectors</h2><ul>
<li><p>Mark/sweep/compact collector: Performs the function in three phases.</p>
</li>
<li><p>Mark/Compact Collector: Performs the task in two steps, skipping the sweep phase.</p>
</li>
<li><p>Copying Collector: Performs all the three phases in one go. It’s quite aggressive in nature and makes use of ‘from’ and ‘to’ space to move all the live objects. It then fixes the bugs and removes the garbage.</p>
</li>
<li><p>Generation Collector: This works on the principle that most objects die young. The software creates new objects but at the same time, sooner rather later, it discards them, too. Through a generator collector, a developer can filter the creation, reduce the rate at which the Young Generation is pushed to the Old Generation, and keep pace with contemporary CPU throughput.</p>
</li>
<li><p>Remembered Set: In this set, marks are used. These record the exact location of the Young Generation. Write banners are put to use to track the references from these generations into the Old Generation and keep these ‘remembered sets’ up-to-date.</p>
</li>
</ul>
<p>Note on commercial implementations: There are two basic commercially available and proven approaches for the garbage collection implementation. The first one being a parallel approach and the other being the concurrent approach. </p>
<h2 id="Role-of-Developers-and-Architects"><a href="#Role-of-Developers-and-Architects" class="headerlink" title="Role of Developers and Architects"></a>Role of Developers and Architects</h2><p>The first and the foremost thing is to understand the nature of the application and the core functionality of the garbage collector.</p>
<ul>
<li><p>Garbage Collection Metrics: A plethora of application features affect the workings of the garbage collector. These include the allocation time of objects in memory, their life, and the need to save some for a long time. The mutation rate is the next thing that matters. And lastly, there are the metrics that help track the live set and the heap shape of these objects.</p>
</li>
<li><p>The compaction time and the mark time make for the most important metrics for tracking the time of the garbage collection cycle. While the latter measures the time taken for identification of live objects, the former maps time taken to free up the memory and do the necessary allocation.</p>
</li>
<li><p>Empty Memory for Clean-up Process: Each of these above-listed garbage collectors needs some amount of space to perform the task efficiently. More space practically halves the collector’s work and CPU consumption required for the job. The opposite applies to when there’s a shortage of empty memory.</p>
</li>
<li><p>Implementing the GC Strategy: While the process of compaction is unavoidable, what many GCs do is delay the process to a possible point and free the easy empty space as soon as possible. Another technique is the focusing on concurrent markings and sweeping while at the same time skipping compaction. This proves helpful, too.</p>
</li>
</ul>
<p>Bottom line, garbage collection is an integral part of an application’s performance over the Java platform. As Java devs, we need to implement strategies in order to build an application that speaks of excellent performance, scalability, and reliability.</p>
<p>Microservices for Java, explained. Revitalize your legacy systems (and your career) with<a href="https://info.lightbend.com/COLL-20XX-Reactive-Microservices-Architecture-RES-LP.html?utm_source=dzone&amp;utm_medium=post-roll-text&amp;utm_campaign=COLL-20XX-Reactive-Microservices-Architecture&amp;utm_term=none&amp;utm_content=java-zone" target="_blank" rel="external">Reactive Microservices Architecture</a>, a free O’Reilly book. Brought to you in partnership with<a href="https://info.lightbend.com/COLL-20XX-Reactive-Microservices-Architecture-RES-LP.html?utm_source=dzone&amp;utm_medium=post-roll-text&amp;utm_campaign=COLL-20XX-Reactive-Microservices-Architecture&amp;utm_term=none&amp;utm_content=java-zone" target="_blank" rel="external">Lightbend</a>.</p>
<p>Source: <a href="http://www.tuicool.com/articles/hit/rmQJJzJ" target="_blank" rel="external">https://dzone.com/articles/an-overview-of-garbage-collection-in-java</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;An-Overview-of-Garbage-Collection-in-Java&quot;&gt;&lt;a href=&quot;#An-Overview-of-Garbage-Collection-in-Java&quot; class=&quot;headerlink&quot; title=&quot;An Overvie
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Snap Behaviour iOS Tutorial</title>
    <link href="https://gmagon.com/blog/2017/06/26/snap-behaviour-ios-tutorial/"/>
    <id>https://gmagon.com/blog/2017/06/26/snap-behaviour-ios-tutorial/</id>
    <published>2017-06-26T00:00:00.000Z</published>
    <updated>2017-06-26T09:37:13.934Z</updated>
    
    <content type="html"><![CDATA[<p>As part of UIKit Dynamics you can add Snap Behavior to a view, which allows it  to be “snapped” to a specific location. The view will move to its new position as if it is pulled by a spring. In this tutorial we will let the user click on the screen to “snap” an image into place. This tutorial is made with Xcode 8.3.3 and built for iOS 10.3.</p>
<p>Open Xcode and create a new Single View Application.</p>
<p><img src="http://img2.tuicool.com/q6zmueM.png!web" alt=""></p>
<p>For product name, use<strong>IOS10SnapBehaviourTutorial</strong>and then fill out the Organization Name and Organization Identifier with your customary values. Enter Swift as Language and make sure only iPhone is selected in Devices.</p>
<p><img src="http://img2.tuicool.com/NzQvArq.png!web" alt=""></p>
<p>Go the<strong>Storyboard</strong>and drag an Image View to the main view, Go to the Size Inspector and set the size to 100 by 100 points.</p>
<p><img src="http://img1.tuicool.com/zuAJziF.png!web" alt=""></p>
<p>We need a image to insert in our Image View. Downloadthisimage, unpack it and add it to the project. </p>
<p><img src="http://img2.tuicool.com/euYBfir.png!web" alt=""></p>
<p>Select the Image View, go to the Attributes Inspector and add the apple.jpg file to Image field.</p>
<p><img src="http://img2.tuicool.com/Y3iuqyM.png!web" alt=""></p>
<p>The Storyboard should now look like this.</p>
<p><img src="http://img0.tuicool.com/vmQjI3q.png!web" alt=""></p>
<p>Open the Assistant Editor and make sure the ViewController.swift file is visible. Ctrl + drag from the Image View to the ViewController class and create the following Outlet.</p>
<p><img src="http://img1.tuicool.com/MfuIj2z.png!web" alt=""></p>
<p>Go to the<strong>ViewController.swift</strong>file and add the following properties</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">var</div><div class="line">animator</div><div class="line">:UIDynamicAnimator</div><div class="line">!</div><div class="line"></div><div class="line">var</div><div class="line">snapBehaviour</div><div class="line">:UISnapBehavior</div><div class="line">!</div></pre></td></tr></table></figure>
<p>The animator property provides physics-related capabilities for its item and the snapBehaviour property will be applied to the Image View later on. Next, change the<strong>viewDidLoad</strong>method to</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line">override</div><div class="line">func</div><div class="line">viewDidLoad</div><div class="line">()</div><div class="line"> &#123;</div><div class="line">    </div><div class="line">super</div><div class="line">.viewDidLoad()</div><div class="line">        </div><div class="line">    </div><div class="line">// Create the Tap Gesture Recognizer</div><div class="line">let</div><div class="line"> tapGesture = </div><div class="line">UITapGestureRecognizer</div><div class="line">(target: </div><div class="line">self</div><div class="line">, action: #selector(userHasTapped))</div><div class="line">    </div><div class="line">self</div><div class="line">.view.addGestureRecognizer(tapGesture)</div><div class="line">        </div><div class="line">    </div><div class="line">// Create the Dynamic Animator</div><div class="line"></div><div class="line">    animator = </div><div class="line">UIDynamicAnimator</div><div class="line">(referenceView: </div><div class="line">self</div><div class="line">.view)</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>A Tap Gesture Recognizer is created, which will call the userHasTapped method when the user taps on the screen. The Dynamic Animator is created with the main view as its reference view. Next, implement the<strong>userHasTapped</strong>method</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line">func</div><div class="line">userHasTapped</div><div class="line">(tap:UITapGestureRecognizer)</div><div class="line"> &#123;</div><div class="line">    </div><div class="line">let</div><div class="line"> touchPoint = tap.location(</div><div class="line">in</div><div class="line">: </div><div class="line">self</div><div class="line">.view)</div><div class="line">    </div><div class="line">if</div><div class="line"> snapBehaviour != </div><div class="line">nil</div><div class="line"> &#123;</div><div class="line">        animator.removeBehavior(snapBehaviour)</div><div class="line">    &#125;</div><div class="line">        </div><div class="line">    snapBehaviour = </div><div class="line">UISnapBehavior</div><div class="line">(item: imageView, snapTo: touchPoint)</div><div class="line">    snapBehaviour.damping = </div><div class="line">0.3</div><div class="line"></div><div class="line">    animator.addBehavior(snapBehaviour)</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>First the point is captured where the user has touched the screen. There can be only one Snap Behaviour instance active so we check if there is already a behaviour active. If so, we will remove this behaviour. Next the Snap Behaviour is initialized with the<strong>item:snapToPoint</strong>initializer. The item is our Image View and the point to snap to is the user’s touch input. The damping property is the amount of oscillation the item has of the end of the snap animation. Finally, the Snap Behaviour is added to the Dynamic Animator.</p>
<p>Build and Runthe project, click anywhere on the screen to “snap” the image to its new location.</p>
<p><img src="http://img2.tuicool.com/mIvmY33.png!web" alt=""></p>
<p>You can download the source code of the<strong>IOS10SnapBehaviourTutorial</strong>at the ioscreator repository on<a href="https://github.com/ioscreator/ioscreator" target="_blank" rel="external">Github</a></p>
<p>Source: <a href="http://www.tuicool.com/articles/hit/QJfqM33" target="_blank" rel="external">https://www.ioscreator.com/tutorials/snap-behaviour-ios-tutorial-ios10</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;As part of UIKit Dynamics you can add Snap Behavior to a view, which allows it  to be “snapped” to a specific location. The view will mov
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>YouTube has 1.5 billion logged-in monthly users watching a ton of mobile video</title>
    <link href="https://gmagon.com/blog/2017/06/23/youtube-has-15-billion-logged-in-monthly-users-watching-a-ton-of-mobile-video/"/>
    <id>https://gmagon.com/blog/2017/06/23/youtube-has-15-billion-logged-in-monthly-users-watching-a-ton-of-mobile-video/</id>
    <published>2017-06-23T00:00:00.000Z</published>
    <updated>2017-06-23T07:53:27.168Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://img0.tuicool.com/FN7BjyZ.jpg!web" alt=""></p>
<p>This year at VidCon, YouTube shared some new metrics that really drive home how much its dominating mobile video usage and how quickly its service is gaining viewers on TVs.</p>
<p>The highlight was the fact that there are now 1.5 billion logged-in users visiting the site every month. The distinction is important as there are undoubtedly still quite a few folks hopping on YouTube that aren’t necessarily using Google Accounts to do so.</p>
<p>The site announced it hit 1 billion monthly active users in 2013, though that number assumedly related to all visitors, logged-in and not.</p>
<p>Logged-in users spend an average of_<strong> over one hour per day</strong>_watching YouTube just on mobile devices, a pretty daunting number that showcases just how pervasive video has gotten on the mobile web.</p>
<p>“When we compare that [metric] to TV, people — in some countries like the US — watch up to four hours per day so we think there’s lots of room to get people to watch even more YouTube,” CEO Susan Wojcicki said onstage.</p>
<p>On that note, the company said that the TV screen was their fastest growing medium of consumption, noting that the category was growing 90% year-over-year, something that the company’s new YouTube TV service is undoubtedly going to add to. The company didn’t have any new details to share on desktop video viewing habits.</p>
<p>While sites like Facebook begin to throw more resources behind video efforts, it’s clear that regardless of the arbitrary “view” statistics thrown around, the sheer amount of time spent engaging with a service is a constant metric and one that YouTube has a lot to say about.</p>
<p>Source: <a href="http://www.tuicool.com/articles/hit/u2i2MzM" target="_blank" rel="external">https://techcrunch.com/2017/06/22/youtube-has-1-5-billion-logged-in-monthly-users-watching-a-ton-of-mobile-video/</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://img0.tuicool.com/FN7BjyZ.jpg!web&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;This year at VidCon, YouTube shared some new metrics that really drive 
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Search an element in an unsorted array using minimum number of comparisons</title>
    <link href="https://gmagon.com/blog/2017/06/23/search-an-element-in-an-unsorted-array-using-minimum-number-of-comparisons/"/>
    <id>https://gmagon.com/blog/2017/06/23/search-an-element-in-an-unsorted-array-using-minimum-number-of-comparisons/</id>
    <published>2017-06-23T00:00:00.000Z</published>
    <updated>2017-06-23T07:53:27.164Z</updated>
    
    <content type="html"><![CDATA[<p>Given an array of <strong>n </strong>distinct integers and an element <strong>x</strong>. Search the element <strong>x </strong>in the array using minimum number of comparisons. Any sort of comparison will contribute 1 to the count of comparisons. For example, the condition used to terminate a loop, will also contribute 1 to the count of comparisons each time it gets executed. Expressions like <strong>while (n) {n–;} </strong>also contribute to the count of comparisons as value of <strong>n </strong>is being compared internally so as to decide whether or not to terminate the loop.</p>
<p>Examples:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div></pre></td><td class="code"><pre><div class="line">Input :</div><div class="line"> arr[] = &#123;</div><div class="line">4</div><div class="line">, </div><div class="line">6</div><div class="line">, </div><div class="line">1</div><div class="line">, </div><div class="line">5</div><div class="line">, </div><div class="line">8</div><div class="line">&#125;, </div><div class="line">        x = </div><div class="line">1</div><div class="line">Output :</div><div class="line"> Found</div><div class="line"></div><div class="line"></div><div class="line">Input :</div><div class="line"> arr[] = &#123;</div><div class="line">10</div><div class="line">, </div><div class="line">3</div><div class="line">, </div><div class="line">12</div><div class="line">, </div><div class="line">7</div><div class="line">, </div><div class="line">2</div><div class="line">, </div><div class="line">11</div><div class="line">, </div><div class="line">9</div><div class="line">&#125;, </div><div class="line">        x = </div><div class="line">15</div><div class="line">Output :</div><div class="line"> Not Found</div></pre></td></tr></table></figure>
<p>Asked in Adobe Interview</p>
<h2 id="Recommended-Please-try-your-approach-on-IDE-first-before-moving-on-to-the-solution"><a href="#Recommended-Please-try-your-approach-on-IDE-first-before-moving-on-to-the-solution" class="headerlink" title="Recommended: Please try your approach on{IDE}first, before moving on to the solution."></a><a href="http://ide.geeksforgeeks.org/" target="_blank" rel="external">Recommended: Please try your approach on<strong>{IDE}</strong>first, before moving on to the solution.</a></h2><p>Below simple method to search requires<strong>2n + 1</strong>comparisons in worst case.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">for</div><div class="line"> (i = </div><div class="line">0</div><div class="line">; i </div><div class="line">&lt;</div><div class="line"> n; i++)  </div><div class="line">// Worst case n+1</div><div class="line">if</div><div class="line"> (arr[i] == x)  </div><div class="line">// Worst case n</div><div class="line">return</div><div class="line"> i;</div></pre></td></tr></table></figure>
<p>How to reduce number of comparisons?</p>
<p>The idea is to copy x (element to be searched) to last location so that one last comparison when x is not present in arr[] is saved.</p>
<p><strong>Algorithm:</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div></pre></td><td class="code"><pre><div class="line">search(arr, n, x)</div><div class="line"></div><div class="line">if</div><div class="line"> arr[n</div><div class="line">-1</div><div class="line">] == x  </div><div class="line">// 1 comparison</div><div class="line">return</div><div class="line">&quot;true&quot;</div><div class="line"></div><div class="line">    backup = arr[n</div><div class="line">-1</div><div class="line">]</div><div class="line">    arr[n</div><div class="line">-1</div><div class="line">] = x</div><div class="line"></div><div class="line"></div><div class="line">for</div><div class="line"> i=</div><div class="line">0</div><div class="line">, i++ </div><div class="line">// no termination condition</div><div class="line">if</div><div class="line"> arr[i] == x </div><div class="line">// execute at most n times</div><div class="line">// that is at-most n comparisons</div><div class="line"></div><div class="line">            arr[n</div><div class="line">-1</div><div class="line">] = backup</div><div class="line"></div><div class="line">return</div><div class="line"> (i </div><div class="line">&lt;</div><div class="line"> n</div><div class="line">-1</div><div class="line">) </div><div class="line">// 1 comparison</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div></pre></td><td class="code"><pre><div class="line">// C++ implementation to search an element in</div><div class="line">// the unsorted array using minimum number of</div><div class="line">// comparisons</div><div class="line">#</div><div class="line">include</div><div class="line">&lt;</div><div class="line">bits/stdc++.h</div><div class="line">&gt;</div><div class="line">using</div><div class="line">namespace</div><div class="line">std</div><div class="line">;</div><div class="line"></div><div class="line"></div><div class="line">// function to search an element in</div><div class="line">// minimum number of comparisons</div><div class="line">string</div><div class="line">search</div><div class="line">(</div><div class="line">int</div><div class="line"> arr[], </div><div class="line">int</div><div class="line"> n, </div><div class="line">int</div><div class="line"> x)</div><div class="line">&#123;</div><div class="line"></div><div class="line">// 1st comparison</div><div class="line">if</div><div class="line"> (arr[n</div><div class="line">-1</div><div class="line">] == x)</div><div class="line"></div><div class="line">return</div><div class="line">&quot;Found&quot;</div><div class="line">;</div><div class="line"></div><div class="line"></div><div class="line">int</div><div class="line"> backup = arr[n</div><div class="line">-1</div><div class="line">];</div><div class="line">    arr[n</div><div class="line">-1</div><div class="line">] = x;</div><div class="line"></div><div class="line"></div><div class="line">// no termination condition and thus</div><div class="line">// no comparison</div><div class="line">for</div><div class="line"> (</div><div class="line">int</div><div class="line"> i = </div><div class="line">0</div><div class="line">; ;i++)</div><div class="line">    &#123;</div><div class="line"></div><div class="line">// this would be executed at-most n times</div><div class="line">// and therefore at-most n comparisons</div><div class="line">if</div><div class="line"> (arr[i] == x)</div><div class="line">        &#123;</div><div class="line"></div><div class="line">// replace arr[n-1] with its actual element</div><div class="line">// as in original &apos;arr[]&apos;</div><div class="line"></div><div class="line">            arr[n</div><div class="line">-1</div><div class="line">] = backup;</div><div class="line"></div><div class="line"></div><div class="line">// if &apos;x&apos; is found before the &apos;(n-1)th&apos;</div><div class="line">// index, then it is present in the array</div><div class="line">// final comparison</div><div class="line">if</div><div class="line"> (i </div><div class="line">&lt;</div><div class="line"> n</div><div class="line">-1</div><div class="line">)</div><div class="line"></div><div class="line">return</div><div class="line">&quot;Found&quot;</div><div class="line">;</div><div class="line"></div><div class="line"></div><div class="line">// else not present in the array</div><div class="line">return</div><div class="line">&quot;Not Found&quot;</div><div class="line">;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line">// Driver program to test above</div><div class="line">int</div><div class="line">main</div><div class="line">()</div><div class="line">&#123;</div><div class="line"></div><div class="line">int</div><div class="line"> arr[] = &#123;</div><div class="line">4</div><div class="line">, </div><div class="line">6</div><div class="line">, </div><div class="line">1</div><div class="line">, </div><div class="line">5</div><div class="line">, </div><div class="line">8</div><div class="line">&#125;;</div><div class="line"></div><div class="line">int</div><div class="line"> n = </div><div class="line">sizeof</div><div class="line">(arr) / </div><div class="line">sizeof</div><div class="line">(arr[</div><div class="line">0</div><div class="line">]);</div><div class="line"></div><div class="line">int</div><div class="line"> x = </div><div class="line">1</div><div class="line">;</div><div class="line"></div><div class="line">cout</div><div class="line">&lt;</div><div class="line">&lt;</div><div class="line"> search(arr, n, x);</div><div class="line"></div><div class="line">return</div><div class="line">0</div><div class="line">;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>Output:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Found</div></pre></td></tr></table></figure>
<p>Time Complexity: O(n)</p>
<p>Number of Comparisons: atmost<strong>(n+2)</strong>comparisons</p>
<p>This article is contributed by<strong>Ayush Jauhari</strong>. If you like GeeksforGeeks and would like to contribute, you can also write an article using<a href="http://www.contribute.geeksforgeeks.org/" target="_blank" rel="external">contribute.geeksforgeeks.org</a>or mail your article to contribute@geeksforgeeks.org. See your article appearing on the GeeksforGeeks main page and help other Geeks.</p>
<p>Please write comments if you find anything incorrect, or you want to share more information about the topic discussed above.</p>
<p>Source: <a href="http://www.tuicool.com/articles/hit/iQrQvm3" target="_blank" rel="external">http://www.geeksforgeeks.org/search-element-unsorted-array-using-minimum-number-comparisons/</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Given an array of &lt;strong&gt;n &lt;/strong&gt;distinct integers and an element &lt;strong&gt;x&lt;/strong&gt;. Search the element &lt;strong&gt;x &lt;/strong&gt;in the ar
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Face Recognition in R</title>
    <link href="https://gmagon.com/blog/2017/06/23/face-recognition-in-r/"/>
    <id>https://gmagon.com/blog/2017/06/23/face-recognition-in-r/</id>
    <published>2017-06-23T00:00:00.000Z</published>
    <updated>2017-06-23T07:53:27.161Z</updated>
    
    <content type="html"><![CDATA[<p>(This article was first published on<a href="https://www.stoltzmaniac.com/facial-recognition-in-r/" target="_blank" rel="external"><strong>R-Projects – Stoltzmaniac</strong></a>, and kindly contributed toR-bloggers)</p>
<h3 id="Face-Recognition-in-R"><a href="#Face-Recognition-in-R" class="headerlink" title="Face Recognition in R"></a>Face Recognition in R</h3><p>OpenCV is an incredibly powerful tool to have in your toolbox. I have had a lot of success using it in Python but very little success in R. I haven’t done too much other than searching Google but it seems as if “imager” and “videoplayR” provide a lot of the functionality but not all of it.</p>
<p>I have never actually called Python functions from R before. Initially, I tried the “rPython” library – that has a lot of advantages, but was completely unnecessary for me so system() worked absolutely fine. While this example is extremely simple, it should help to illustrate how easy it is to utilize the power of Python from within R. I need to give credit to Harrison Kinsley for all of his efforts and work at<a href="https://www.pythonprogramming.net/" target="_blank" rel="external">PythonProgramming.net</a>– I used a lot of his code and ideas for this post (especially the Python portion).</p>
<p>Using videoplayR I created a function which would take a picture with my webcam and save it as “originalWebcamShot.png”</p>
<p>Note:saving images and then loading them isn’t very efficient but works in this case and is extremely easy to implement. It saves us from passing variables, functions, objects, and/or methods between R and Python in this case.</p>
<p><img src="http://img2.tuicool.com/vayqquF.png!web" alt=""></p>
<p>I’ll trace my steps backward through this post (I think it’s easier to understand what’s going on in this case).</p>
<h4 id="The-main-R-file"><a href="#The-main-R-file" class="headerlink" title="The main.R file:"></a>The main.R file:</h4><ol>
<li>Calls my user-defined function<ul>
<li>Turns on the camera</li>
<li>Takes a picture</li>
<li>Saves it as “originalWebcamShot.png”</li>
</ul>
</li>
<li>Runs the Python script<ul>
<li>Loads the previously saved image</li>
<li>Loads the Haar Cascade algorithms</li>
<li>Detects faces and eyes</li>
<li>Draws colored rectangles around them</li>
<li>Saves the new image as “modifiedWebcamShot.png”</li>
</ul>
</li>
<li>Reads new image into R</li>
<li>Displays both images</li>
</ol>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div></pre></td><td class="code"><pre><div class="line">source</div><div class="line">(</div><div class="line">&apos;imageFunctions.R&apos;</div><div class="line">)</div><div class="line"></div><div class="line">library</div><div class="line">(</div><div class="line">&quot;videoplayR&quot;</div><div class="line">)</div><div class="line"></div><div class="line"></div><div class="line"># Take a picture and save it</div><div class="line"></div><div class="line">img = webcamImage(rollFrames = </div><div class="line">10</div><div class="line">, </div><div class="line">                  showImage = </div><div class="line">FALSE</div><div class="line">,</div><div class="line">                  saveImageToWD = </div><div class="line">&apos;originalWebcamShot.png&apos;</div><div class="line">)</div><div class="line"></div><div class="line"></div><div class="line"># Run Python script to detect faces, draw rectangles, return new image</div><div class="line"></div><div class="line">system(</div><div class="line">&apos;python3 facialRecognition.py&apos;</div><div class="line">)</div><div class="line"></div><div class="line"></div><div class="line"># Read in new image</div><div class="line"></div><div class="line">img.face = readImg(</div><div class="line">&quot;modifiedWebcamShot.png&quot;</div><div class="line">)</div><div class="line"></div><div class="line"></div><div class="line"># Display images</div><div class="line"></div><div class="line">imshow(img)</div><div class="line">imshow(img.face)</div></pre></td></tr></table></figure>
<p>The user-defined function:</p>
<ol>
<li>Function inputs<ul>
<li>rollFrames is the number of pictures to take (allows the camera to adjust)</li>
<li>showImage gives the option to display the image</li>
<li>saveImageToWD saves the image generated to the current working directory</li>
</ul>
</li>
<li>Turns the webcam on</li>
<li>Takes pictures (number of rollFrames)</li>
<li>Uses basic logic to determine to show images and/or save them</li>
<li>Returns the image</li>
</ol>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div></pre></td><td class="code"><pre><div class="line">library(</div><div class="line">&quot;videoplayR&quot;</div><div class="line">)</div><div class="line"></div><div class="line">webcamImage = function(rollFrames = </div><div class="line">4</div><div class="line">, showImage = FALSE, saveImageToWD = NA)&#123;</div><div class="line"></div><div class="line">  </div><div class="line"># rollFrames runs through multiple pictures - allows camera to adjust</div><div class="line"># showImage allows opportunity to display image within function</div><div class="line"># Turn on webcam</div><div class="line"></div><div class="line">  stream = readStream(</div><div class="line">0</div><div class="line">)</div><div class="line"></div><div class="line">  </div><div class="line"># Take pictures</div><div class="line">print</div><div class="line">(</div><div class="line">&quot;Video stream initiated.&quot;</div><div class="line">)</div><div class="line">  </div><div class="line">for</div><div class="line">(i in se</div><div class="line">q(rollFrames)</div><div class="line">)&#123;</div><div class="line">    img = nextFrame(stream)</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  </div><div class="line"># Turn off camera</div><div class="line"></div><div class="line">  release(stream)</div><div class="line"></div><div class="line">  </div><div class="line"># Display image if requested</div><div class="line">if</div><div class="line">(showImage == TRUE)&#123;</div><div class="line">    imshow(img)</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  </div><div class="line">if</div><div class="line">(!is.na(saveImageToWD))&#123;</div><div class="line">    fileName = paste(getwd(),</div><div class="line">&quot;/&quot;</div><div class="line">,saveImageToWD,sep=</div><div class="line">&apos;&apos;</div><div class="line">)</div><div class="line">    </div><div class="line">print</div><div class="line">(paste(</div><div class="line">&quot;Saving Image To: &quot;</div><div class="line">,fileName, sep=</div><div class="line">&apos;&apos;</div><div class="line">))</div><div class="line">    writeImg(fileName,img)</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  </div><div class="line">return</div><div class="line">(img)</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>The Python script:</p>
<ol>
<li>Loads the algorithms from xml files</li>
<li>Loads the image from “originalWebcamShot.png”</li>
<li>Converts the image to grayscale</li>
<li>Runs the facial detection algorithm</li>
<li>Runs the eye detection algorithm (within the face)</li>
<li>Draws rectangles around the face and eyes (different colors)</li>
<li>Saves the new image as “modifiedWebcamShot.png”</li>
</ol>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div></pre></td><td class="code"><pre><div class="line">import</div><div class="line"> numpy </div><div class="line">as</div><div class="line"> np</div><div class="line"></div><div class="line">import</div><div class="line"> cv2</div><div class="line"></div><div class="line"></div><div class="line">def</div><div class="line">main</div><div class="line">()</div><div class="line">:</div><div class="line"># I followed Harrison Kingsley&apos;s work for this</div><div class="line"># Much of the source code is found https://pythonprogramming.net/haar-cascade-face-eye-detection-python-opencv-tutorial/</div><div class="line"></div><div class="line"></div><div class="line">    face_cascade = cv2.CascadeClassifier(</div><div class="line">&apos;haarcascade_frontalface_default.xml&apos;</div><div class="line">)</div><div class="line">    eye_cascade = cv2.CascadeClassifier(</div><div class="line">&apos;haarcascade_eye.xml&apos;</div><div class="line">)</div><div class="line"></div><div class="line">    img = cv2.imread(</div><div class="line">&apos;originalWebcamShot.png&apos;</div><div class="line">)</div><div class="line"></div><div class="line">    gray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)</div><div class="line">    faces = face_cascade.detectMultiScale(gray, </div><div class="line">1.3</div><div class="line">, </div><div class="line">5</div><div class="line">)</div><div class="line"></div><div class="line">    </div><div class="line">for</div><div class="line"> (x,y,w,h) </div><div class="line">in</div><div class="line"> faces:</div><div class="line">        cv2.rectangle(img,(x,y),(x+w,y+h),(</div><div class="line">0</div><div class="line">,</div><div class="line">0</div><div class="line">,</div><div class="line">255</div><div class="line">),</div><div class="line">2</div><div class="line">)</div><div class="line">        roi_gray = gray[y:y+h, x:x+w]</div><div class="line">        roi_color = img[y:y+h, x:x+w]</div><div class="line"></div><div class="line">        eyes = eye_cascade.detectMultiScale(roi_gray)</div><div class="line">        </div><div class="line">for</div><div class="line"> (ex,ey,ew,eh) </div><div class="line">in</div><div class="line"> eyes:</div><div class="line">            cv2.rectangle(roi_color,(ex,ey),(ex+ew,ey+eh),(</div><div class="line">0</div><div class="line">,</div><div class="line">255</div><div class="line">,</div><div class="line">0</div><div class="line">),</div><div class="line">2</div><div class="line">)</div><div class="line"></div><div class="line">    cv2.imwrite(</div><div class="line">&apos;modifiedWebcamShot.png&apos;</div><div class="line">,img)</div><div class="line"></div><div class="line"></div><div class="line">if</div><div class="line"> __name__ == </div><div class="line">&apos;__main__&apos;</div><div class="line">:</div><div class="line">    main()</div></pre></td></tr></table></figure>
<p>The Python code was entirely based off of Harrison Kinsley’s work:</p>
<ul>
<li>@sentdex<br><a href="https://twitter.com/Sentdex" target="_blank" rel="external">Twitter</a><br>|<br><a href="https://www.youtube.com/sentdex" target="_blank" rel="external">YouTube</a></li>
<li>Website:<br><a href="https://pythonprogramming.net/haar-cascade-face-eye-detection-python-opencv-tutorial/" target="_blank" rel="external">PythonProgramming.net</a></li>
</ul>
<p>Thanks for reading. As always, the code is on my<a href="https://github.com/stoltzmaniac/ML-Image-Processing-R" target="_blank" rel="external">GitHub</a></p>
<p>Source: <a href="http://www.tuicool.com/articles/hit/6VZ3MzF" target="_blank" rel="external">https://www.r-bloggers.com/face-recognition-in-r/</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;(This article was first published on&lt;a href=&quot;https://www.stoltzmaniac.com/facial-recognition-in-r/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;stron
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Is 30 Years Old GIF Still Popular Now?</title>
    <link href="https://gmagon.com/blog/2017/06/23/is-30-years-old-gif-still-popular-now/"/>
    <id>https://gmagon.com/blog/2017/06/23/is-30-years-old-gif-still-popular-now/</id>
    <published>2017-06-23T00:00:00.000Z</published>
    <updated>2017-06-23T09:54:32.282Z</updated>
    
    <content type="html"><![CDATA[<p>Several days ago,  Facebook has been celebrated the 30 years birthday to the most popular image format-GIF. GIF born on June 15, 1987 which stands a big step up from its old black-and-white graphics. </p>
<p>Maybe you cannot comprehend what actually GIF is, but you must familiar with this: </p>
<p><img src="/assets/bXQNq_s-200x150.gif" alt=""></p>
<p>That’s right, memes in your phone is made of GIF format, which you always use when talking with someone in your social network and can’t stop using it, just as following:</p>
<p><img src="/assets/text-messages_o_295497.jpg" alt=""></p>
<p>Memes has been popular just  in recent years, but GIF is ancient in the Web, maybe older than you…</p>
<p>There has been a haunting question about GIF is how to pronounce it.</p>
<p>some say it it pronounced with a soft G, like “jiff.” Others with a hard G, like “ghiff.” </p>
<p>Fortunately, most dictionaries accept both pronunciations as correct. So you can read it as what you want.</p>
<p>GIF has a rival, called APNG or animated PNG, “it is a high quality animated image format complete with full alpha channel and graceful degradation has been available and usable since 2004.” The major advantage of APNG versus an animated GIF is image quality. APNGs simply look better, especially on a wider variety of backgrounds, and there’s already support baked into both Firefox and Opera; Chrome users can <a href="https://chrome.google.com/webstore/detail/apng/ehkepjiconegkhpodgoaeamnpckdbblp?hl=en" target="_blank" rel="external">download an extension</a> to support APNG files.</p>
<p><img src="http://img2.tuicool.com/YZBjiu.jpg" alt=""></p>
<p>The good news is you can easily convert you GIF files to APNG through the free tool: </p>
<p>Gmagon Gif</p>
<p><a href="https://gmagon.com/products/store/gmagon_gif/">https://gmagon.com/products/store/gmagon_gif/</a></p>
<p>Maybe we should feel grateful for those GIF or memes that brings much happiness to us.</p>
<p><img src="/assets/dicaprio3-583e33155f9b58d5b19e3a00.jpg" alt=""></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Several days ago,  Facebook has been celebrated the 30 years birthday to the most popular image format-GIF. GIF born on June 15, 1987 whi
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>12 Factors to Cloud Success</title>
    <link href="https://gmagon.com/blog/2017/06/23/12-factors-to-cloud-success/"/>
    <id>https://gmagon.com/blog/2017/06/23/12-factors-to-cloud-success/</id>
    <published>2017-06-23T00:00:00.000Z</published>
    <updated>2017-06-23T07:53:27.158Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://img1.tuicool.com/3AZNviN.png!web" alt=""></p>
<h2 id="12-Factors-to-Cloud-Success"><a href="#12-Factors-to-Cloud-Success" class="headerlink" title="12 Factors to Cloud Success"></a>12 Factors to Cloud Success</h2><p>Posted byRafael Benevides onJune 22, 2017June 19, 2017</p>
<p>Hey, developers! Do you care about using the best practices to apply your application to the cloud? If so then you should be using<a href="https://12factor.net/" target="_blank" rel="external">The 12-factor App</a>, which is a methodology for building software-as-a-service. Today I like to talk about the 12-factor App, which I had presented to a group at the Red Hat Summit last month.</p>
<p>Every developer that is moving their application to the cloud will face a different environment than what they are used to, their datacenter or own premise and that’s why they should care about the 12-factor methodology. This 12 step methodology was created by Heroku, which is a cloud provider who found a common solution to most of what their customers were experiencing and decided to release these solutions as a methodology. These 12 factors are intended to solve problems related to applications running in the cloud. If there was one key takeaway from my session it was not the idea to have the audience memorize these 12 factors but to have an understanding of why each one is important.</p>
<ol>
<li><strong>Codebase</strong><br>– use version control, one codebase tracked in revision control for many deployments.</li>
<li><strong>Dependencies</strong><br>– use a package manager and don’t commit dependencies in the codebase repository.</li>
<li><strong>Config</strong><br>– store the config in Environment Variable, if you have to repackage your application, you’re doing it wrong.</li>
<li><strong>Backing Services</strong><br>– a<br><a href="https://12factor.net/codebase" target="_blank" rel="external">deploy</a><br>of the twelve-factor app should be able to swap out a local MySQL database with one managed by a third party (such as<br><a href="http://aws.amazon.com/rds/" target="_blank" rel="external">Amazon RDS</a><br>) without any changes to the app’s code.</li>
<li><strong>Build, Release, Run</strong><br>– the twelve-factor app uses strict separation between the build, release, and run stages. Every release should always have a unique release ID and releases should allow rollback.</li>
<li><strong>Processes</strong><br>– execute the app as one or more stateless processes, the Twelve-factor processes are stateless and<br><a href="http://en.wikipedia.org/wiki/Shared_nothing_architecture" target="_blank" rel="external">share-nothing</a><br>.</li>
<li><strong>Port Binding</strong><br>– export services via port binding, The twelve-factor app is completely self-contained.</li>
<li><strong>Concurrency</strong><br>– scale out via the process model. Each process should be individually scaled, with Factor 6 (Stateless), it is easy to scale the services.</li>
<li><strong>Disposability</strong><br>– maximize robustness with fast startup and graceful shutdown, we can achieve this with containers.</li>
<li><strong>Dev/Prod Parity</strong><br>– Keep development, staging, and production as similar as possible, the twelve-factor app is designed for<br><a href="http://www.avc.com/a_vc/2011/02/continuous-deployment.html" target="_blank" rel="external">continuous deployment</a><br>by keeping the gap between development and production small.</li>
<li><strong>Logs</strong><br>– treat logs as event streams, a twelve-factor app never concerns itself with routing or storage of its output stream.</li>
<li><strong>Admin Processes</strong><br>– run admin/management tasks as one-off processes.</li>
</ol>
<p>The 12-factor App methodology is technology and language agnostic but satisfied by<a href="https://developers.redhat.com/containers/" target="_blank" rel="external">Containers</a>,<a href="https://developers.redhat.com/microservices/" target="_blank" rel="external">Microservices</a>, and CI/CD Pipelines with a focus on<a href="https://developers.redhat.com/devops/" target="_blank" rel="external">DevOps</a>.You can access more information on The 12-factor Appat<a href="https://12factor.net/" target="_blank" rel="external">https://12factor.net/</a>.</p>
<p><strong>Whether you are new to Containers or have experience, downloading this</strong><a href="https://developers.redhat.com/promotions/docker-cheatsheet/" target="_blank" rel="external"><strong>cheat sheet</strong></a><strong>can assist you when encountering tasks you haven’t done lately.</strong></p>
<p>Source: <a href="http://www.tuicool.com/articles/hit/qqa2yyN" target="_blank" rel="external">https://developers.redhat.com/blog/2017/06/22/12-factors-to-cloud-success/</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://img1.tuicool.com/3AZNviN.png!web&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;12-Factors-to-Cloud-Success&quot;&gt;&lt;a href=&quot;#12-Factors-to-Cloud-Success
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>We Get It Facebook, You Want Us To Post More</title>
    <link href="https://gmagon.com/blog/2017/06/22/we-get-it-facebook-you-want-us-to-post-more/"/>
    <id>https://gmagon.com/blog/2017/06/22/we-get-it-facebook-you-want-us-to-post-more/</id>
    <published>2017-06-22T00:00:00.000Z</published>
    <updated>2017-06-22T09:45:34.629Z</updated>
    
    <content type="html"><![CDATA[<h2 id="It-only-works-if-you-share-stuff-inside-it"><a href="#It-only-works-if-you-share-stuff-inside-it" class="headerlink" title="It only works if you share stuff inside it."></a>It only works if you share stuff inside it.</h2><p><img src="http://img0.tuicool.com/UJbiM3m.png!web" alt=""></p>
<h2 id="No-sharing-no-Facebook"><a href="#No-sharing-no-Facebook" class="headerlink" title="No sharing, no Facebook"></a>No sharing, no Facebook</h2><p><img src="http://img1.tuicool.com/QjiIBja.png!web" alt=""></p>
<h2 id="Yes-sharing-happy-Facebook"><a href="#Yes-sharing-happy-Facebook" class="headerlink" title="Yes sharing, happy Facebook"></a>Yes sharing, happy Facebook</h2><p><img src="http://img2.tuicool.com/JZbamiB.jpg!web" alt=""></p>
<h2 id="So-Facebook-really-wants-us-post-stuff"><a href="#So-Facebook-really-wants-us-post-stuff" class="headerlink" title="So Facebook really wants us post stuff."></a>So Facebook really wants us post stuff.</h2><p><img src="http://img2.tuicool.com/eUZraii.jpg!web" alt=""></p>
<p>And it started doing this new thing where it tells you how many days in a row you’ve shared.</p>
<p><img src="http://img2.tuicool.com/uIjY3qa.jpg!web" alt=""></p>
<h2 id="To-encourage-you-to-feed-its-feed"><a href="#To-encourage-you-to-feed-its-feed" class="headerlink" title="To encourage you to feed its feed"></a>To encourage you to feed its feed</h2><p><img src="http://img2.tuicool.com/AfMFzmZ.jpg!web" alt=""></p>
<h3 id="Okay-Facebook-We-get-it"><a href="#Okay-Facebook-We-get-it" class="headerlink" title="Okay, Facebook. We get it."></a>Okay, Facebook. We get it.</h3><p><img src="http://img0.tuicool.com/uI3aEvR.png!web" alt=""></p>
<h2 id="Thanks-for-the-reminder-I-guess"><a href="#Thanks-for-the-reminder-I-guess" class="headerlink" title="Thanks for the reminder, I guess?"></a>Thanks for the reminder, I guess?</h2><p><img src="http://img1.tuicool.com/RjArmeI.png!web" alt=""></p>
<h2 id="Lord-Have-Mercy"><a href="#Lord-Have-Mercy" class="headerlink" title="Lord. Have. Mercy."></a>Lord. Have. Mercy.</h2><p><img src="http://img0.tuicool.com/iQ3aIrM.png!web" alt=""></p>
<h2 id="People-are-certainly-uhhh-responding"><a href="#People-are-certainly-uhhh-responding" class="headerlink" title="People are certainly, uhhh, responding."></a>People are certainly, uhhh, responding.</h2><p><img src="http://img0.tuicool.com/yaUNRzv.png!web" alt=""></p>
<p><img src="http://img1.tuicool.com/zEryMb2.png!web" alt=""></p>
<p><img src="http://img2.tuicool.com/fAfyE3R.png!web" alt=""></p>
<p><img src="http://img0.tuicool.com/ZfmqmiU.png!web" alt=""></p>
<p>Facebook is also letting our friends know when we post — probably so they engage and make us feel better about posting, so we post more.</p>
<p><img src="http://img0.tuicool.com/V3UZVbR.png!web" alt=""></p>
<p><img src="http://img1.tuicool.com/N3IzyyU.jpg!web" alt=""></p>
<p><a href="https://twitter.com/ashleyfeinberg" target="_blank" rel="external">Ashley Feinberg</a><a href="https://twitter.com/ashleyfeinberg" target="_blank" rel="external">@ashleyfeinberg</a></p>
<p>Really proud of my friend @hamiltonnolan today</p>
<p><a href="https://twitter.com/ashleyfeinberg/status/877197470840889348" target="_blank" rel="external">04:12 PM - 20 Jun 2017</a></p>
<p><a href="https://twitter.com/intent/retweet?tweet_id=877197470840889348" target="_blank" rel="external">Retweet</a><a href="https://twitter.com/intent/favorite?tweet_id=877197470840889348" target="_blank" rel="external">Favorite</a></p>
<h2 id="Yeeeesh"><a href="#Yeeeesh" class="headerlink" title="Yeeeesh"></a>Yeeeesh</h2><p><img src="http://img2.tuicool.com/u6Rriyf.png!web" alt=""></p>
<h2 id="Other-Facebook-products-like-Messenger-use-a-similar-approach"><a href="#Other-Facebook-products-like-Messenger-use-a-similar-approach" class="headerlink" title="Other Facebook products, like Messenger, use a similar approach."></a>Other Facebook products, like Messenger, use a similar approach.</h2><p><img src="http://img2.tuicool.com/Jzuiyu7.jpg!web" alt=""></p>
<p><img src="http://img2.tuicool.com/zIBVvuv.jpg!web" alt=""></p>
<h2 id="Feels-good-doesn’t-it"><a href="#Feels-good-doesn’t-it" class="headerlink" title="Feels good, doesn’t it?"></a>Feels good, doesn’t it?</h2><p><img src="http://img1.tuicool.com/juyE7jm.gif" alt=""></p>
<p>“We’re always looking for ways to help people share and connect on Facebook. Notifications are one of the ways we do this,” a Facebook spokesperson told BuzzFeed News.</p>
<p><img src="http://img0.tuicool.com/mIrMZ3V.gif" alt=""></p>
<p>Giphy / Viagiphy.com</p>
<p>Alex Kantrowitz is a senior technology reporter for BuzzFeed News and is based in San Francisco. He reports on social and communications.</p>
<p>Contact Alex Kantrowitz at<a href="mailto:alex.kantrowitz@buzzfeed.com" target="_blank" rel="external">alex.kantrowitz@buzzfeed.com</a>.</p>
<p>Got a confidential tip?Submit it here.</p>
<p>Source: <a href="http://www.tuicool.com/articles/hit/VjMbuyn" target="_blank" rel="external">https://www.buzzfeed.com/alexkantrowitz/we-get-it-facebook-you-want-us-to-post-more</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;It-only-works-if-you-share-stuff-inside-it&quot;&gt;&lt;a href=&quot;#It-only-works-if-you-share-stuff-inside-it&quot; class=&quot;headerlink&quot; title=&quot;It only 
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Facebook is testing a feature to prevent profile pictures being abused by other users</title>
    <link href="https://gmagon.com/blog/2017/06/22/facebook-is-testing-a-feature-to-prevent-profile-pictures-being-abused-by-other-users/"/>
    <id>https://gmagon.com/blog/2017/06/22/facebook-is-testing-a-feature-to-prevent-profile-pictures-being-abused-by-other-users/</id>
    <published>2017-06-22T00:00:00.000Z</published>
    <updated>2017-06-22T09:45:34.622Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://img1.tuicool.com/AziuEjU.jpg!web" alt=""></p>
<p>Facebook is introducing a new feature to give users peace of mind around how their profile photo can be used and accessed by others.</p>
<p>The social network today<a href="https://newsroom.fb.com/news/2017/06/giving-people-more-control-over-their-facebook-profile-picture/" target="_blank" rel="external">announced</a>a pilot program in India that is designed to protect users who are concerned about other people gaining access to their profile image. The new ‘photo guard’ feature has a range of safety measures that include:</p>
<ul>
<li>Preventing other users from downloading a person’s profile pic, or sharing it with others</li>
<li>Preventing other users from tagging other people in a person’s profile pic</li>
<li>Preventing other users from taking screenshots of a person’s profile pic — although this is initially for the Android app only</li>
</ul>
<p>When activated, the optional guard is visible through a blue border and shield around a user’s profile pic. The company partnered with an Indian illustrator to make these safety controls more compelling with attractively designed options.</p>
<p>The new feature is driven by research that the company undertook in India. In a blogpost, Facebook explained that it found that “some women choose not to share profile pictures that include their faces anywhere on the internet because they’re concerned about what may happen to their photos.”</p>
<p>It believes this solution may go some way to helping, and it said that early tests indicate that people are 75 percent less likely to copy a photo when the guard option is enabled.</p>
<p>This rollout is initially happening in India, but Facebook said it hopes to expand it to other countries “soon.”</p>
<p>Source: <a href="http://www.tuicool.com/articles/hit/NZJjqqm" target="_blank" rel="external">https://techcrunch.com/2017/06/21/facebook-is-testing-a-feature-to-prevent-profile-pictures-being-abused-by-other-users/</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://img1.tuicool.com/AziuEjU.jpg!web&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;Facebook is introducing a new feature to give users peace of mind aroun
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>10 things in tech you need to know today (GOOG)</title>
    <link href="https://gmagon.com/blog/2017/06/22/10-things-in-tech-you-need-to-know-today-goog/"/>
    <id>https://gmagon.com/blog/2017/06/22/10-things-in-tech-you-need-to-know-today-goog/</id>
    <published>2017-06-22T00:00:00.000Z</published>
    <updated>2017-06-22T09:45:34.617Z</updated>
    
    <content type="html"><![CDATA[<p>Good morning! Here is the tech news you need to know this Thursday.</p>
<ol>
<li><p><a href="http://uk.businessinsider.com/report-bill-gurley-to-leave-uber-board-2017-6" target="_blank" rel="external">Tech investor Bill Gurley is leaving the board of Uber.</a>Gurley will be replaced with Matt Cohler, another partner at Benchmark Capital. </p>
</li>
<li><p><a href="http://uk.businessinsider.com/report-snapchat-buys-zenly-2017-6" target="_blank" rel="external">Snapchat reportedly paid over $250 million (£197 million) for an app that lets you track your friends.</a>It’s called Zenly. </p>
</li>
<li><p><a href="http://uk.businessinsider.com/alibaba-stock-price-jack-ma-artificial-intelligence-machine-learning-may-cause-world-war-iii-2017-6" target="_blank" rel="external">Alibaba’s chairman and founder, Jack Ma, thinks that new technologies could be a threat to more than just jobs.</a>Ma said that new technologies like machine learning and artificial intelligence could lead to the third World War.</p>
</li>
<li><p><a href="http://uk.businessinsider.com/deepmind-is-funding-climate-change-research-at-cambridge-university-2017-6" target="_blank" rel="external">DeepMind is funding climate change research at Cambridge University.</a>It wants to use artificial intelligence to slow down global warming. </p>
</li>
<li><p><a href="http://uk.businessinsider.com/uk-digital-minister-matt-hancock-says-ai-needs-regulating-2017-6" target="_blank" rel="external">UK digital minister Matt Hancock said that the government will look to start regulating companies and scientists working in the field of artificial intelligence (AI).</a>He said AI has the potential change the world we live in but stressed that the technology must be regulated by a suitable framework.</p>
</li>
<li><p><a href="http://uk.businessinsider.com/tesla-head-of-its-autopilot-software-chris-lattner-left-the-company-less-than-six-months-after-he-joined-2017-6" target="_blank" rel="external">Tesla’s head of its autopilot software left the company less than six months after he joined.</a>His name is Chris Lattner. </p>
</li>
<li><p><a href="http://uk.businessinsider.com/uber-ceo-kalanick-on-coo-search-when-got-letter-urging-resignation-2017-6" target="_blank" rel="external">Uber’s Travis Kalanick was in Chicago to interview a COO candidate when he got the letter demanding his resignation.</a>Uber has been searching for a COO since early March.</p>
</li>
<li><p><a href="http://uk.businessinsider.com/ethereum-price-flash-crash-2017-6" target="_blank" rel="external">Red-hot cryptocurrency Ethereum flash-crashed to $13 (£10) before bouncing back to $296 (£233).</a>The tumble occurred in a matter of minutes. </p>
</li>
<li><p><a href="http://uk.businessinsider.com/snapchat-snap-maps-feature-shows-where-your-friends-are-2017-6" target="_blank" rel="external">Snapchat’s new maps feature shows you where your friends are.</a>A trailer for the feature shows two women browsing a map in Snapchat and tapping on a nearby location to see friends sharing videos from an ongoing concert.</p>
</li>
<li><p><a href="http://uk.businessinsider.com/deepmind-expandsl-streams-app-to-musgrove-park-hospital-2017-6" target="_blank" rel="external">Google DeepMind is due to start rolling out its controversial Streams healthcare app to another UK hospital.</a>It signed a five year deal with Taunton and Somerset NHS Foundation Trust.</p>
</li>
</ol>
<p>NOW WATCH:<a href="http://www.businessinsider.com/tesla-model-x-america-electric-car-road-trip-elon-musk-2017-6" target="_blank" rel="external">We drove a brand-new Tesla Model X from San Francisco to New York — here’s what happened</a></p>
<p>Loading video…</p>
<p>Source: <a href="http://www.tuicool.com/articles/hit/UvueAzN" target="_blank" rel="external">http://www.businessinsider.com/10-things-in-tech-you-need-to-know-today-june-22-2017-6</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Good morning! Here is the tech news you need to know this Thursday.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://uk.businessinsider.com/report-bill-gu
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Stop Copying, Design Your Own Agile Product Management Framework Instead</title>
    <link href="https://gmagon.com/blog/2017/06/22/stop-copying-design-your-own-agile-product-management-framework-instead/"/>
    <id>https://gmagon.com/blog/2017/06/22/stop-copying-design-your-own-agile-product-management-framework-instead/</id>
    <published>2017-06-22T00:00:00.000Z</published>
    <updated>2017-06-22T09:45:34.626Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://img1.tuicool.com/32M7J3U.jpg!web" alt=""></p>
<p>Being agile is cool. You do it because, hey, everybody is agile now – or at least they seem to be. I guess you’ve got familiar with the fun procedures, read three articles, convinced your team members and BOOM! You’re doing it. Or, are you?</p>
<h2 id="Adapt-not-adopt"><a href="#Adapt-not-adopt" class="headerlink" title="Adapt, not adopt"></a>Adapt, not adopt</h2><p>I had a beer with one of my project manager friends recently. As the topic of work came up, she started complaining about her company’s Scrum method. She said it was too inflexible and had been causing more frustration than benefits. I had asked how they used it and she replied:</p>
<p>“We adopted it from a book.”</p>
<p>Adopting a process is not the best way to do things. Try to adapt it instead. Dig deep and find your challenges. Set up a research plan to reveal pain points. Involve stakeholders, interview your team members, and continuously improve how you manage projects. These are just a few things that can be missed along the way.</p>
<h2 id="‘Computer-define-Challenges’"><a href="#‘Computer-define-Challenges’" class="headerlink" title="‘Computer define: Challenges’"></a>‘Computer define: Challenges’</h2><p>Let’s go back to the beginning. First things first, I recommend researching the crap out of the challenges. Feels too basic? Yes, but it is necessary to set a purpose for a new process created from scratch. And it helps focus on intents, as<a href="https://hackerchick.com/are-we-agile-yet/" target="_blank" rel="external">Abby Fichtner states</a>in her article.</p>
<p>So, break down every thought until you find your main challenges. Here’s a silly little example:</p>
<ul>
<li>What pains does your team have?</li>
<li>They do a lot of overtime</li>
<li>How come?</li>
<li>Our clients say we don’t work enough.</li>
<li>Why do they say that?</li>
<li>They haven’t received any outcome for months.</li>
<li>What are you going to do about it?</li>
<li>I want my team to provide deliverables on a weekly basis.</li>
</ul>
<p>Do interviews with team members. Ask more than one “why”. Empathize with them to learn what their pain points are, what they’re good at and what they hate the most. Learn how they do certain tasks they have problems with. And report everything you find.</p>
<p>If your company is far too big to talk to everyone, talk to the key people with the most pieces of information. Find their incentives and invite them to take part in the ideation process. Finding the purpose of agile together could help kickstart the collaboration.</p>
<p>Hard to convince C-level? You might want to know what each stakeholder’s desires are. Try to hire an agile professional who explains the benefits to them. Straightforward communication is also a key here.</p>
<p>Also, collect what you already have to form a foundation. Why change something that works? This way it’s easier to find what the missing parts are.</p>
<p><img src="http://img1.tuicool.com/Qb2Q7jJ.jpg!web" alt=""></p>
<h2 id="Design-your-own-agile-process"><a href="#Design-your-own-agile-process" class="headerlink" title="Design your own agile process"></a>Design your own agile process</h2><p>Here comes the fun part. As you are now aware of what you have and what you want to achieve, you can start looking for tools to reach your goals. If they match your statements, try to adapt them for your team. Don’t worry: none of them are as hard as they look.</p>
<h4 id="Using-our-example-above"><a href="#Using-our-example-above" class="headerlink" title="Using our example above:"></a>Using our example above:</h4><ul>
<li>If regular deliverables are important to you, try to use<br>story points<br>from Scrum. This way you can slice up your tasks.</li>
<li>If you deliver new features regularly, but usage statistics do not get better, try to focus more on product discovery and solve people’s real problems instead of fast feature building.</li>
<li>Weekly client meetings<br>can help demonstrate your presence. “Hey, we’re here! Here are the things we’ve done since last week.”</li>
<li>Daily standups<br>could be also useful to track your team’s progress and difficulties.</li>
<li>A five-hour weekly<br>sprint planning<br>seems to be overkill if you want to focus on fast deliverables.</li>
</ul>
<p>It is important to do everything as a team. It’s not a one-man workshop: you can only change your organization’s processes if you do it together. Sit down with everyone responsible for the change and let them be part of the work.</p>
<p>If you have the opportunity to experiment with your team, do it as soon as possible. I’d suggest remaining modular: if something seems to be working, do it. If something causes more pain than gain after a few months, get rid of it.<a href="https://www.nngroup.com/articles/doing-ux-agile-world/" target="_blank" rel="external">Hola Loranger says</a>that process gradually gets more perfect with practice. You’ll gain experience along the way after the risky start.</p>
<p><img src="http://img2.tuicool.com/vQv2Arv.jpg!web" alt=""></p>
<h2 id="Set-a-framework"><a href="#Set-a-framework" class="headerlink" title="Set a framework"></a>Set a framework</h2><p>The biggest thing I’ve learned from my failures is that I need to write down everything. Yes, even that little half-thought! Then I structure and map my thoughts and show them to others.</p>
<p>A good framework starts with collaboration after the first thoughts are born. At<a href="https://uxstudioteam.com/" target="_blank" rel="external">UX Studio</a>, we use internal “How We Work” meetings to develop our processes. We take a poll with topics to decide which we want to deal with. After choosing the topic, we divide into smaller groups and ideate. At the end, we share it with each other and decide on the next steps. Sometimes we organize an education session or more How We Work meetings if needed.</p>
<p>Write a handy document of your process, even if it only consists of three bullet points at the beginning. If you have the same three points a few months later, well, you’re a superhero then! This way, there’s always a document to rely on in case you forget something. And it’s also handy if a new member joins the team.</p>
<p><strong>What is a good framework like?</strong></p>
<ul>
<li>Simple and easy to use</li>
<li>Defined jointly with the team</li>
<li>Written down with concise wording and bullet points</li>
<li>Everyone knows it and uses it naturally</li>
<li>Always available for everyone in the team</li>
<li>Improved and refined regularly</li>
<li>May contain pieces of best practices from other organizations</li>
<li>Explained and shared with new team members</li>
</ul>
<p><strong>What are the elements of an agile product management framework?</strong></p>
<ul>
<li>Product discovery: How do you explore the pains and needs of your customers systematically? What do you do with the findings?</li>
<li>Team structure and task break-down: Who works together, and how do you distribute the tasks and responsibilities between your team? How will different people work together (for example, devs and designers)?</li>
<li>Strategy and roadmaps: When do you refresh your product strategy? How do you involve others in this process? How do you share the results with everyone?</li>
<li>Measure: How will you measure the team’s and the product’s performance? What qualitative and quantitative methods will you use?</li>
<li>Learn: How will your team learn from its experience? How and when will you update your methods together?</li>
<li>Stakeholders: How will you share your efforts with shareholders and involve them in strategic decisions?</li>
</ul>
<h2 id="Is-it-worth-it"><a href="#Is-it-worth-it" class="headerlink" title="Is it worth it?"></a>Is it worth it?</h2><p>We at<a href="https://uxstudioteam.com/" target="_blank" rel="external">UX Studio</a>use our own design process, adapted to each project and fine-tuned for the product itself. We’ve built it on several agile processes, but we’ve changed it fundamentally so that it works best with small project teams. We iterate once a week, and research in every phase from the beginning. And I can tell it saves more time and money than you can imagine.</p>
<p>It wouldn’t be bulletproof unless we frequently measured and revised it. If you feel that your process is still chaotic but you can see the “grid of thoughts”, that’s absolutely okay. In my opinion, that’s the sign of continuous monitoring and changing. So, yes, it’s worth the time.</p>
<h4 id="As-a-tiny-takeaway"><a href="#As-a-tiny-takeaway" class="headerlink" title="As a tiny takeaway:"></a>As a tiny takeaway:</h4><ol>
<li>Research your team thoroughly</li>
<li>Establish statements</li>
<li>Find the best tools</li>
<li>Write down what you do</li>
<li>Refine continuously</li>
</ol>
<p>Remain interested? Find out more about<a href="https://uxstudioteam.com/ux-blog/agile-design-process/" target="_blank" rel="external">Agile Design Process in general here</a>. Already done it? You may want to dig deeper and study our<a href="https://uxstudioteam.com/ux-blog/ux-design-process-steps/" target="_blank" rel="external">step-by-step guidance</a>about how to successfully use agile.</p>
<p>And hey! Let’s make this article as a conversation starter!</p>
<p>Source: <a href="http://www.tuicool.com/articles/hit/UveEFrV" target="_blank" rel="external">https://uxstudioteam.com/ux-blog/agile-product-management/</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://img1.tuicool.com/32M7J3U.jpg!web&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;Being agile is cool. You do it because, hey, everybody is agile now – o
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Crown – Fast and flexible game engine written in sane C++</title>
    <link href="https://gmagon.com/blog/2017/06/22/crown-fast-and-flexible-game-engine-written-in-sane-c++/"/>
    <id>https://gmagon.com/blog/2017/06/22/crown-fast-and-flexible-game-engine-written-in-sane-c++/</id>
    <published>2017-06-22T00:00:00.000Z</published>
    <updated>2017-06-22T09:45:34.619Z</updated>
    
    <content type="html"><![CDATA[<h2 id="The-flexible-game-engine"><a href="#The-flexible-game-engine" class="headerlink" title="The flexible game engine."></a>The flexible game engine.</h2><p>Crown is a general purpose data-driven game engin</p>
<p>The flexible game engine.</p>
<p>Crown is a general purpose data-driven game engine, written from scratch in<a href="https://gist.github.com/bkaradzic/2e39896bc7d8c34e042b" target="_blank" rel="external">orthodox C++</a>with a minimalistic and data-oriented design philosophy in mind.</p>
<p>It is loosely inspired by Bitsquid (now Stingray) engine and its design principles; the current Lua API is similar to that of Bitsquid but this engine is_not_meant to be its clone_nor_to be API compatible with it.</p>
<h2 id="Screenshots"><a href="#Screenshots" class="headerlink" title="Screenshots"></a>Screenshots</h2><h3 id="Level-Editor"><a href="#Level-Editor" class="headerlink" title="Level Editor"></a><a href="https://github.com/dbartolini/crown/tree/master/tools/level_editor" target="_blank" rel="external">Level Editor</a></h3><p><img src="http://img2.tuicool.com/3iEnqmm.png!web" alt=""></p>
<h3 id="00-empty"><a href="#00-empty" class="headerlink" title="00-empty"></a><a href="https://github.com/dbartolini/crown/tree/master/samples/00-empty" target="_blank" rel="external">00-empty</a></h3><p>Engine initialization and shutdown.</p>
<h3 id="01-physics"><a href="#01-physics" class="headerlink" title="01-physics"></a><a href="https://github.com/dbartolini/crown/tree/master/samples/01-physics" target="_blank" rel="external">01-physics</a></h3><p><img src="http://img1.tuicool.com/bm2MFnU.png!web" alt=""></p>
<h3 id="02-animation"><a href="#02-animation" class="headerlink" title="02-animation"></a><a href="https://github.com/dbartolini/crown/tree/master/samples/02-animation" target="_blank" rel="external">02-animation</a></h3><p><img src="http://img1.tuicool.com/F7f6Fba.png!web" alt=""></p>
<h2 id="Download"><a href="#Download" class="headerlink" title="Download"></a>Download</h2><h3 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a>Linux</h3><p><a href="https://github.com/dbartolini/crown/releases/download/v0.0.28/crown-0.0.28-linux-x64.tar.gz" target="_blank" rel="external">crown-0.0.28-linux-x64.tar.gz</a></p>
<h2 id="Documentation"><a href="#Documentation" class="headerlink" title="Documentation"></a>Documentation</h2><ul>
<li><a href="http://dbartolini.github.io/crown/html" target="_blank" rel="external">Manual</a></li>
<li><a href="http://dbartolini.github.io/crown/html/lua_api.html" target="_blank" rel="external">Lua API</a></li>
<li><a href="http://dbartolini.github.io/crown/doxygen/modules" target="_blank" rel="external">C++ API</a></li>
</ul>
<h2 id="Building"><a href="#Building" class="headerlink" title="Building"></a>Building</h2><h3 id="Prerequisites"><a href="#Prerequisites" class="headerlink" title="Prerequisites"></a>Prerequisites</h3><h3 id="Android"><a href="#Android" class="headerlink" title="Android"></a>Android</h3><p>Android NDK (<a href="https://developer.android.com/tools/sdk/ndk/index.html" target="_blank" rel="external">https://developer.android.com/tools/sdk/ndk/index.html</a>)</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">$ </div><div class="line">export</div><div class="line"> ANDROID_NDK_ROOT=</div><div class="line">&lt;</div><div class="line">path</div><div class="line">/</div><div class="line">to</div><div class="line">/</div><div class="line">android_ndk</div><div class="line">&gt;</div><div class="line"></div><div class="line">$ </div><div class="line">export</div><div class="line"> ANDROID_NDK_ARM=</div><div class="line">&lt;</div><div class="line">path</div><div class="line">/</div><div class="line">to</div><div class="line">/</div><div class="line">android_ndk_arm</div><div class="line">&gt;</div></pre></td></tr></table></figure>
<h3 id="Linux-Ubuntu-gt-16-04"><a href="#Linux-Ubuntu-gt-16-04" class="headerlink" title="Linux (Ubuntu &gt;= 16.04)"></a>Linux (Ubuntu &gt;= 16.04)</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">$ sudo </div><div class="line">add</div><div class="line">-apt-repository </div><div class="line">pp</div><div class="line">a:vala</div><div class="line">-team</div><div class="line">$ sudo apt-</div><div class="line">get</div><div class="line"> install libgtk-</div><div class="line">3</div><div class="line">-dev valac libgee-</div><div class="line">0.8</div><div class="line">-dev</div><div class="line">$ sudo apt-</div><div class="line">get</div><div class="line"> install mesa-common-dev libgl1-mesa-dev libpulse-dev libxrandr-dev</div></pre></td></tr></table></figure>
<h3 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a>Windows</h3><p>MSYS2 (<a href="http://www.msys2.org/" target="_blank" rel="external">http://www.msys2.org</a>)</p>
<h3 id="Building-and-running-Level-Editor"><a href="#Building-and-running-Level-Editor" class="headerlink" title="Building and running Level Editor"></a>Building and running Level Editor</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$ make tools-linux-release64</div><div class="line">$ cd build/linux64/bin</div><div class="line">$ ./level-editor-release ../../../samples/</div><div class="line">01</div><div class="line">-physics</div></pre></td></tr></table></figure>
<h2 id="Contact"><a href="#Contact" class="headerlink" title="Contact"></a>Contact</h2><p>Daniele Bartolini (<a href="https://twitter.com/aa_dani_bart" target="_blank" rel="external">@aa_dani_bart</a>)</p>
<p>Project page:<a href="https://github.com/dbartolini/crown" target="_blank" rel="external">https://github.com/dbartolini/crown</a></p>
<h2 id="Contributors"><a href="#Contributors" class="headerlink" title="Contributors"></a>Contributors</h2><p>In chronological order.</p>
<p>Daniele Bartolini (<a href="https://github.com/dbartolini" target="_blank" rel="external">@dbartolini</a>)</p>
<p>Simone Boscaratto (<a href="https://github.com/Xed89" target="_blank" rel="external">@Xed89</a>)</p>
<p>Michele Rossi (<a href="https://github.com/mikymod" target="_blank" rel="external">@mikymod</a>)</p>
<p>Michela Iacchelli - Pepper logo.</p>
<h2 id="License"><a href="#License" class="headerlink" title="License"></a>License</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div></pre></td><td class="code"><pre><div class="line">Copyright (c) 2012-2017 Daniele Bartolini and individual contributors.</div><div class="line"></div><div class="line">Permission is hereby granted, free of charge, to any person</div><div class="line">obtaining a copy of this software and associated documentation</div><div class="line">files (the &quot;Software&quot;), to deal in the Software without</div><div class="line">restriction, including without limitation the rights to </div><div class="line">use</div><div class="line">,</div><div class="line">copy, </div><div class="line">modify</div><div class="line">, </div><div class="line">merge</div><div class="line">, publish, </div><div class="line">distribute</div><div class="line">, sublicense, </div><div class="line">and</div><div class="line">/</div><div class="line">or</div><div class="line"> sell</div><div class="line">copies </div><div class="line">of</div><div class="line"> the Software, </div><div class="line">and</div><div class="line">to</div><div class="line"> permit persons </div><div class="line">to</div><div class="line"> whom the</div><div class="line">Software </div><div class="line">is</div><div class="line"> furnished </div><div class="line">to</div><div class="line">do</div><div class="line"> so, subject </div><div class="line">to</div><div class="line"> the </div><div class="line">following</div><div class="line"></div><div class="line">conditions:</div><div class="line"></div><div class="line">The above copyright </div><div class="line">notice</div><div class="line">and</div><div class="line"> this permission </div><div class="line">notice</div><div class="line"> shall be</div><div class="line">included </div><div class="line">in</div><div class="line"> all copies </div><div class="line">or</div><div class="line"> substantial portions </div><div class="line">of</div><div class="line"> the Software.</div><div class="line"></div><div class="line">THE SOFTWARE </div><div class="line">IS</div><div class="line"> PROVIDED </div><div class="line">&quot;AS IS&quot;</div><div class="line">, </div><div class="line">WITHOUT</div><div class="line"> WARRANTY </div><div class="line">OF</div><div class="line">ANY</div><div class="line"> KIND,</div><div class="line">EXPRESS </div><div class="line">OR</div><div class="line"> IMPLIED, </div><div class="line">INCLUDING</div><div class="line"> BUT </div><div class="line">NOT</div><div class="line"> LIMITED </div><div class="line">TO</div><div class="line"> THE WARRANTIES</div><div class="line"></div><div class="line">OF</div><div class="line"> MERCHANTABILITY, FITNESS </div><div class="line">FOR</div><div class="line"> A PARTICULAR PURPOSE </div><div class="line">AND</div><div class="line"></div><div class="line">NONINFRINGEMENT. </div><div class="line">IN</div><div class="line">NO</div><div class="line">EVENT</div><div class="line"> SHALL THE </div><div class="line">AUTHORS</div><div class="line">OR</div><div class="line"> COPYRIGHT</div><div class="line">HOLDERS BE LIABLE </div><div class="line">FOR</div><div class="line">ANY</div><div class="line"> CLAIM, DAMAGES </div><div class="line">OR</div><div class="line"> OTHER LIABILITY,</div><div class="line">WHETHER </div><div class="line">IN</div><div class="line"> AN </div><div class="line">ACTION</div><div class="line">OF</div><div class="line"> CONTRACT, TORT </div><div class="line">OR</div><div class="line"> OTHERWISE, ARISING</div><div class="line"></div><div class="line">FROM</div><div class="line">, </div><div class="line">OUT</div><div class="line">OF</div><div class="line">OR</div><div class="line">IN</div><div class="line">CONNECTION</div><div class="line">WITH</div><div class="line"> THE SOFTWARE </div><div class="line">OR</div><div class="line"> THE </div><div class="line">USE</div><div class="line">OR</div><div class="line"></div><div class="line">OTHER DEALINGS </div><div class="line">IN</div><div class="line"> THE SOFTWARE.</div></pre></td></tr></table></figure>
<p>Source: <a href="http://www.tuicool.com/articles/hit/raUnuay" target="_blank" rel="external">https://github.com/dbartolini/crown</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;The-flexible-game-engine&quot;&gt;&lt;a href=&quot;#The-flexible-game-engine&quot; class=&quot;headerlink&quot; title=&quot;The flexible game engine.&quot;&gt;&lt;/a&gt;The flexible 
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Uber founder Travis Kalanick resigns as CEO</title>
    <link href="https://gmagon.com/blog/2017/06/21/uber-founder-travis-kalanick-resigns-as-ceo/"/>
    <id>https://gmagon.com/blog/2017/06/21/uber-founder-travis-kalanick-resigns-as-ceo/</id>
    <published>2017-06-21T00:00:00.000Z</published>
    <updated>2017-06-21T08:45:40.992Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://img2.tuicool.com/e2QRVbi.jpg!web" alt=""></p>
<p>David Orrell | CNBC</p>
<p>Travis Kalanick.</p>
<p>Travis Kalanick stepped down Tuesday as chief executive of Uber, the ride-hailing service that he helped found in 2009 and that he built into a transportation colossus, after a shareholder revolt made it untenable for him to stay on at the company.</p>
<p>Mr. Kalanick’s exit came under pressure after hours of drama involving Uber’s investors, according to two people with knowledge of the situation, who asked to remain anonymous because the details are confidential.</p>
<p>Earlier on Tuesday, five of Uber’s major investors demanded that the chief executive resign immediately. The investors included one of Uber’s biggest shareholders, the venture capital firm Benchmark, which has one of its partners, Bill Gurley, on Uber’s board. The investors made their demand for Mr. Kalanick to resign in a letter delivered to the chief executive while he was in Chicago, said the people with knowledge of the situation.</p>
<p>More from the New York Times:</p>
<p><a href="https://www.nytimes.com/2017/06/17/business/uber-arianna-huffington-board.html" target="_blank" rel="external">As Uber leaders step aside, Arianna Huffington’s influence grows</a></p>
<p><a href="https://www.nytimes.com/2017/06/13/technology/uber-sexual-harassment-huffington-bonderman.html" target="_blank" rel="external">David Bonderman resigns from Uber board after sexist remark</a></p>
<p><a href="https://www.nytimes.com/2017/06/12/technology/uber-chief-travis-kalanick-stock-buyback.html" target="_blank" rel="external">How Uber’s chief is gaining even more clout in the company</a></p>
<p>In the letter, titled “Moving Uber Forward” and obtained by The New York Times, the investors wrote to Mr. Kalanick that he must immediately leave and that the company needed a change in leadership. Mr. Kalanick, 40, consulted with at least one Uber board member and after hours of discussions with some of the investors, he agreed to step down. He will remain on Uber’s board of directors.</p>
<p>“I love Uber more than anything in the world and at this difficult moment in my personal life I have accepted the investors request to step aside so that Uber can go back to building rather than be distracted with another fight,” Mr. Kalanick said in a statement.</p>
<p>The move caps months of questions over the leadership of Uber, which has become a prime example of Silicon Valley start-up culture gone awry. The company has been exposed this year as having a workplace culture that is rife with sexual harassment and discrimination, and has pushed the envelope in dealing with law enforcement and even partners. That tone was set by Mr. Kalanick, who has aggressively turned the company into the world’s dominant ride-hailing service and upended the transportation industry around the globe.</p>
<p>Mr. Kalanick’s troubles began earlier this year after a former Uber engineer detailed what she said was sexual harassment at the company, opening the floodgates for more complaints and spurring internal investigations. In addition, Uber has been dealing with an intellectual property lawsuit from Waymo, the self-driving car business that operates under Google’s parent company, and a federal inquiry into a software tool that Uber used to sidestep some law enforcement.</p>
<p>Uber has been trying to move past its difficult history, which has grown inextricably tied to Mr. Kalanick. In recent months, Uber has fired more than 20 employees after an investigation into the company’s culture, embarked on major changes to professionalize its workplace, and is searching for new executives including a chief operating officer.</p>
<p>Mr. Kalanick last week said he would take an indefinite leave of absence from Uber, partly to work on himself and to grieve for his mother, who died last month in a boating accident. He said Uber’s day-to-day management would fall to a committee of more than 10 executives.</p>
<p>But the shareholder letter indicates that his taking time off was not enough for some investors who have pumped millions of dollars into the ride-hailing company, which has seen its valuation swell to nearly $70 billion. For them, Mr. Kalanick had to go.</p>
<p>The five shareholders who demanded Mr. Kalanick’s resignation include some of the technology industry’s most prestigious venture capital firms, which invested in Uber at an early stage of the company’s life, as well as a mutual fund firm. Apart from Benchmark, they are First Round Capital, Lowercase Capital, Menlo Ventures and Fidelity Investments, which together own more than a quarter of Uber’s stock. Because some of the investors hold a type of stock that endows them with an outsize number of votes, they have about 40 percent of Uber’s voting power.</p>
<p>Mr. Kalanick’s resignation opens questions of who may take over Uber, especially since the company has been so molded in his image. And Mr. Kalanick will probably remain a presence there since he still retains control of a majority of Uber’s voting shares.</p>
<p>Taking a start-up chief executive to task so publicly is relatively unusual in Silicon Valley, where investors often praise entrepreneurs and their aggressiveness, especially if their companies are growing fast. It is only when those start-ups are in a precarious position or are declining that shareholders move to protect their investment.</p>
<p>In the case of Uber — one of the most highly valued private companies in the world — investors could lose billions of dollars if the company were to be marked down in valuation.</p>
<p>Uber, which has raised more than $11 billion from investors since its founding in 2009, has a wide base of shareholders apart from the ones who signed the letter. Uber’s investors also include TPG Capital, the Public Investment Fund of Saudi Arabia, mutual fund giants like BlackRock and wealthy clients of firms like Morgan Stanley and Goldman Sachs.</p>
<p>In the letter, in addition to Mr. Kalanick’s immediate resignation, the five shareholders asked for improved oversight of the company’s board by filling two of three empty board seats with “truly independent directors.” They also demanded that Mr. Kalanick support a board-led search committee for a new chief executive, and that Uber immediately hire an experienced chief financial officer.</p>
<p>Source: <a href="http://www.tuicool.com/articles/hit/U7bE7bJ" target="_blank" rel="external">http://www.cnbc.com/2017/06/21/ubers-travis-kalanick-reportedly-resigns-as-ceo.html</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://img2.tuicool.com/e2QRVbi.jpg!web&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;David Orrell | CNBC&lt;/p&gt;
&lt;p&gt;Travis Kalanick.&lt;/p&gt;
&lt;p&gt;Travis Kalanick step
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>IBM supercomputers will power global weather forecasts</title>
    <link href="https://gmagon.com/blog/2017/06/21/ibm-supercomputers-will-power-global-weather-forecasts/"/>
    <id>https://gmagon.com/blog/2017/06/21/ibm-supercomputers-will-power-global-weather-forecasts/</id>
    <published>2017-06-21T00:00:00.000Z</published>
    <updated>2017-06-21T08:45:40.918Z</updated>
    
    <content type="html"><![CDATA[<p>It will help create models that scan the whole world but forecast at a local scale.</p>
<p><img src="https://o.aolcdn.com/images/dims?quality=100&amp;image_uri=http%3A%2F%2Fo.aolcdn.com%2Fhss%2Fstorage%2Fmidas%2F73bb7d03dcb9dcca3c04eb7cefbfe050%2F205398004%2FMPAS-model.png&amp;client=cbc79c14efcebee57402&amp;signature=f092faba483afc8c2197a273ce8a7be11fe3ea61" alt=""></p>
<p>NCAR</p>
<p>IBM’s supercomputers might soon power the weather-predicting systems of tomorrow. Through its subsidiary The Weather Company, the computing titan has partnered with the University Corporation for Academic Research (UCAR) and the National Center for Atmospheric Research (NCAR) to move beyond today’s regional-scale forecasting to anticipate weather at the local level…and aspire to introduce the first model that covers the whole globe.</p>
<p>Current tech forecasts massively-sized meteorological systems that influence regional weather, like snowstorms and hurricanes. The model this IBM collaboration wants to build would account for the influence smaller events (like thunderstorms) have on local weather. IBM will join with UCAR to co-design a computational solution that runs on the former’s POWER9-based systems, which are set to launch at the end of the year. The Weather Company will use this computing powerhouse to adapt NCAR’s community-weather model to a global scale and refine the longer-term predictions to make more accurate forecasts weeks or months out.</p>
<p>Source: <a href="https://www.engadget.com/2017/06/21/ibm-supercomputers-will-power-global-weather-forecasts/" target="_blank" rel="external">https://www.engadget.com/2017/06/21/ibm-supercomputers-will-power-global-weather-forecasts/</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;It will help create models that scan the whole world but forecast at a local scale.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://o.aolcdn.com/images/dims?qua
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>IKEA plans to improve AR shopping tools with help from Apple</title>
    <link href="https://gmagon.com/blog/2017/06/21/ikea-plans-to-improve-ar-shopping-tools-with-help-from-apple/"/>
    <id>https://gmagon.com/blog/2017/06/21/ikea-plans-to-improve-ar-shopping-tools-with-help-from-apple/</id>
    <published>2017-06-21T00:00:00.000Z</published>
    <updated>2017-06-21T08:45:40.922Z</updated>
    
    <content type="html"><![CDATA[<p>You’ll be able to see how furniture fits in your home before committing to hours of assembly.</p>
<p><img src="https://o.aolcdn.com/images/dims?quality=100&amp;image_uri=http%3A%2F%2Fo.aolcdn.com%2Fdims-shared%2Fdims3%2FGLOB%2Fcrop%2F4000x2667%2B0%2B0%2Fresize%2F1600x1067%21%2Fformat%2Fjpg%2Fquality%2F85%2Fhttp%3A%2F%2Fo.aolcdn.com%2Fhss%2Fstorage%2Fmidas%2F5753e34113e3c608e558c7d1bd533c95%2F205003391%2F460623244.jpg&amp;client=cbc79c14efcebee57402&amp;signature=ea77eb3f97d65b75fb3eaf0896fba50f77ddd802" alt=""></p>
<p>Bloomberg via Getty Images</p>
<p>Apple and IKEA are creating an AR app that will let customers preview how an item will look in their home. Michael Valdsgaard, IKEA’s digital transformation manager, told Swedish website<a href="http://digital.di.se/artikel/ikea-om-samarbetet-med-apple-superintressant-for-oss" target="_blank" rel="external"><em>Digital.di</em></a>, “This will be the first augmented reality app that allows you to make reliable buying decisions.”</p>
<p>In the first version, customers will take photos of their homes and use the app to place<a href="https://www.engadget.com/2016/04/05/ikea-htc-vive-kitchen-vr-app/" target="_blank" rel="external">images</a>of IKEA products wherever they might want them. Valdsgaard said users will be able to position products with millimeter precision and sizing of the products will be to scale. Eventually, customers may be able to try out products and then order them through the app.</p>
<p>The<a href="https://www.engadget.com/2017/06/08/ikea-mars-simulator-teenage-engineering/" target="_blank" rel="external">IKEA</a>catalog app sort of lets you do this now, but not with much accuracy. In it, you can click on a piece of furniture and see it superimposed over whatever your camera is pointed towards. You can drag the furniture around and get an idea of what it might look like in your home and you can even use the app to make sure the size is accurate. But Valdsgaard says the new app will be better with the help of<a href="https://www.engadget.com/2014/09/07/ikea-apple-ad-parody/" target="_blank" rel="external">Apple’s</a>technology and experience with AR.</p>
<p>IKEA isn’t the only retail company with AR shopping experiences. Both<a href="https://www.engadget.com/2016/06/09/lowes-tango-ar-app/" target="_blank" rel="external">Lowe’s</a>and<a href="https://www.engadget.com/2017/03/20/pottery-barn-ar-app/" target="_blank" rel="external">Pottery Barn</a>have apps that let you get an idea of how furniture and appliances will look in your home. Lowe’s even uses AR to help customers navigate their stores and<a href="https://www.engadget.com/2017/03/14/lowe-s-is-using-ar-and-vr-to-make-how-to-easier/" target="_blank" rel="external">VR</a>to give lessons on how to successfully complete certain home improvement projects.</p>
<p>Valdsgaard says they would like to have the app available by the iOS 11 debut, but that it may not be possible. IKEA expects to have 500-600 products available on the app at launch.</p>
<p>Source: <a href="https://www.engadget.com/2017/06/19/ikea-improves-ar-shopping-apple/" target="_blank" rel="external">https://www.engadget.com/2017/06/19/ikea-improves-ar-shopping-apple/</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;You’ll be able to see how furniture fits in your home before committing to hours of assembly.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://o.aolcdn.com/image
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Apple tries to clamp down on leaks with mixed success</title>
    <link href="https://gmagon.com/blog/2017/06/21/apple-tries-to-clamp-down-on-leaks-with-mixed-success/"/>
    <id>https://gmagon.com/blog/2017/06/21/apple-tries-to-clamp-down-on-leaks-with-mixed-success/</id>
    <published>2017-06-21T00:00:00.000Z</published>
    <updated>2017-06-21T08:45:40.918Z</updated>
    
    <content type="html"><![CDATA[<p>Including a leak about its anti-leaking efforts.</p>
<p><img src="https://o.aolcdn.com/images/dims?quality=100&amp;image_uri=http%3A%2F%2Fo.aolcdn.com%2Fhss%2Fstorage%2Fmidas%2F77cf94f0db4d4e837b7b7c41b6d3fdc3%2F205396422%2Fsignage-is-displayed-at-the-1-infinite-loop-building-ahead-of-an-inc-picture-id618582652-ed.jpg&amp;client=cbc79c14efcebee57402&amp;signature=6ee70305fcd10e133332fff6a30f307ca15f7871" alt=""></p>
<p>Michael Short/Bloomberg via Getty Images</p>
<p>For the longest time, Apple product leaks tended to come from the<a href="https://www.engadget.com/2017/04/24/apple-iphone-8-may-not-ship-in-september/" target="_blank" rel="external">supply chain</a>: a factory worker would<a href="https://www.engadget.com/2011/01/05/iphone-5-parts-caught-on-video/" target="_blank" rel="external">send parts</a>or<a href="https://www.engadget.com/2017/05/15/exclusive-iphone-8-renders/" target="_blank" rel="external">a design file</a>to accessory makers eager to get a head start on their next iPhone cases. You might want to rethink that assumption. In a leaked secrecy briefing (ironic, we know) obtained by<em>The Outline</em>, Apple’s David Rice<a href="https://theoutline.com/post/1766/leaked-recording-inside-apple-s-global-war-on-leakers" target="_blank" rel="external">revealed</a>that leaks from the company’s campuses were more common in 2016 than those from suppliers. This is more a reflection of Apple’s success clamping down on third-party leaks than loose lips in Cupertino, although it does indicate that the tech giant will turn its attention inward.</p>
<p>Rice doesn’t divulge too many of Apple’s methods for countering supply chain leaks, but he notes that Apple will buy back parts to make sure they don’t reach the news: in 2013, it snapped up 19,000<a href="https://www.engadget.com/2013/09/17/iphone-5c-review/" target="_blank" rel="external">iPhone 5c</a>shells before the announcement. It also screens 221 million transits (that is, people leaving or entering factories) per year, so it’s less likely that someone will walk out with an iPhone enclosure. The reduction in leaks is no mean feat given those daunting figures, especially since workers are sometimes offered juicy incentives (up to a year’s worth of salary) to smuggle parts.</p>
<p>The presentation also underscores the drastic efforts Apple takes to lock things down at home. They’re not completely draconian, but they’re bound to raise questions. Many of Apple’s anti-leak investigators, including Rice himself, come from agencies like the NSA, FBI and Secret Service – does it really need to treat an iPad leak like a matter of national security? The company will also pursue in-house leakers for<em>years</em>, and is adamant that employees avoid discussing products with family or in the more public parts of Apple’s offices. It’ll sometimes place overseers on product teams to actively prevent leaks.</p>
<p>Rice is quick to note that Apple isn’t reading emails or eavesdropping on conversations, but there’s still a sense that Apple is watching closely. Some incoming employees will delete social accounts, or take those accounts private, out of a concern that they might accidentally say too much.</p>
<p>Apple does have strong financial incentives to cut back on leaks, as they can hurt sales or reveal its product strategy to competitors. In a call discussing Apple’s<a href="https://www.engadget.com/2017/05/02/apple-q2-2017-earnings/" target="_blank" rel="external">spring earnings</a>, Tim Cook blamed an iPhone sales slide on unusually early and frequent leaks for the next model. However, the briefing makes it clear that Apple takes its secrecy more seriously than many other companies, and possibly too seriously. Is it really a matter of life and death that a new iPhone remains under wraps, especially since Apple’s launch schedules are fairly predictable? Apple built its modern reputation on “<a href="https://www.engadget.com/2017/05/01/apple-siri-speaker-said-due-in-june/" target="_blank" rel="external">one more thing</a>“ surprises, but it’s not clear that spoilers are as damaging as the company thinks.</p>
<p>Source: <a href="https://www.engadget.com/2017/06/20/apple-campus-leaks-more-than-factories/" target="_blank" rel="external">https://www.engadget.com/2017/06/20/apple-campus-leaks-more-than-factories/</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Including a leak about its anti-leaking efforts.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://o.aolcdn.com/images/dims?quality=100&amp;amp;image_uri=http%3A%2F%2
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>The 4 Fundamental Pillars Of A Successful Company (According To These 4 CEOs)</title>
    <link href="https://gmagon.com/blog/2017/06/21/the-4-fundamental-pillars-of-a-successful-company-according-to-these-4-ceos/"/>
    <id>https://gmagon.com/blog/2017/06/21/the-4-fundamental-pillars-of-a-successful-company-according-to-these-4-ceos/</id>
    <published>2017-06-21T00:00:00.000Z</published>
    <updated>2017-06-21T08:45:40.924Z</updated>
    
    <content type="html"><![CDATA[<p>When it comes to building asuccessful company, there truly is a “method to the madness.” Read enough interviews, listen to enough<a href="https://www.inc.com/nicolas-cole/this-ceo-says-its-time-to-rethink-your-approach-to-video-marketing.html" target="_blank" rel="external">CEOs speak on their difficult journey</a>up the mountain, and you’ll start to draw parallels from one experience to another – regardless of industry.</p>
<p>One of the ways I feed<a href="https://www.inc.com/nicolas-cole/the-4-biggest-obstacles-all-new-entrepreneurs-face-and-how-these-4-young-entrepr.html" target="_blank" rel="external">my own learning process as a young entrepreneur</a>is by learning from those above or ahead of me on the path. I am constantly looking for new people to learn from, eager to hear what solutions they found for themselves (and selfishly, how I might avoid those same challenges in the future).</p>
<p>But “success” isn’t just about achievement. In fact, the most successful companies don’t just measure the end result, the total revenue, but the process that got them that result. Efficiency and good habits are equally (if not more) important.</p>
<p>So, what do some of those good habits look like?</p>
<h2 id="Pillar-Number-1-“Cash-is-King”"><a href="#Pillar-Number-1-“Cash-is-King”" class="headerlink" title="Pillar Number 1: “Cash is King”"></a>Pillar Number 1: “Cash is King”</h2><p>A difficult concept made simple, “Cash is King” is the mantra every business (and business leader) should live by.</p>
<p>“You can’t run a business on the promise of cash or future payment. It is the only metric that really matters and should be the primary measure of your company’s success at every stage,” said Aaron Webber, CEO of<a href="http://madisonwall.co/#home" target="_blank" rel="external">MadisonWall</a>, a venture capital firm and holding company to a handful of creative agencies. “A million dollars in outstanding invoices looks great and all, but it won’t help you if you can’t pay next week’s rent. You need to have physical cash in the bank set aside for when those inevitable obstacles arise.”</p>
<p>He went on to explain that a successful company is one that practices fiscal prudence and understands the power of compounding interest and investing back into the business. If you can develop and maintain good spending habits with this in mind, you won’t just sustain your business, you will grow it. And if not, then your business has little chance of survival. Unfortunately, money won’t fix bad habits. In fact, it might make them worse.</p>
<h2 id="Pillar-Number-2-Leadership-that-isn’t-ego-driven"><a href="#Pillar-Number-2-Leadership-that-isn’t-ego-driven" class="headerlink" title="Pillar Number 2: Leadership that isn’t ego driven."></a>Pillar Number 2: Leadership that isn’t ego driven.</h2><p>Too often, I see young entrepreneurs get overly excited about what they’re going to call themselves, and who gets to put the title of “CEO” in their Twitter bio–now that they’ve made a website and decided on a name for their “company.”</p>
<p>I know I’m not the first person to say this, and I know I won’t be the last. But it is an interesting thing to observe in my peers, and those who are ambitious about starting big companies. I see them spending more time on what title they want to wear, rather than how they’re going to actually build something of value.</p>
<p>“If you truly want to build a loyal team, you have to realize that it’s not all about you. Especially as the CEO, your job isn’t to be the center of attention. Your job is to make everyone else’s lives easier, and give them the opportunity to do great work. You’re the facilitator, the coach, not necessarily the star player,” said<a href="http://themfceo.com/" target="_blank" rel="external">Andy Frisella</a>, CEO of 1st Phorm International.</p>
<h2 id="Pillar-Number-3-Productivity-can’t-be-chained-to-a-cubicle"><a href="#Pillar-Number-3-Productivity-can’t-be-chained-to-a-cubicle" class="headerlink" title="Pillar Number 3: Productivity can’t be chained to a cubicle."></a>Pillar Number 3: Productivity can’t be chained to a cubicle.</h2><p>This is a hot topic for the companies of today, this idea of open work environments and allowing for more employee freedom.</p>
<p>Jim Kwik, founder and CEO of<a href="https://kwiklearning.com/" target="_blank" rel="external">Kwik Learning</a>, has served as the mental coach to some of the world’s leading CEOs and celebrities. On the topic of productivity and brain fitness in the workplace, he said, “We are becoming more and more aware that working 8 straight hours, 5 days a week, might not be the most productive method for maximum efficiency. In fact, many companies are starting to realize that by being more flexible, and allowing their employees more freedom, they will actually produce better work. It just might not happen within the hours of 9-5. And you know what? That’s OK.”</p>
<p>Especially for new leaders and founders, it can be easy to fall into the trap of thinking that hours-in is the best measure for productivity or success. But the truth is, it’s not. In fact, a lot of today’s business leaders are operating more under the belief that hours-in is a poor metric, and the only thing that matters is the final product. If you do it in half the time while working from home, great. Just get it done, and get it done well.</p>
<h2 id="Pillar-Number-4-Your-customer-service-can’t-suck"><a href="#Pillar-Number-4-Your-customer-service-can’t-suck" class="headerlink" title="Pillar Number 4: Your customer service can’t suck."></a>Pillar Number 4: Your customer service can’t suck.</h2><p>Customer acquisition is hard. Customer retention is even harder.</p>
<p>If you have a high churn rate as a company, you’re going to find yourself constantly struggling to build something successful over the long term. What you’re looking for is repeat, happy customers, ideally the kind that then go on to recommend you to their friends.</p>
<p>This is the advice that Charles Zhong, CEO of<a href="https://www.azazie.com/" target="_blank" rel="external">Azazie</a>, shared. Azazie has made a name for themselves in the bridal fashion world by disrupting the conventional industry, seeing 300% sales growth in 2017. Oh, and for those that say Millennials are impossible to deal with as employees, the average age of the company’s employees is 27.</p>
<p>“If you want to see what customer service looks like, step inside the world of bridal fashion. Consumers are tremendously particular, and you as a company are dealing with a very important occasion: someone’s wedding. In order for your internal team to work effectively, you have to communicate in a way that allows all parties to call out what isn’t working so that it can be fixed. We encourage our team members to ask questions, ask what people are struggling with, what needs more clarification or process, etc. We want everyone to feel heard,” said Zhong.</p>
<p>He went on to explain that, on the flipside, customer service that goes above and beyond is all about being personable. People already have the Internet to answer most questions. So when a customer reaches out, sometimes they just need a human to walk them through their specific case. The more human and personable that experience feels, the more likely that customer will be to return, because they trust you.</p>
<p>Source: <a href="http://www.tuicool.com/articles/hit/FnuI7jN" target="_blank" rel="external">https://www.inc.com/nicolas-cole/the-4-fundamental-pillars-of-a-successful-company-according-to-these-4-ceos.html</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;When it comes to building asuccessful company, there truly is a “method to the madness.” Read enough interviews, listen to enough&lt;a href=
    
    </summary>
    
    
  </entry>
  
</feed>
