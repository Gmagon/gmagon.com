<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Gmagon Software Official Website - Fast, simple &amp; powerful solutions for everyone.</title>
  <subtitle>Gmagon Software Official Website - Fast, simple &amp; powerful solutions for everyone and more. Visit the site to learn, buy, and get support.</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://gmagon.com/"/>
  <updated>2017-07-10T04:16:54.596Z</updated>
  <id>https://gmagon.com/</id>
  
  <author>
    <name>Gmagon Inc</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Make a Perfect Triangle Path in Illustrator</title>
    <link href="https://gmagon.com/blog/2017/07/10/make-a-perfect-triangle-path-in-illustrator/"/>
    <id>https://gmagon.com/blog/2017/07/10/make-a-perfect-triangle-path-in-illustrator/</id>
    <published>2017-07-10T00:00:00.000Z</published>
    <updated>2017-07-10T04:16:54.596Z</updated>
    
    <content type="html"><![CDATA[<p>There is no triangle tool in Illustrator, which to this day, boggles my mind (come on, Adobe). I have memories of the times when I first started using Illustrator and really tried to get to know the program in depth. This was one of the things that frustrated me regularly (making a perfect, equilateral triangle) until I finally figured out a simple solution. If you use Adobe Illustrator on a regular basis, chances are you might need to create an equilateral triangle every once in a while. This may seem like a simple task, and it is, but not as easy as it should be. I’ll show you how to easily make a perfect triangle path in Illustrator, and hopefully, you will have one less vector headache to deal with in the future.</p>
<p><img src="http://img1.tuicool.com/a67fAvB.gif" alt=""></p>
<h2 id="1-Select-the-Star-Tool"><a href="#1-Select-the-Star-Tool" class="headerlink" title="1. Select the Star Tool"></a>1. Select the Star Tool</h2><p>Yes, believe it or not, the Star Tool is what you will use to make a triangle. I know it sounds weird, but go with me here.</p>
<p><img src="http://img0.tuicool.com/vyqM7zn.gif" alt=""></p>
<h2 id="2-Click-Once-on-the-Artboard"><a href="#2-Click-Once-on-the-Artboard" class="headerlink" title="2. Click Once on the Artboard"></a>2. Click Once on the Artboard</h2><p>By only clicking once, you will get the Star Tool Options pane. This is where you can reduce the number of points to “3.” The trick is to set one radius 2 at your desired size for your triangle, then set the other radius at exactly half. Note: It doesn’t matter which radius is which. Radius 1 and 2 can be reversed as long as one is double/half the other. Choose the size of your triangle and click OK.</p>
<p><img src="http://img1.tuicool.com/BJ3yMr6.gif" alt=""></p>
<h2 id="3-Get-Rid-of-the-Extra-Anchor-Points"><a href="#3-Get-Rid-of-the-Extra-Anchor-Points" class="headerlink" title="3. Get Rid of the Extra Anchor Points"></a>3. Get Rid of the Extra Anchor Points</h2><p>Now that you have your triangle, you might want to get rid of the extra anchor points created by the Star tool.</p>
<p><img src="http://img0.tuicool.com/63qaeuV.gif" alt=""></p>
<p>You can select the Subtract Anchor Point tool or hit the keyboard shortcut “-” (minus) and delete the 3 points that are in between the corners of your path.</p>
<p><img src="http://img1.tuicool.com/fuInYnV.gif" alt=""></p>
<h2 id="Done"><a href="#Done" class="headerlink" title="Done!"></a>Done!</h2><p>There you have it. A perfect Triangle path in only a few easy steps, no pen tool necessary!</p>
<p><img src="http://img0.tuicool.com/ayAFvmE.gif" alt=""></p>
<p>From here you can do anything you need to with it, like maybe reflect it and make it have the wide part at the bottom, etc. Remember that the angles in every equilateral triangle are 60 degrees, so if you need something to line up with one of the sides of your equilateral triangle, rotate that object in 60 degree intervals and you should be able to perfectly align things to your T-angle! I hope this little tip saves you some time and headache. It is often-times the little things that help the most. (from my experience)</p>
<p><img src="http://img1.tuicool.com/RFRZRrF.gif" alt=""></p>
<p>Source: <a href="http://www.tuicool.com/articles/hit/JRVna2Q" target="_blank" rel="external">http://www.bittbox.com/illustrator/make-a-perfect-triangle-path-in-illustrator</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;There is no triangle tool in Illustrator, which to this day, boggles my mind (come on, Adobe). I have memories of the times when I first 
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>2 Things I learnt By Reading Failsafe Source code</title>
    <link href="https://gmagon.com/blog/2017/07/10/2-things-i-learnt-by-reading-failsafe-source-code/"/>
    <id>https://gmagon.com/blog/2017/07/10/2-things-i-learnt-by-reading-failsafe-source-code/</id>
    <published>2017-07-10T00:00:00.000Z</published>
    <updated>2017-07-10T04:16:54.579Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to the second post ofX-things-I-learnt-reading-Y’s-source-codeseries. This week I decided to read source code of<a href="https://github.com/jhalterman/failsafe" target="_blank" rel="external">failsafe</a>library.</p>
<p>Failsafe is a lightweight, zero-dependency library for handling failures. It was designed to be as easy to use as possible, with a concise API for handling everyday use cases and the flexibility to handle everything else.</p>
<p>Let’s suppose you are working with a flaky HTTP service. You can use failsafe to retry the service a configurable number of times by writing code as shown below.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">RetryPolicy retryPolicy = </div><div class="line">new</div><div class="line"> RetryPolicy()</div><div class="line">  .retryOn(HttpConnectionException.</div><div class="line">class</div><div class="line">)</div><div class="line">  .withMaxRetries(</div><div class="line">3</div><div class="line">);</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">MyHttpService connection = Failsafe.</div><div class="line">with</div><div class="line">(retryPolicy)</div><div class="line">                               .get</div><div class="line">(() -</div><div class="line">&gt;</div><div class="line"> connect())</div><div class="line">;</div></pre></td></tr></table></figure>
<p>The above will retry 3 times to connect to the http service if HttpConnectionException is thrown.</p>
<h2 id="2-Things-I-learnt"><a href="#2-Things-I-learnt" class="headerlink" title="2 Things I learnt"></a>2 Things I learnt</h2><p>Reading through the source code and referring to Github issues I learnt couple of things to avoid when designing APIs. So, I learnt what not to do rather than what to do ��</p>
<ol>
<li>Don’t use wrong default values: failsafe library does not enforce users to provide values when configuring RetryPolicy or other configuration object. The default value for number of retries is set to  -1, which means retry infinitely. This is not correct as user of the API would want retry call to complete eventually or throw an exception. I think better way to design API is to enforce users to provide values when you are unable to come up with good default values. This would avoid surprises to the user.  APIs should follow<br><a href="https://en.wikipedia.org/wiki/Principle_of_least_astonishment" target="_blank" rel="external">Principle of least astonishment</a><br>.</li>
<li>Favour immutability: A common thread that I found in many issues is related to shareability of RetryPolicy object. Users want to reuse RetryPolicy object but because it is not immutable they fear thread safety concerns. Library author clarified that library does not change the state of object internally so it is safe to reuse. I think the better way to design such objects is by using a builder pattern. Then, in the build method of builder make an immutable object. This does not confuse users and keep your API consistent.</li>
</ol>
<p>Source: <a href="http://www.tuicool.com/articles/hit/Y3mUjaa" target="_blank" rel="external">http://shekhargulati.com/2017/07/10/2-things-i-learnt-by-reading-failsafe-source-code/</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to the second post ofX-things-I-learnt-reading-Y’s-source-codeseries. This week I decided to read source code of&lt;a href=&quot;https://
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>When not to use deep learning</title>
    <link href="https://gmagon.com/blog/2017/07/10/when-not-to-use-deep-learning/"/>
    <id>https://gmagon.com/blog/2017/07/10/when-not-to-use-deep-learning/</id>
    <published>2017-07-10T00:00:00.000Z</published>
    <updated>2017-07-10T04:16:54.602Z</updated>
    
    <content type="html"><![CDATA[<p>Deep learning’s claim to fame was in a context with lots of data (remember that the first Google brain project was feeding lots of youtube videos to a deep net), and ever since it has constantly been publicized as complex algorithms running in lots of data. Unfortunately, this big data/deep learning pair somehow translated into the converse as well: the myth that it cannot be used in the small sample regime. If you have just a few samples tapping into a neural net with a high parameter-per-sample ratio superficially may seem like asking to overfit. However, just considering sample size and dimensionality for a given problem, be it supervised or unsupervised, is sort of modeling the data in a vacuum, without any context. It is probably the case that you have data sources that are related to your problem, or that there’s a strong prior that a domain expert can provide, or that the data is structured in a very particular way (e.g. is encoded in a graph or image). In all of these cases, there’s a chance deep learning can make sense as a method of choice – for example, you can encode useful representations of bigger, related datasets and use those representations in your problem. A classic illustration of this is common in natural language processing, where you cam learn word embeddings on a large corpus like Wikipedia and then use those as embeddings in a smaller, narrower corpus for a supervised task. In the extreme, you can have a set of neural nets jointly learn a representation_and_an effective way to reuse the representation in small sets of samples. This is called one-shot learning and has been successfully applied in a number of fields with high-dimensional data including<a href="https://arxiv.org/abs/1606.04080" target="_blank" rel="external">computer vision</a>and<a href="https://arxiv.org/abs/1611.03199" target="_blank" rel="external">drug discovery</a>.</p>
<p><img src="http://img0.tuicool.com/ErqYzyF.png!web" alt=""><em>One-shot learning networks for drug discovery, taken from Altae-Tran et al. ACS Cent. Sci. 2017</em></p>
<h2 id="Deep-learning-is-not-the-answer-to-everything"><a href="#Deep-learning-is-not-the-answer-to-everything" class="headerlink" title="Deep learning is not the answer to everything"></a>Deep learning is not the answer to everything</h2><p>The second preconception I hear the most is the hype. Many yet-to-be practitioners expect deep nets to give them a mythical performance boost just because it worked in other fields. Others are inspired by impressive work in modeling and manipulating images, music, and language – three data types close to any human heart – and rush headfirst into the field by trying to train the latest GAN architecture. The hype is real in many ways. Deep learning has become an undeniable force in machine learning and an important tool in the arsenal of any data modeler. It’s popularity has brought forth essential frameworks such as tensorflow and pytorch that are incredibly useful even outside deep learning. It’s underdog to superstar origin story has inspired researchers to revisit other previously obscure methods like evolutionary strategies and reinforcement learning. But it’s not a panacea by any means. Aside from<a href="https://en.wikipedia.org/wiki/No_free_lunch_theorem" target="_blank" rel="external">no-free-lunch</a>considerations, deep learning models can be very nuanced and require careful and sometimes very expensive hyperparameter searches, tuning, and testing (much more on this later in the post). Besides, there are many cases where using deep learning just doesn’t make sense from a practical perspective and simpler models work much better.</p>
<h2 id="Deep-learning-is-more-than-fit"><a href="#Deep-learning-is-more-than-fit" class="headerlink" title="Deep learning is more than.fit()"></a>Deep learning is more than<code>.fit()</code></h2><p>There is also an aspect of deep learning models that I see gets sort of lost in translation when coming from other fields of machine learning. Most tutorials and introductory material to deep learning describe these models as composed by hierarchically-connected layers of nodes where the first layer is the input and the last layer is the output and that you can train them using some form of stochastic gradient descent. After maybe some brief mentions on how stochastic gradient descent works and what backpropagation is, the bulk of the explanation focuses on the rich landscape of neural network types (convolutional, recurrent, etc.). The optimization methods themselves receive little additional attention, which is unfortunate since it’s likely that a big (if not the biggest) part of why deep learning works is because of those particular methods (check out, e.g.<a href="http://www.inference.vc/everything-that-works-works-because-its-bayesian-2/" target="_blank" rel="external">this post from Ferenc Huszár’s</a>and<a href="https://arxiv.org/abs/1609.04836" target="_blank" rel="external">this paper</a>taken from that post), and knowing how to optimize their parameters and how to partition data to use them effectively is crucial to get good convergence in a reasonable amount of time. Exactly why stochastic gradients matter so much is still unknown, but some clues are emerging here and there. One of my favorites is the interpretation of the methods as part of performing Bayesian inference. In essence, every time that you do some form of numerical optimization, you’re performing some Bayesian inference with particular assumptions and priors. Indeed, there’s a whole field, called<a href="http://probabilistic-numerics.org/" target="_blank" rel="external">probabilistic numerics</a>, that has emerged from taking this view. Stochastic gradient descent is no different, and<a href="https://arxiv.org/pdf/1704.04289.pdf" target="_blank" rel="external">recent work</a>suggests that the procedure is really a Markov chain that, under certain assumptions, has a stationary distribution that can be seen as a sort of variational approximation to the posterior. So when you stop your SGD and take the final parameters, you’re basically sampling from this approximate distribution. I found this idea to be illuminating, because the optimizer’s parameters (in this case, the learning rate) make so much more sense that way. As an example, as you increase the learning parameter of SGD the Markov chain becomes unstable until it finds wide local minima that samples a large area; that is, you increase the variance of procedure. On the other hand, if you decrease the learning parameter, the Markov chain slowly approximates narrower minima until it converges in a tight region; that is, you increase the bias for a certain region. Another parameter, the batch size in SGD, also controls what type of region the algorithm converges two: wider regions for small batches and sharper regions with larger batches.</p>
<p><img src="http://img0.tuicool.com/mqqMraY.png!web" alt=""><em>SGD prefers wide or sharp minima depending on its learning rate or batch size</em></p>
<p>This complexity means that optimizers of deep nets become first class citizens: they are a very central part of the model, every bit as important as the layer architecture. This doesn’t quite happen with many other models in machine learning. Linear models (even regularized ones, like the LASSO) and SVMs are convex optimization problems for which there is not as much nuance and really only one answer. That’s why folks that come from other fields and/or using tools like scikit-learn are puzzled when they don’t find a very simple API with a<code>.fit()</code>method (although there are some tools, like skflow, that attempt to bottle simple nets into a<code>.fit()</code>signature, I think it’s a bit misguided since the whole point of deep learning is its flexibility).</p>
<h2 id="When-not-to-use-deep-learning"><a href="#When-not-to-use-deep-learning" class="headerlink" title="When not to use deep learning"></a>When not to use deep learning</h2><p>So, when does deep learning not fit to the task? From my perspective, these are the main scenarios where deep learning is more of a hinderance than a boon.</p>
<h2 id="Low-budget-or-low-commitment-problems"><a href="#Low-budget-or-low-commitment-problems" class="headerlink" title="Low-budget or low-commitment problems"></a>Low-budget or low-commitment problems</h2><p>Deep nets are very flexible models, with a multitude of architecture and node types, optimizers, and regularization strategies. Depending on the application, your model might have convolutional layers (how wide? with what pooling operation?) or recurrent structure (with or without gating?); it might be really deep (hourglass, siamese, or other of the many architectures?) or with just a few hidden layers (with how many units?); it might use rectifying linear units or other activation functions; it might or might not have dropout (in what layers? with what fraction?) and the weights should probably be regularized (l1, l2, or something weirder?). This is only a partial list, there are lots of other types of nodes, connections, and even loss functions out there to try. Those are a lot of hyperparameters to tweak and architectures to explore while even training one instance of large networks can be very time consuming. Google recently boasted that its AutoML pipeline can automatically find the best architecture, which is very impressive, but still requires more than 800 GPUs churning full time for weeks, something out of reach for almost anyone else. The point is that training deep nets carries a big cost, in both computational and debugging time. Such expense doesn’t make sense for lots of day-to-day prediction problems and the ROI of tweaking a deep net to them, even when tweaking small networks, might be too low. Even when there’s plenty of budget and commitment, there’s no reason not to try alternative methods first even as a baseline. You might be pleasantly surprised that a linear SVM is really all you needed.</p>
<h2 id="Interpreting-and-communicating-model-parameters-feature-importance-to-a-general-audience"><a href="#Interpreting-and-communicating-model-parameters-feature-importance-to-a-general-audience" class="headerlink" title="Interpreting and communicating model parameters/feature importance to a general audience"></a>Interpreting and communicating model parameters/feature importance to a general audience</h2><p>Deep nets are also notorious for being black boxes with high predictive power but low interpretability. Even though there’s been a lot of recent tools like saliency maps and<a href="https://arxiv.org/abs/1704.02685" target="_blank" rel="external">activation differences</a>that work great for some domains, they don’t transfer completely to all applications. Mainly, these tools work well when you want to make sure that the network is not deceiving you by memorizing the dataset or focusing on particular features that are spurious, but it is still difficult to interpret per-feature importances to the overall decision of the deep net. In this realm, nothing really beats linear models since the learned coefficients have a direct relationship to the response. This is especially crucial when communicating these interpretations to general audiences that need to make decisions based on them. Physicians for example need to incorporate all sorts of disparate data to elicit a diagnosis. The simpler and more direct relationship between a variable and an outcome, the better a physician will leverage it and not under/over-estimate it’s value. Further, there are cases where the accuracy of the model (typically where deep learning excels at) is not as important as interpretability. For example, a policy maker might want to know the effect some demographic variable has on e.g. mortality, and will likely be more interested in a direct approximation of this relationship than in the accuracy of the prediction. In both of these cases, deep learning is at a disadvantage compared to simpler, more penetrable methods.</p>
<h2 id="Establishing-causal-mechanisms"><a href="#Establishing-causal-mechanisms" class="headerlink" title="Establishing causal mechanisms"></a>Establishing causal mechanisms</h2><p>The extreme case of model interpretability is when we are trying to establish a mechanistic model, that is, a model that actually captures the phenomena behind the data. Good examples include trying to guess whether two molecules (e.g. drugs, proteins, nucleic acids, etc.) interact in a particular cellular environment or hypothesizing how a particular marketing strategy is having an actual effect on sales. Nothing really beats old-style Bayesian methods informed by expert opinion in this realm; they are our best (if imperfect) way we have to represent and infer causality. Vicarious has some<a href="https://www.vicarious.com/img/icml2017-schemas.pdf" target="_blank" rel="external">nice recent work</a>illustrating why this more principled approach generalizes better than deep learning in videogame tasks.</p>
<h2 id="Learning-from-“unstructured”-features"><a href="#Learning-from-“unstructured”-features" class="headerlink" title="Learning from “unstructured” features"></a>Learning from “unstructured” features</h2><p>This one might be up for debate. I find that one area in which deep learning excels at is finding useful representations of the data for a particular task. A very good illustration of this is the aforementioned word embeddings. Natural language has a rich and complex structure that can be approximated with “context-aware” networks: each word can be represented in a vector that encodes the context in which it is mostly used. Using word embeddings learned in large corpora for NLP tasks can sometimes provide a boost in a particular task on another corpus. However, it might not be of any use if the corpus in question is completely unstructured. For example, say you are trying to classify objects by looking at unstructured lists of keywords. Since the keywords are not used in any particular structure (like in a sentence), it’s unlikely that word embeddings will help all that much. In this case, the data is truly a bag of words and such representations are likely sufficient for the task. A counter-argument to this might be that word embeddings are not really that expensive if you use pretrained ones and may capture keyword similarity better. However, I still would prefer to start with the bag of words representation and see if I can get good predictions. After all, each dimension of the bag of words is easier to interpret than the corresponding word embedding slot.</p>
<h2 id="The-future-is-deep"><a href="#The-future-is-deep" class="headerlink" title="The future is deep"></a>The future is deep</h2><p>The deep learning field is hot, well-funded, and moves crazy fast. By the time you read a paper published in a conference, it’s likley there are two or three iterations on it that already deprecate it. This brings a big caveat to the points I’ve made above: deep learning might still be super useful for these scenarios in the near future. Tools for interpretation of deep learning models for images and discrete sequences are getting better. Recent software such as<a href="https://arxiv.org/abs/1701.03757" target="_blank" rel="external">Edward</a>marry Bayesian modeling and deep net frameworks, allowing for quantification of uncertainty of neural network parameters and easy Bayesian inference via probabilistic programming and automated variational inference. In the longer term, there might be a reduced modeling vocabulary that nails the salient properties that a deep net can have and thus reduce the parameter space of stuff that needs to be tried. So keep refreshing your arXiv feed, this post might be deprecated in a month or two.</p>
<p><img src="http://img1.tuicool.com/qYVJryq.png!web" alt=""><em>Edward marries probabilistic programming with tensorflow, allowing for models that are both deep and Bayesian. Taken from Tran et al. ICLR 2017</em></p>
<p>Source: <a href="http://www.tuicool.com/articles/hit/QFFNJne" target="_blank" rel="external">http://hyperparameter.space/blog/when-not-to-use-deep-learning/</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Deep learning’s claim to fame was in a context with lots of data (remember that the first Google brain project was feeding lots of youtub
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>News Outlets to Seek Bargaining Rights Against Google and Facebook</title>
    <link href="https://gmagon.com/blog/2017/07/10/news-outlets-to-seek-bargaining-rights-against-google-and-facebook/"/>
    <id>https://gmagon.com/blog/2017/07/10/news-outlets-to-seek-bargaining-rights-against-google-and-facebook/</id>
    <published>2017-07-10T00:00:00.000Z</published>
    <updated>2017-07-10T04:16:54.599Z</updated>
    
    <content type="html"><![CDATA[<p>Google andFacebook continue to<a href="https://www.ft.com/content/30c81d12-08c8-11e7-97d1-5e720a26771b" target="_blank" rel="external">gobble up</a>the digital advertising market,<a href="https://www.nytimes.com/2017/05/07/business/media/ad-buyers-have-say-in-survival-of-news.html?rref=collection%2Fbyline%2Fjim-rutenberg&amp;action=click&amp;contentCollection=undefined&amp;region=stream&amp;module=stream_unit&amp;version=latest&amp;contentPlacement=6&amp;pgtype=collection" target="_blank" rel="external">siphoning away revenue</a>that once paid for the quality journalism that Google and Facebook now offer for free.</p>
<p>They are gaining increasing control over digital distribution, so newspapers that once delivered their journalism with their own trucks increasingly have to rely on these big online platforms to get their articles in front of people, fighting for attention alongsidefake news, websites that lift their content, and cat videos.</p>
<p>And for all of Google’s and Facebook’s<a href="http://fortune.com/2017/02/22/tech-funding-for-journalism/" target="_blank" rel="external">efforts to support journalism</a>by helping news organizations find new revenue streams — and survive in the new world that these sites helped create — they are, at the end of the day, the royals of the court. Quality news providers are the supplicants and the serfs.</p>
<p>It’s an uneasy alliance that has publishers chafing at the<a href="https://digiday.com/media/facebook-faces-increased-publisher-resistance-instant-articles/?utm_source=rundown&amp;utm_medium=email&amp;utm_content=1704018&amp;utm_campaign=digidaydis" target="_blank" rel="external">returns they receive</a>from Google and Facebook, which rely on the free flow of premium news and information.</p>
<p>Source: <a href="http://www.tuicool.com/articles/hit/mAjuM3" target="_blank" rel="external">https://www.nytimes.com/2017/07/09/business/media/google-facebook-news-media-alliance.html</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Google andFacebook continue to&lt;a href=&quot;https://www.ft.com/content/30c81d12-08c8-11e7-97d1-5e720a26771b&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;go
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Enhance Your Search Results: How to Get Started With Schema Markup </title>
    <link href="https://gmagon.com/blog/2017/07/10/enhance-your-search-results-how-to-get-started-with-schema-markup/"/>
    <id>https://gmagon.com/blog/2017/07/10/enhance-your-search-results-how-to-get-started-with-schema-markup/</id>
    <published>2017-07-10T00:00:00.000Z</published>
    <updated>2017-07-10T04:16:54.593Z</updated>
    
    <content type="html"><![CDATA[<p>Want to improve your appearance in search results? Then you need to know how to implement schema markup.</p>
<p>Schema provides the immediate benefit of enhancing the aesthetic of your search results and increasing your organic click-through rate.</p>
<p>Getting started with schema can be confusing – it can be a very technical process.</p>
<p>But any SEO can implement schema correctly without the help of a developer.</p>
<p>Here’s what you’ll need to implement schema microdata:</p>
<ul>
<li>A basic understanding of<br><a href="https://www.w3schools.com/html/" target="_blank" rel="external">HTML.</a></li>
<li><a href="https://search.google.com/structured-data/testing-tool/u/0/" target="_blank" rel="external">Google’s structured data testing tool.</a></li>
<li>The<br><a href="http://schema.org/" target="_blank" rel="external">schema.or</a><br>g library.</li>
</ul>
<h2 id="What-You-Need-To-Know-About-Schema"><a href="#What-You-Need-To-Know-About-Schema" class="headerlink" title="What You Need To Know About Schema"></a>What You Need To Know About Schema</h2><p>It’s important to understand where enhancements can be made for your specific industry. Staying focused on what enhancements will actually show up with the search results will help you prioritize what type of markup to concentrate on first.</p>
<p>Don’t get hung up on getting every bit of information that might be listed in the Schema.org library when doing your research.</p>
<p>While having markup markup on your web page as possible is ideal for all the search engines, it’s also important to understand exactly why you wanted to implement schema in the first place and not lose focus from that primary business objective.</p>
<p>Common enhancements that motivate site managers to implement schema:</p>
<ul>
<li>Image is shown with my search result</li>
<li>Aggregate ratings shown with my search results</li>
<li>Upcoming events shown with my search results</li>
<li>Address to be known by the search results</li>
</ul>
<p>There is definitely a lot more that can be done. Keep reading for specific and common enhancements later in this post.</p>
<h2 id="How-to-Implement-Structured-Data-Using-HTML"><a href="#How-to-Implement-Structured-Data-Using-HTML" class="headerlink" title="How to Implement Structured Data Using HTML"></a>How to Implement Structured Data Using HTML</h2><p>If you use a content management system (CMS) that allows you the functionality to switch to a text editor then you can easily add in markup tags to give your HTML content. If you’ve never done this before, the process is very simple.</p>
<p>Let’s use Devil’s Teeth Baking Company in San Francisco as an example of a local business to see how to markup the business name, address, and phone number. (Yes, I do eat here.)</p>
<p>There is currently no schema markup for this page, but the address is clearly shown in the hero image on the home page:</p>
<p><img src="http://img1.tuicool.com/feIVNnY.png!web" alt=""></p>
<p>The HTML text code displays the following:</p>
<p><img src="http://img0.tuicool.com/jmqMveN.png!web" alt=""></p>
<p>HTML code is taken from Google Structured Data Tool</p>
<p>We can enhance this homepage content by adding a few HTML tags to tell the search engine the address of this business using the existing content on the page.</p>
<p><img src="http://img0.tuicool.com/myEjIfZ.png!web" alt=""></p>
<p>This might seem messy, but if you take the time to digest it, we really just added two div tags and a few span tags and put in the properties like a local business, telephone, street address, region, image and postal code names within those tags.</p>
<p>The end result if you put this code snippet into Google’s structured data tool is this:</p>
<p><img src="http://img1.tuicool.com/r6vmE3R.png!web" alt=""></p>
<p>Passed Markup</p>
<p>As you can see my LocalBusiness markup has a warning for the price range. Seeing as I did not have the price range from the hero image I used for this example, I omitted it.</p>
<p>Whenever you implement schema, keep tabs on errors. When the structured data markup tool detects errors the SERPs will not show any of the schema markups with an error. But warnings will still populate the_other_schema tags you have in place.</p>
<h2 id="Process-to-Find-the-Right-Markup"><a href="#Process-to-Find-the-Right-Markup" class="headerlink" title="Process to Find the Right Markup"></a>Process to Find the Right Markup</h2><p>The above example had the goal in mind to mark the specific information on the page to have LocalBusiness information that search engines can understand. This markup will help the search engine understand that locality of the business with the intent to hopefully perform better in local search. That is a simple enough business objective.</p>
<p>You can determine what markup is needed for your business by taking into account what your business does, and where your audience is.</p>
<ul>
<li>If you serve customers from a physical address then a<br><a href="http://schema.org/LocalBusiness" target="_blank" rel="external">local business</a><br>markup should be included in your page.</li>
<li>If you sell<br><a href="http://schema.org/Product" target="_blank" rel="external">products</a><br>online, then your product pages should have the correct product markup.</li>
<li>If you host<br><a href="http://schema.org/Event" target="_blank" rel="external">events</a><br>then you would want to markup the event information with the correct event markup.</li>
</ul>
<p>You can markup your entire page and the more your do, the more it will assist the search engine to understand your content better, which is the job of any SEO. Markup is also going to help you stay on top tomorrow’s world of voice search.</p>
<p>You can easily find the specific schema markup you need on schema.org and sift through the<a href="http://schema.org/docs/full.html" target="_blank" rel="external">full list</a>of what you might need and what schema microdata is available.</p>
<h2 id="Copy-Swap-and-Paste-from-Schema-org-Examples"><a href="#Copy-Swap-and-Paste-from-Schema-org-Examples" class="headerlink" title="Copy, Swap, and Paste from Schema.org Examples"></a>Copy, Swap, and Paste from Schema.org Examples</h2><p>This is a simple method that is easy to use. Look up the markup you need through schema.org’s site search. I will show this process with an example of a product markup.</p>
<p>Example:<a href="http://schema.org/Product" target="_blank" rel="external">Product</a></p>
<p>Follow the link above and at the bottom you should find 3 examples of content being marked up on the bottom. They are divided into 4 tabs for each example.</p>
<ol>
<li>Without Markup</li>
<li>Microdata</li>
<li>RDF-a</li>
<li>JSON-LD</li>
</ol>
<p>We will look at example 2 because this example is the most in depth for a product markup.</p>
<p><img src="http://img2.tuicool.com/3YjU3uM.png!web" alt=""></p>
<p>This product markup has everything you would probably need to enhance your search result as it includes the product name, the aggregate rating, the price, and will alert the customer that this product is currently in stock. All of these elements, by the way, will show up in a product image search on a mobile device.</p>
<p><img src="http://img0.tuicool.com/B7V7Jjf.png!web" alt=""></p>
<p>Product Image Search on Mobile</p>
<p>If you run an e-commerce site and want to use this markup, you would simply copy this code and swap out the areas with information related to your product. This is simple enough to do, and you can check your implementation using the structured data testing tool. Run your code implementation through the tool and check for errors.</p>
<p>Tip: Try running the code first and opening up the areas Google has already identified.</p>
<p><img src="http://img0.tuicool.com/q6VVBzI.png!web" alt=""></p>
<p>Paste your code snippet here</p>
<p><img src="http://img1.tuicool.com/2ERbYrY.png!web" alt=""></p>
<p>Toggle through the right side and edit the left side</p>
<p>So, if you’re confused about how to swap out specific elements, just find the elements that directly apply to what you’re looking for. The tool will split your code into two views: the left side will be for your code, which you are free to edit. The right side is the schema validations that you can use as a guide to toggle through the code. This process is straightforward, find what you need and swap!</p>
<p>This is the simplest method to implementing structured data if you have no technical background in working with HTML.</p>
<h2 id="Using-the-JSON-LD-Examples"><a href="#Using-the-JSON-LD-Examples" class="headerlink" title="Using the JSON-LD Examples"></a>Using the JSON-LD Examples</h2><p>I like to use the JSON-LD example because it is less intrusive than the HTML markup.</p>
<p>A lot of SEOs are adamant about not using hidden HTML content. The JSON-LD markup allows you to markup your web page without it being seen by the end user as it is done in JSON code and not visible HTML.</p>
<p>With this, you are able to add all the markup needed and not hinder the visual look of your web page with unnecessary text.</p>
<p><img src="http://img2.tuicool.com/nMZbiiE.png!web" alt=""></p>
<p>Take this code and try editing the existing JSON-LD example within the script tags and pasting it into the text editor of your content management system.</p>
<p>Run the code you have from your text editor into the structured data testing tool and see if any errors occur. If no errors occur then you have readable markup in the form of JavaScript that the search engine will be able to understand this markup (while the user won’t know it’s there).</p>
<p>I prefer this implementation over HTML markup because you won’t stir up the wrath of your web designers with this method.</p>
<h2 id="Learn-From-Your-Competitors"><a href="#Learn-From-Your-Competitors" class="headerlink" title="Learn From Your Competitors"></a>Learn From Your Competitors</h2><p>If you notice a competitor having a better search result than you do than analyze what markup they are using by placing their URL into the structured data testing tool.</p>
<p>You can run any page through Google’s Structured Data Tool to see how they are implementing their structured data. If you use the exact same schema markup that your competitors use, then your web page will also get those rich enhancements.</p>
<p>If you can’t tell by now the structured data testing tool is essential to doing any of this correctly.</p>
<h2 id="Common-Markup-You-Should-Use"><a href="#Common-Markup-You-Should-Use" class="headerlink" title="Common Markup You Should Use"></a>Common Markup You Should Use</h2><p>Let’s go through some common markups that will enhance your search results.</p>
<h3 id="Product-Markup"><a href="#Product-Markup" class="headerlink" title="Product Markup"></a>Product Markup</h3><p><img src="http://img0.tuicool.com/nMBBb2B.png!web" alt=""></p>
<ul>
<li>Name</li>
<li>Image</li>
<li>Price</li>
<li>Aggregate Rating</li>
<li>Description</li>
<li>In Stock</li>
</ul>
<h3 id="Recipe-Markup"><a href="#Recipe-Markup" class="headerlink" title="Recipe Markup"></a>Recipe Markup</h3><p><img src="http://img0.tuicool.com/Zn6VrqB.png!web" alt=""></p>
<ul>
<li>Name</li>
<li>Image</li>
<li>Aggregate Rating</li>
<li>Total Time</li>
<li>Calories</li>
<li>Recipe Instructions</li>
</ul>
<h3 id="Event-Markup"><a href="#Event-Markup" class="headerlink" title="Event Markup"></a>Event Markup</h3><p><img src="http://img0.tuicool.com/E7bayiI.png!web" alt=""></p>
<ul>
<li>Event Name</li>
<li>Event Start Date</li>
<li>Event Location Name</li>
<li>Event Address Locality</li>
<li>Event Address Region</li>
</ul>
<h2 id="Key-Takeaways"><a href="#Key-Takeaways" class="headerlink" title="Key Takeaways"></a>Key Takeaways</h2><p>Using schema is essential to any successful SEO strategy. Schema is only going to become more important as people increasingly usevoice search.</p>
<p>Search engines like Google tell us exactly which bits of information they think is the most important to markup, based on how they design the look of the search results. By seeing what enhancements are made and what exactly will set off an error message we can tell that Google has collected all the data they need to let us know what is commonly being searched for.</p>
<h4 id="Image-Credits"><a href="#Image-Credits" class="headerlink" title="Image Credits"></a>Image Credits</h4><p>Featured Image: Created by Author</p>
<p>In-Post Images: Screenshots by Author taken July 2017</p>
<p>Source: <a href="http://www.tuicool.com/articles/hit/vEbMbq7" target="_blank" rel="external">https://www.searchenginejournal.com/get-started-schema/204518/</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Want to improve your appearance in search results? Then you need to know how to implement schema markup.&lt;/p&gt;
&lt;p&gt;Schema provides the immed
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>A Nasty Instagram Bug Is Causing Lots Of People To Think Their Accounts Were Deleted</title>
    <link href="https://gmagon.com/blog/2017/07/07/a-nasty-instagram-bug-is-causing-lots-of-people-to-think-their-accounts-were-deleted/"/>
    <id>https://gmagon.com/blog/2017/07/07/a-nasty-instagram-bug-is-causing-lots-of-people-to-think-their-accounts-were-deleted/</id>
    <published>2017-07-07T00:00:00.000Z</published>
    <updated>2017-07-07T10:09:04.665Z</updated>
    
    <content type="html"><![CDATA[<p>A bug is making people think their Instagram accounts were deleted, and they are pretty steaming mad about it.</p>
<p>The Facebook owned-social app is being bombarded with complaints on Twitter, Facebook and its own service from people who claim their accounts have been deleted without warning or cause.</p>
<p>Instagram says the culprit is a bug that not only logged people out of their accounts, but also hid them from view. When BuzzFeed News checked multiple account pages that users claimed were deleted, it saw a message stating that the content was unavailable, noting that the link might be broken or the page could’ve been removed.</p>
<p><strong>“</strong>No accounts have been deleted,” a company spokesperson told BuzzFeed News. “However, the bug logged some users out of their accounts, while also locking their accounts from view. When the bug is fixed and affected users are able to log back in, their accounts will be viewable again.”</p>
<p><img src="http://img1.tuicool.com/ZJVn2ei.png!web" alt=""></p>
<p>Comments on Instagram’s latest post</p>
<p>Even so, users are freaked out. “Please give me back my account@harryspinkflowers i worked so hard on it and had it for 2 years…. please give it back,” read a typical response to Instagram’slatest post. Others were less diplomatic. “Give me my fucking account back bro,” Twitter user<a href="https://go.redirectingat.com/?id=74679X1524629&amp;sref=https%3A%2F%2Fwww.buzzfeed.com%2Falexkantrowitz%2Fa-nasty-instagram-bug-is-causing-lots-of-people-to-think&amp;url=https%3A%2F%2Ftwitter.com%2F_SaucySierra_&amp;xcust=4574368%7CBFLITE&amp;xs=1" target="_blank" rel="external">@<strong>_SaucySierra_</strong></a>wrote.</p>
<p>It’s unclear how many accounts were affected by this faux purge. Instagram says it’s a very small percentage, but the complaints serve as useful a reminder that ultimately, free social media accounts belong to the companies you register them with. And these companies can do pretty much whatever they want with them.</p>
<p>That’s a big problem, especially for businesses and other Instagam users whose accounts have a material tie to the offline world. Chocolate company ChocZero’s business is suffering without access to its 6,500 follower account, according to its marketing director Rhea Monique. “I’m supposed to talk to wholesale distributors today and our Instagram along with our proof of sales is a big way to pitch relevancy, “ she told BuzzFeed News. “So it’s devastating this happened.”</p>
<p><img src="http://img1.tuicool.com/jAjUryu.png!web" alt=""></p>
<p>Alex Kantrowitz is a senior technology reporter for BuzzFeed News and is based in San Francisco. He reports on social and communications.</p>
<p>Contact Alex Kantrowitz at<a href="mailto:alex.kantrowitz@buzzfeed.com" target="_blank" rel="external">alex.kantrowitz@buzzfeed.com</a>.</p>
<p>Got a confidential tip?Submit it here.</p>
<p>Source: <a href="http://www.tuicool.com/articles/hit/AraQVfy" target="_blank" rel="external">https://www.buzzfeed.com/alexkantrowitz/a-nasty-instagram-bug-is-causing-lots-of-people-to-think</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;A bug is making people think their Instagram accounts were deleted, and they are pretty steaming mad about it.&lt;/p&gt;
&lt;p&gt;The Facebook owned-
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>PowerShell Tool Time: The Tool Framework</title>
    <link href="https://gmagon.com/blog/2017/07/07/powershell-tool-time-the-tool-framework/"/>
    <id>https://gmagon.com/blog/2017/07/07/powershell-tool-time-the-tool-framework/</id>
    <published>2017-07-07T00:00:00.000Z</published>
    <updated>2017-07-07T10:09:04.683Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to a new blog series here on SQL Server Central, Powershell Tool Time. Over the next few articles I will serve a SQL Server/Powershell blend here, helping readers make more effective use of Powershell. This series will focus on helping you build a Powershell Toolbox that you can use to ease the administration of your SQL Server environment.</p>
<p>This series is intended for an audience that already has some familiarity with Powershell and its syntax. If you are brand new to the language, I do not want to chase you away, but you could easily become intimidated without some knowledge of the basics. If this is your first exposure to Powershell, I highly recommend<a href="http://www.amazon.com/Learn-Windows-PowerShell-Month-Lunches/dp/1617291080" target="_blank" rel="external">Powershell in a Month of Lunches</a>along with<a href="https://www.microsoftvirtualacademy.com/en-us/training-courses/getting-started-with-powershell-3-0-jump-start-8276" target="_blank" rel="external">Powershell Courses from the Microsoft Virtual Academy</a>. These two resources will give you a solid foundation for using and writing Powershell.</p>
<h2 id="How-to-build-a-tool"><a href="#How-to-build-a-tool" class="headerlink" title="How to build a tool"></a>How to build a tool</h2><p>Before we start talking about specific tools we can build, we first need to set the table by covering how we actually build a tool. In T-SQL, you are probably used to writing scripts that eventually become stored procedures. In Powershell, we have the same approach, but instead of using stored procedures we use functions.</p>
<p>To define a function in Powershell, use the function keyword and encapsulate your code within { and }.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">function</div><div class="line"> Invoke-Message&#123;</div><div class="line">    Write-Host -ForegroundColor Yellow </div><div class="line">&quot;Hello World!&quot;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>Run the function by calling the name you give it:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">Invoke-</div><div class="line">Message</div></pre></td></tr></table></figure>
<p><img src="http://img2.tuicool.com/QnA77fU.png!web" alt=""></p>
<p>With just a few lines, we can create repeatable code that is easy to call, the foundation of a tool. In addition, we can start to parameterize our functions with the<strong>param</strong>keyword, extending our function:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">function</div><div class="line"> Invoke-</div><div class="line">Message</div><div class="line">&#123;</div><div class="line">      param([</div><div class="line">string</div><div class="line">] $</div><div class="line">message</div><div class="line">)</div><div class="line">      Write-Host -ForegroundColor Yellow $</div><div class="line">message</div><div class="line"></div><div class="line">  &#125;</div><div class="line"></div><div class="line">  Invoke-</div><div class="line">Message</div><div class="line"> &apos;Hello World!&apos;</div></pre></td></tr></table></figure>
<p><img src="http://img1.tuicool.com/JvqAfe.png!web" alt=""></p>
<p>What’s useful about Powershell is the amount of information baked directly into the language. The Powershell team has worked very hard into adding as much<a href="http://www.mikefal.net/2015/05/05/exploring-powershell/" target="_blank" rel="external">self discovery into the language</a>as possible. If you want the full detail on functions and how to write them, you can start by looking at<a href="https://technet.microsoft.com/en-us/library/hh847829.aspx" target="_blank" rel="external">Get-Help about_Functions</a>.</p>
<h2 id="Our-First-Tool"><a href="#Our-First-Tool" class="headerlink" title="Our First Tool"></a>Our First Tool</h2><p>One thing that administrators always have to struggle with is managing disk utilization. Logging directly into servers to check free space becomes laborious. A common Powershell task that you’ll find many examples for is<a href="https://www.google.com/search?&amp;q=get%20disk%20usage%20powershell" target="_blank" rel="external">getting disk usage</a>. While many of the scripts are useful, we need to make this task as repeatable as possible, so let’s use this task for our first function:</p>
<pre><code>function
 Get-FreeSpace{

param
([string] 
$HostName
 = (
$env:COMPUTERNAME
))


Get-WmiObject
 win32_volume -computername 
$hostname
  | `

Where-Object
 {
$_
.drivetype 
-eq
3
} | `

Sort-Object
 name | `

Format-Table
 name,@{l=
&quot;Size(GB)&quot;
;e={(
$_
.capacity/
1
gb).ToString(
&quot;F2&quot;
)}},`
                              @{l=
&quot;Free Space(GB)&quot;
;e={(
$_
.freespace/
1
gb).ToString(
&quot;F2&quot;
)}},`
                              @{l=
&quot;% Free&quot;
;e={((
$_
.Freespace/
$_
.Capacity)*
100
).ToString(
&quot;F2&quot;
)}}

}
</code></pre><p>There’s a lot going on here, so let’s focus on a couple basic elements. The first item to notice is our function accepts a simple parameter, $HostName, which defaults to the local computer name. This allows us to run this function for a remote computer if we want to, but by default look at the machine it’s installed to. One strength of PowerShell is the ability to access remote machines, and we want to leverage that with this first function.</p>
<p>The second element to understand is the core function we’re using, Get-WmiObject. The<a href="https://msdn.microsoft.com/en-us/library/aa394582%28v=vs.85%29.aspx" target="_blank" rel="external">Windows Management Instrumentation</a>(WMI) framework is a key element of the Windows OS. With WMI, you can review many different parts of the stack. By using the <a href="https://msdn.microsoft.com/en-us/library/aa394515%28v=vs.85%29.aspx" target="_blank" rel="external">win32_volume class</a>to poll our disk and mount point information, we can get detailed information about the disk volumes attached to the host we are querying.</p>
<p>The third element is that of the pipeline (|). The pipeline is a fundamental concept in shell scripting languages and you can learn more about it by using<a href="https://technet.microsoft.com/en-us/library/hh847902.aspx" target="_blank" rel="external">Get-Help about_Pipelines</a>. The use here is to filter, sort, and format the output of our function, giving us a nice report on with only the elements that are important to us. There are actually three pipelines here as the output is passed from the WMI call to the Where-Object, to Sort-Object, to Format-Table. </p>
<p>Running the function on my local computer is easy:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">Get</div><div class="line">-FreeSpace -HostName localhost</div></pre></td></tr></table></figure>
<p><img src="http://img0.tuicool.com/IJvuMnf.png!web" alt=""></p>
<h2 id="If-I-Had-a-Hammer"><a href="#If-I-Had-a-Hammer" class="headerlink" title="If I Had a Hammer"></a>If I Had a Hammer</h2><p>With this function, we now have the first tool for our toolbox. I use this function almost every day in my environment and it saves me a lot of time and effort. By calling this function, I can quickly analyze my disk utilization if we have a shortage. Furthermore, I can include this in other code to build out disk space reports for my team, allowing us to be more proactive in managing our environments. Building tools not only can help me, but help the folks I work with by creating consistency for managing our environments.</p>
<p>Thank you for reading and I hope you will return for the next article in this series. I’ve created a GitHub repository for all the code in this series. Please feel free to download and make use of this code as well as provide feedback. You can find the repository at<a href="https://github.com/MikeFal/PowershellToolbox-SSC" target="_blank" rel="external">https://github.com/MikeFal/PowershellToolbox-SSC</a>.</p>
<p>Thanks to Steve Jones (<a href="https://twitter.com/way0utwest" target="_blank" rel="external">@way0utwest</a>) for giving me an opportunity to share with you more about how Powershell can be used to effectively manage SQL Server.</p>
<p>Source: <a href="http://www.tuicool.com/articles/hit/QjIbYjm" target="_blank" rel="external">http://www.sqlservercentral.com/articles/PowerShell/129889/</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to a new blog series here on SQL Server Central, Powershell Tool Time. Over the next few articles I will serve a SQL Server/Power
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Beginner’s guide : 4 linux group management commands</title>
    <link href="https://gmagon.com/blog/2017/07/07/beginners-guide-4-linux-group-management-commands/"/>
    <id>https://gmagon.com/blog/2017/07/07/beginners-guide-4-linux-group-management-commands/</id>
    <published>2017-07-07T00:00:00.000Z</published>
    <updated>2017-07-07T10:09:04.670Z</updated>
    
    <content type="html"><![CDATA[<p>Learn to manage groups in Linux with these group management commands. Article includes how to create, modify, delete and administer groups.</p>
<p><img src="http://img0.tuicool.com/MN7zEze.png!web" alt=""></p>
<p>Group management in Linux</p>
<p>Groups on Linux system are bunch of users created for easy access/permission management. One user can be member of one or many groups. User will have only one primary and one/many secondary groups. In our another article we have seen<a href="https://kerneltalks.com/linux/linux-user-management-useradd-userdel-usermod/" target="_blank" rel="external">user management commands</a>in Linux/Unix. In this article we will discuss group management. There are mainly 4 commands used to manage user groups on Linux systems :</p>
<ol>
<li>groupadd</li>
<li>groupmod</li>
<li>groupdel</li>
<li>gpasswd</li>
</ol>
<p>Lets check all these commands and fields they are responsible in/etc/group file.</p>
<h3 id="groupadd-command"><a href="#groupadd-command" class="headerlink" title="groupadd command"></a>groupadd command</h3><p>As name suggests, it is used to create new groups on Linux system. groupadd command needs group name as a argument.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"># groupadd sysadmins</div><div class="line"># cat /etc/group</div><div class="line">sysadmins:</div><div class="line">x:</div><div class="line">502</div><div class="line">:</div></pre></td></tr></table></figure>
<p>This command creates group named sysadmins. Newly created group can be verified in /etc/group file. Study fields in /etc/group filehere.</p>
<p>Several common switches which works with groupadd are :</p>
<ul>
<li>-g : Specify GID of your choice</li>
<li>-o : Create group with non-unique GID</li>
<li>-r : Create system group. (GID will be taken from system group GID range</li>
</ul>
<h3 id="groupmod-command"><a href="#groupmod-command" class="headerlink" title="groupmod command"></a>groupmod command</h3><p>If you want to edit parameters like name, GID, uniqueness of group which already exist in system then you can modify group using groupmod. Below list of switch with their desired values should feed to this command –</p>
<ul>
<li>-g : new GID</li>
<li>-o : Make it non-unique</li>
<li>-n : New name</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line"># groupmod -n newsysadmins sysadmins</div><div class="line"># cat /etc/group |grep sys</div><div class="line">newsysadmins:</div><div class="line">x:</div><div class="line">502</div><div class="line">:</div><div class="line"> </div><div class="line"></div><div class="line"># groupmod -g 9999 sysadmins</div><div class="line"># cat /etc/group </div><div class="line">sysadmins:</div><div class="line">x:</div><div class="line">9999</div><div class="line">:</div><div class="line"> </div><div class="line"></div><div class="line"># groupmod -o -g 3 sysadmins</div><div class="line"># cat /etc/group |grep sys</div><div class="line">sys:</div><div class="line">x:</div><div class="line">3</div><div class="line">:bin,adm</div><div class="line"></div><div class="line">sysadmins:</div><div class="line">x:</div><div class="line">3</div><div class="line">:</div></pre></td></tr></table></figure>
<p>Observe above outputs where we changed name, gid of group and lastly we assigned same GID 3 (non-unique) to our group which was already existing.</p>
<h3 id="groupdel-command"><a href="#groupdel-command" class="headerlink" title="groupdel command"></a>groupdel command</h3><p>Thats the command where group ends their life! Yes, group deletion is performed using this command. This command is pretty simple. Just supply your group name and it will be deleted from system.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"># groupdel sysadmins</div></pre></td></tr></table></figure>
<h3 id="gpasswd-command"><a href="#gpasswd-command" class="headerlink" title="gpasswd command"></a>gpasswd command</h3><p>This command is used to administer group. Administering groups includes :</p>
<ol>
<li>Adding/removing users to/from group</li>
<li>Setting and removing group password</li>
<li>Making user administrator/member of group</li>
</ol>
<p>Adding and removing user in group is done with switch -a and -d followed by user name and lastly group name. Check below examples :</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line"># gpasswd -a shri sysadmins</div><div class="line"></div><div class="line">Adding </div><div class="line">user</div><div class="line"> shri to group sysadmins</div><div class="line"> </div><div class="line"></div><div class="line"># cat /etc/group | grep sysadmin</div><div class="line"></div><div class="line">sysadmins:x:</div><div class="line">3</div><div class="line">:shri</div><div class="line"> </div><div class="line"></div><div class="line"># gpasswd -d shri sysadmins</div><div class="line"></div><div class="line">Removing </div><div class="line">user</div><div class="line"> shri </div><div class="line">from</div><div class="line"> group sysadmins</div><div class="line"> </div><div class="line"></div><div class="line"># cat /etc/group | grep sysadmin</div><div class="line"></div><div class="line">sysadmins:x:</div><div class="line">3</div><div class="line">:</div></pre></td></tr></table></figure>
<p>Password set is done without any switch while password removal is with -r switch as below :</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"># gpasswd sysadmins</div><div class="line"></div><div class="line">Changing the password </div><div class="line">for</div><div class="line">group</div><div class="line"> sysadmins</div><div class="line"></div><div class="line">New</div><div class="line"> Password:</div><div class="line">Re-enter </div><div class="line">new</div><div class="line"> password:</div></pre></td></tr></table></figure>
<h4 id="What-is-the-use-of-group-password-in-Linux"><a href="#What-is-the-use-of-group-password-in-Linux" class="headerlink" title="What is the use of group password in Linux?"></a>What is the use of group password in Linux?</h4><p>This question comes to many of us. Hardly rather no one use this feature at all. Idea must be to secure group from non-member users. But since group password should be known to all group members, its actually doesnt make any sense to use it. Then you might ask then why group password exist in first place? It may be just following user (password security) model to groups as well to maintain symmenty in design. I mean its just my thought. Let me know if you have any other reason which suits group password existence!</p>
<p>Making any user administrator of group grants him privilege to administer group. Member user is just member of group and can not administer it. You can make user administrator of group with -A switch and member with -M. By default user is added to group as a member</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"># gpasswd -A shri sysadmins</div><div class="line"># gpasswd -M shri sysadmins</div></pre></td></tr></table></figure>
<p>Those are all group management commands in Linux with their most used switches. Let us know any addition/correction/feedback in comments!</p>
<p>Source: <a href="http://www.tuicool.com/articles/hit/jYNBji" target="_blank" rel="external">https://kerneltalks.com/commands/4-linux-group-management-commands/</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Learn to manage groups in Linux with these group management commands. Article includes how to create, modify, delete and administer group
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>35 Awe-Inspiring Badge &amp; Emblem Logo Designs</title>
    <link href="https://gmagon.com/blog/2017/07/07/35-awe-inspiring-badge-and-emblem-logo-designs/"/>
    <id>https://gmagon.com/blog/2017/07/07/35-awe-inspiring-badge-and-emblem-logo-designs/</id>
    <published>2017-07-07T00:00:00.000Z</published>
    <updated>2017-07-07T10:09:04.661Z</updated>
    
    <content type="html"><![CDATA[<p>An another amazing examples of<a href="http://graphicdesignjunction.com/2017/02/badge-emblem-logos/" target="_blank" rel="external"><strong>emblem and badges</strong></a>in Retro and Vintage style. These <strong>logo, badge, emblem</strong>and <strong>insignia templates</strong>design by professional graphic designers. Today’s in this gallery I’ve gathered thirty five awe-inspiring<a href="http://graphicdesignjunction.com/2016/05/badge-emblem-logo-designs/" target="_blank" rel="external"><strong>emblem and badges logo designs</strong></a>, concepts and ideas that will surely inspired you.</p>
<h4 id="Some-Branding-and-Logo-Design-Related-Articles"><a href="#Some-Branding-and-Logo-Design-Related-Articles" class="headerlink" title="Some Branding and Logo Design Related Articles:"></a>Some Branding and Logo Design Related Articles:</h4><ul>
<li><a href="http://graphicdesignjunction.com/2015/03/brand-strategy/" target="_blank" rel="external"><strong>Brand Strategy: What You Need To Know</strong></a></li>
<li><a href="http://graphicdesignjunction.com/2015/01/new-and-vigorous-logo/" target="_blank" rel="external"><strong>New and Vigorous Logo – Useful Tips</strong></a></li>
<li><a href="http://graphicdesignjunction.com/2014/12/boost-your-business-with-branding/" target="_blank" rel="external"><strong>Boost Your Business with Branding</strong></a></li>
<li><a href="http://graphicdesignjunction.com/2014/06/why-branding-isnt-all-about-the-logo-but-much-more/" target="_blank" rel="external">Why Branding Isn’t All About the Logo but Much More</a></li>
</ul>
<p>Please join us &amp; follow on<a href="http://www.facebook.com/GraphicDesignJunction" target="_blank" rel="external"><strong>Facebook</strong></a>, <a href="http://twitter.com/graphicdesignju" target="_blank" rel="external"><strong>Twitter</strong></a>and <a href="https://plus.google.com/117891373249797133057/posts" target="_blank" rel="external"><strong>Google+</strong></a>for updates.</p>
<p>Subscribe to our RSS via email, simply enter your email address &amp; click subscribe.</p>
<h2 id="Creative-Badges-Emblem-Insignia-and-Logos-Collection"><a href="#Creative-Badges-Emblem-Insignia-and-Logos-Collection" class="headerlink" title="Creative Badges, Emblem, Insignia and Logos Collection"></a>Creative Badges, Emblem, Insignia and Logos Collection</h2><p>Here’s a great collection of Awe-Inspiring Badge &amp; Emblem Logo Designs. You may also check the full list of<a href="http://graphicdesignjunction.com/tag/business-logo-design/" target="_blank" rel="external"><strong>logo design series</strong></a>.</p>
<h3 id="Fidget-Spinners-Emblem-by-Sergey-Akimov"><a href="#Fidget-Spinners-Emblem-by-Sergey-Akimov" class="headerlink" title="Fidget Spinners Emblem by Sergey Akimov"></a>Fidget Spinners Emblem by Sergey Akimov</h3><p><img src="http://img1.tuicool.com/eeuUFff.jpg!web" alt=""></p>
<p><a href="https://dribbble.com/shots/3577663-Fidget-Spinners-Emblem" target="_blank" rel="external">Source</a></p>
<h3 id="Aqua-Adventures-by-Zachary-Thomson"><a href="#Aqua-Adventures-by-Zachary-Thomson" class="headerlink" title="Aqua Adventures by Zachary Thomson"></a>Aqua Adventures by Zachary Thomson</h3><p><img src="http://img1.tuicool.com/jYZJJzf.jpg!web" alt=""></p>
<p><a href="https://dribbble.com/shots/3629106-Aqua-Adventures" target="_blank" rel="external">Source</a></p>
<h3 id="City-Cycling-Badge-by-Marcus-Rentsch"><a href="#City-Cycling-Badge-by-Marcus-Rentsch" class="headerlink" title="City Cycling Badge by Marcus Rentsch"></a>City Cycling Badge by Marcus Rentsch</h3><p><img src="http://img1.tuicool.com/7n6FbaE.jpg!web" alt=""></p>
<p><a href="https://dribbble.com/shots/3626806-City-Cycling" target="_blank" rel="external">Source</a></p>
<h3 id="Badge-by-Patrick-Moriarty"><a href="#Badge-by-Patrick-Moriarty" class="headerlink" title="Badge by Patrick Moriarty"></a>Badge by Patrick Moriarty</h3><p><img src="http://img1.tuicool.com/BvYnUz7.jpg!web" alt=""></p>
<p><a href="https://dribbble.com/shots/2333209-Badge" target="_blank" rel="external">Source</a></p>
<h3 id="Moon-Valley-Badge-by-Rodrigo-Avalos"><a href="#Moon-Valley-Badge-by-Rodrigo-Avalos" class="headerlink" title="Moon Valley Badge by Rodrigo Avalos"></a>Moon Valley Badge by Rodrigo Avalos</h3><p><img src="http://img1.tuicool.com/bQfUJjQ.jpg!web" alt=""></p>
<p><a href="https://dribbble.com/shots/3625328-Moon-Valley" target="_blank" rel="external">Source</a></p>
<h3 id="Yellowstone-Sticker-by-Jorrien-Peterson"><a href="#Yellowstone-Sticker-by-Jorrien-Peterson" class="headerlink" title="Yellowstone Sticker by Jorrien Peterson"></a>Yellowstone Sticker by Jorrien Peterson</h3><p><img src="http://img2.tuicool.com/Y3Ir22I.jpg!web" alt=""></p>
<p><a href="https://dribbble.com/shots/3629394-Yellowstone-Sticker" target="_blank" rel="external">Source</a></p>
<h3 id="Battle-For-Baltimore-Badge-by-Jason-Halliburton"><a href="#Battle-For-Baltimore-Badge-by-Jason-Halliburton" class="headerlink" title="Battle For Baltimore Badge by Jason Halliburton"></a>Battle For Baltimore Badge by Jason Halliburton</h3><p><img src="http://img1.tuicool.com/R3qQBzZ.jpg!web" alt=""></p>
<p><a href="https://dribbble.com/shots/3625012-Battle-For-Baltimore" target="_blank" rel="external">Source</a></p>
<h3 id="Camp-Fire-Emblem-by-A-L-PENCIL"><a href="#Camp-Fire-Emblem-by-A-L-PENCIL" class="headerlink" title="Camp Fire Emblem by A.L PENCIL"></a>Camp Fire Emblem by A.L PENCIL</h3><p><img src="http://img0.tuicool.com/6rAjyyN.jpg!web" alt=""></p>
<p><a href="https://dribbble.com/shots/3626670-Camp-Fire" target="_blank" rel="external">Source</a></p>
<h3 id="Monteillerie-Emblem-by-CilabStudio"><a href="#Monteillerie-Emblem-by-CilabStudio" class="headerlink" title="Monteillerie Emblem by CilabStudio"></a>Monteillerie Emblem by CilabStudio</h3><p><img src="http://img1.tuicool.com/iU7vm2q.jpg!web" alt=""></p>
<p><a href="https://dribbble.com/shots/3624155-Monteillerie-emblem-blue" target="_blank" rel="external">Source</a></p>
<h3 id="Gri-amp-Lu-Tattoo-amp-Coffee-Emblem-by-La-Ruca"><a href="#Gri-amp-Lu-Tattoo-amp-Coffee-Emblem-by-La-Ruca" class="headerlink" title="Gri &amp; Lu | Tattoo &amp; Coffee Emblem by La Ruca"></a>Gri &amp; Lu | Tattoo &amp; Coffee Emblem by La Ruca</h3><p><img src="http://img1.tuicool.com/6nAFnqA.jpg!web" alt=""></p>
<p><a href="https://dribbble.com/shots/3615281-Gri-Lu-Tattoo-Coffee" target="_blank" rel="external">Source</a></p>
<h3 id="Spring-Chicken-Vintage-Logo-By-Dahbi-Lahsen"><a href="#Spring-Chicken-Vintage-Logo-By-Dahbi-Lahsen" class="headerlink" title="Spring Chicken Vintage Logo By Dahbi Lahsen"></a>Spring Chicken Vintage Logo By Dahbi Lahsen</h3><p><img src="http://img2.tuicool.com/UnuiYjN.jpg!web" alt=""></p>
<p><a href="https://dribbble.com/shots/2593092-chicken" target="_blank" rel="external">Source</a></p>
<h3 id="Live-Free-or-Die-by-Patrick-Moriarty"><a href="#Live-Free-or-Die-by-Patrick-Moriarty" class="headerlink" title="Live Free or Die by Patrick Moriarty"></a>Live Free or Die by Patrick Moriarty</h3><p><img src="http://img2.tuicool.com/myqeQri.jpg!web" alt=""></p>
<p><a href="https://dribbble.com/shots/3306354-Live-Free-or-Die" target="_blank" rel="external">Source</a></p>
<h3 id="Airplane-Hanger-by-Jordan-Blahnik"><a href="#Airplane-Hanger-by-Jordan-Blahnik" class="headerlink" title="Airplane Hanger by Jordan Blahnik"></a>Airplane Hanger by Jordan Blahnik</h3><p><img src="http://img1.tuicool.com/eQFB7rM.jpg!web" alt=""></p>
<p><a href="https://dribbble.com/shots/3229093-Airplane-Hanger" target="_blank" rel="external">Source</a></p>
<h3 id="Logo-for-a-brand-new-barbershop-“Nobel-Men”-By-Haykaz"><a href="#Logo-for-a-brand-new-barbershop-“Nobel-Men”-By-Haykaz" class="headerlink" title="Logo for a brand new barbershop “Nobel Men” By Haykaz"></a>Logo for a brand new barbershop “Nobel Men” By Haykaz</h3><p><img src="http://img1.tuicool.com/2iIRb2U.jpg!web" alt=""></p>
<p><a href="https://dribbble.com/shots/3580372-Noble-Men" target="_blank" rel="external">Source</a></p>
<h3 id="Prefect-Breakfast-Badge-by-Skilline"><a href="#Prefect-Breakfast-Badge-by-Skilline" class="headerlink" title="Prefect Breakfast Badge by Skilline"></a>Prefect Breakfast Badge by Skilline</h3><p><img src="http://img2.tuicool.com/A7BRNr6.jpg!web" alt=""></p>
<p><a href="https://dribbble.com/shots/3577784-Prefect-Breakfast" target="_blank" rel="external">Source</a></p>
<p><img src="http://img2.tuicool.com/UzaqQbr.jpg!web" alt=""></p>
<p>Source</p>
<p><img src="http://img2.tuicool.com/a6va2aV.jpg!web" alt=""></p>
<p>Source</p>
<p><img src="http://img1.tuicool.com/uieQRrN.jpg!web" alt=""></p>
<p>Source</p>
<h3 id="Jackson-Wyoming-Night-by-Patrick-Moriarty"><a href="#Jackson-Wyoming-Night-by-Patrick-Moriarty" class="headerlink" title="Jackson, Wyoming (Night) by Patrick Moriarty"></a>Jackson, Wyoming (Night) by Patrick Moriarty</h3><p><img src="http://img0.tuicool.com/viIBn27.jpg!web" alt=""></p>
<p><a href="https://dribbble.com/shots/2641050-Jackson-Wyoming-Night" target="_blank" rel="external">Source</a></p>
<h3 id="Classic-Garage-Badge-by-Bangkit-Tri-Setiadi"><a href="#Classic-Garage-Badge-by-Bangkit-Tri-Setiadi" class="headerlink" title="Classic Garage Badge by Bangkit Tri Setiadi"></a>Classic Garage Badge by Bangkit Tri Setiadi</h3><p><img src="http://img0.tuicool.com/YzuYrae.jpg!web" alt=""></p>
<p><a href="https://dribbble.com/shots/3511882-Classic-Garage" target="_blank" rel="external">Source</a></p>
<h3 id="Rotiroll-Logo-by-Pepperweb"><a href="#Rotiroll-Logo-by-Pepperweb" class="headerlink" title="Rotiroll Logo by Pepperweb"></a>Rotiroll Logo by Pepperweb</h3><p><img src="http://img1.tuicool.com/BzMVnq2.jpg!web" alt=""></p>
<p><a href="https://dribbble.com/shots/3498735-Rotiroll-Logo" target="_blank" rel="external">Source</a></p>
<h3 id="Austin-City-Badge-by-Denver-Gravitt"><a href="#Austin-City-Badge-by-Denver-Gravitt" class="headerlink" title="Austin City Badge by Denver Gravitt"></a>Austin City Badge by Denver Gravitt</h3><p><img src="http://img1.tuicool.com/V3eIn2Y.jpg!web" alt=""></p>
<p><a href="https://dribbble.com/shots/3603261-Austin-City-Badge" target="_blank" rel="external">Source</a></p>
<h3 id="Bruce-Park-Emblem-by-Damian-Orellana"><a href="#Bruce-Park-Emblem-by-Damian-Orellana" class="headerlink" title="Bruce Park Emblem by Damian Orellana"></a>Bruce Park Emblem by Damian Orellana</h3><p><img src="http://img0.tuicool.com/Mr6zErY.jpg!web" alt=""></p>
<p><a href="https://dribbble.com/shots/3599645-Bruce-Park" target="_blank" rel="external">Source</a></p>
<h3 id="Rocket-Explorer-Badge-animated-by-Austin-Faure"><a href="#Rocket-Explorer-Badge-animated-by-Austin-Faure" class="headerlink" title="Rocket Explorer Badge (animated) by Austin Faure"></a>Rocket Explorer Badge (animated) by Austin Faure</h3><p><img src="http://img2.tuicool.com/byAjYbb.gif" alt=""></p>
<p><a href="https://dribbble.com/shots/3607064-Rocket-Explorer-Badge" target="_blank" rel="external">Source</a></p>
<h3 id="Game-For-Life-Badge-by-Adam-Ramerth"><a href="#Game-For-Life-Badge-by-Adam-Ramerth" class="headerlink" title="Game For Life Badge by Adam Ramerth"></a>Game For Life Badge by Adam Ramerth</h3><p><img src="http://img2.tuicool.com/JzqIBzr.jpg!web" alt=""></p>
<p><a href="https://dribbble.com/shots/3608791-Game-For-Life-Badge" target="_blank" rel="external">Source</a></p>
<h3 id="New-Generation-Swimming-Club-Emblem-by-Mooral-Monteria"><a href="#New-Generation-Swimming-Club-Emblem-by-Mooral-Monteria" class="headerlink" title="New Generation Swimming Club Emblem by Mooral Montería"></a>New Generation Swimming Club Emblem by Mooral Montería</h3><p><img src="http://img0.tuicool.com/6ZN3Efv.jpg!web" alt=""></p>
<p><a href="https://dribbble.com/shots/3612532-New-Generation-swimming-club" target="_blank" rel="external">Source</a></p>
<h3 id="Mt-Forbes-Canada-Sticker-by-Jordan-H-Johnson"><a href="#Mt-Forbes-Canada-Sticker-by-Jordan-H-Johnson" class="headerlink" title="Mt. Forbes Canada Sticker by Jordan H Johnson"></a>Mt. Forbes Canada Sticker by Jordan H Johnson</h3><p><img src="http://img2.tuicool.com/6zUvYbq.jpg!web" alt=""></p>
<p><a href="https://dribbble.com/shots/3616959-Mt-Forbes-Canada-Sticker" target="_blank" rel="external">Source</a></p>
<h3 id="30-Year-Anniversary-Badge-by-Adam-Swisher"><a href="#30-Year-Anniversary-Badge-by-Adam-Swisher" class="headerlink" title="30 Year Anniversary Badge by Adam Swisher"></a>30 Year Anniversary Badge by Adam Swisher</h3><p><img src="http://img0.tuicool.com/auq2umA.jpg!web" alt=""></p>
<p><a href="https://dribbble.com/shots/3618209-30-Years" target="_blank" rel="external">Source</a></p>
<h3 id="Learn-Fresh-All-Star-Teaching-Team-by-Jimmy-Nutini"><a href="#Learn-Fresh-All-Star-Teaching-Team-by-Jimmy-Nutini" class="headerlink" title="Learn Fresh All-Star Teaching Team by Jimmy Nutini"></a>Learn Fresh All-Star Teaching Team by Jimmy Nutini</h3><p><img src="http://img2.tuicool.com/ZvmEZn3.jpg!web" alt=""></p>
<p><a href="https://dribbble.com/shots/3618941-Learn-Fresh-All-Star-Teaching-Team" target="_blank" rel="external">Source</a></p>
<h3 id="The-Glass-Jug-Beer-Lab-logo-by-Ryan-Cuthriell"><a href="#The-Glass-Jug-Beer-Lab-logo-by-Ryan-Cuthriell" class="headerlink" title="The Glass Jug Beer Lab logo by Ryan Cuthriell"></a>The Glass Jug Beer Lab logo by Ryan Cuthriell</h3><p><img src="http://img0.tuicool.com/ZVF7viz.jpg!web" alt=""></p>
<p><a href="https://dribbble.com/shots/3534822-The-Glass-Jug-Beer-Lab-logo" target="_blank" rel="external">Source</a></p>
<h3 id="Buck-Inna-Truck-by-Jordan-Blahnik"><a href="#Buck-Inna-Truck-by-Jordan-Blahnik" class="headerlink" title="Buck Inna Truck by Jordan Blahnik"></a>Buck Inna Truck by Jordan Blahnik</h3><p><img src="http://img1.tuicool.com/MNNVje6.jpg!web" alt=""></p>
<p><a href="https://dribbble.com/shots/3082881-Buck-Inna-Truck" target="_blank" rel="external">Source</a></p>
<h3 id="Top-Gallant-Barber-Shop-Logo-By-mylito04"><a href="#Top-Gallant-Barber-Shop-Logo-By-mylito04" class="headerlink" title="Top Gallant Barber Shop Logo By mylito04"></a>Top Gallant Barber Shop Logo By mylito04</h3><p><img src="http://img0.tuicool.com/riMr6ve.jpg!web" alt=""></p>
<p><a href="https://www.instagram.com/p/BTVXHw4jitB/" target="_blank" rel="external">Source</a></p>
<p><img src="http://img1.tuicool.com/BrEVzuV.jpg!web" alt=""></p>
<p>Source</p>
<h3 id="Motivational-Poster-“Vikings-never-die”-by-Sergey-Akimov"><a href="#Motivational-Poster-“Vikings-never-die”-by-Sergey-Akimov" class="headerlink" title="Motivational Poster “Vikings never die” by Sergey Akimov"></a>Motivational Poster “Vikings never die” by Sergey Akimov</h3><p><img src="http://img1.tuicool.com/mQZZVbN.jpg!web" alt=""></p>
<p><a href="https://dribbble.com/shots/3588533-Motivational-Poster-Vikings-never-die" target="_blank" rel="external">Source</a></p>
<h3 id="Boutique-Woodworking-Company-by-Yavor-Lazarov"><a href="#Boutique-Woodworking-Company-by-Yavor-Lazarov" class="headerlink" title="Boutique Woodworking Company by Yavor Lazarov"></a>Boutique Woodworking Company by Yavor Lazarov</h3><p><img src="http://img1.tuicool.com/JFreMze.jpg!web" alt=""></p>
<p><a href="https://dribbble.com/shots/3601629-Boutique-Woodworking-Company" target="_blank" rel="external">Source</a></p>
<h3 id="Hand-Drawn-Vintage-Emblem-by-Graphic-Lovers"><a href="#Hand-Drawn-Vintage-Emblem-by-Graphic-Lovers" class="headerlink" title="Hand Drawn Vintage Emblem by Graphic Lovers"></a>Hand Drawn Vintage Emblem by Graphic Lovers</h3><p><img src="http://img0.tuicool.com/JraI3qf.jpg!web" alt=""></p>
<p>Source: <a href="http://www.tuicool.com/articles/hit/e6VJJna" target="_blank" rel="external">http://graphicdesignjunction.com/2017/07/inspiring-badge-emblem-logo/</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;An another amazing examples of&lt;a href=&quot;http://graphicdesignjunction.com/2017/02/badge-emblem-logos/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;stro
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Why I Hate Slack and You Should Too</title>
    <link href="https://gmagon.com/blog/2017/07/07/why-i-hate-slack-and-you-should-too/"/>
    <id>https://gmagon.com/blog/2017/07/07/why-i-hate-slack-and-you-should-too/</id>
    <published>2017-07-07T00:00:00.000Z</published>
    <updated>2017-07-07T10:09:04.688Z</updated>
    
    <content type="html"><![CDATA[<p>Yeah, that’s right: there’s finally something I feel so negatively about that I’m unsatisfied hating it all by myself; I want_you_to hate it, too. So let’s talk about why Slack is destroying your life, piece by piece, and why you should get rid of it immediately before its trail of destruction widens any further—in other words, while you still have time to stop the deluge of mindless addiction that it’s already staple-gunned to your life.</p>
<h3 id="1-It-encourages-use-for-both-time-sensitive-and-time-insensitive-communication"><a href="#1-It-encourages-use-for-both-time-sensitive-and-time-insensitive-communication" class="headerlink" title="1. It encourages use for both time-sensitive and time-insensitive communication"></a>1. It encourages use for both time-sensitive and time-insensitive communication</h3><p>A Long Thyme Agoe, in the Days Before Slack, I had three different ways of being contacted, and they served three very different purposes, with radically different interrupt priorities. I had emails, which could wait; I had phone calls, which couldn’t; and I had the company IRC server, which was usually where I went to waste time by sharing links to things that either made me get_very_angry or made me laugh hysterically.In this system, the important, time-sensitive thing can interrupt me, and everything else can’t. That’s great for productivity and great for my sanity, and the people were happy and things were good.</p>
<p>Slack totally just trashed everything. It’s email and phone calls and cat pictures, all rolled into one. So_sometimes<em>Slack notifications are totally not time-sensitive</em>(<code>@here</code>Hey I need coloring books for my niece, any suggestions? also she’s afraid of animals clowns food people and dinosaurs and also allergic to paper kthxbye!)_, and_sometimes<em>they require an immediate action</em>(<code>@here</code>Dr. Poison just showed up and tl;dr maybe run for it idk?)_—and until I’ve read the message, I have<em>absolutely no idea whether it deserves my immediate attention</em>. That order’s backwards and it makes me feel bad because it_is_bad.</p>
<p>This is actually a whole thing in psychology: if you give a mouse food every time they push a lever, they’ll eventually only push it when they’re hungry, but if you only give them food_sometimes_when they push a lever, then the “reward uncertainty” will actually cause them to push the lever<em>more often</em>.And hey! Here we are, all checking Slack 23,598 times a minute for each notification, because who knows, maybe_this_one matters. It’s all the pain of Vegas with none of the reward and somehow we’re_still_hooked.</p>
<p>So unlike before, now I get interrupted constantly, and I_have_to break my flow to figure out whether getting interrupted was worthwhile, and for some reason this is supposed to<em>enhance business productivity</em>.</p>
<p>Right. Sure. You go on being you, Slack.</p>
<h3 id="2-It-cannot-be-sanely-ignored"><a href="#2-It-cannot-be-sanely-ignored" class="headerlink" title="2. It cannot be sanely ignored"></a>2. It cannot be sanely ignored</h3><p>_“Okay, pea-brain,”<em>you mutter,</em>“so just turn off Slack notifications when you need to focus for awhile, and catch up later.”_</p>
<p>I once thought as you did, but part of the reason you end up addicted to Slack is that catching up on what you’ve missed feels very similar to when you were back in college and were a day before the final and suddenly realized that your plan of not highlighting the book or taking notes all semester may’ve been a Bad Idea™. About the only way Slack bothers grouping information is by room—and as anyone who’s been trapped in a heavily-used Slack system can tell you, the room names and descriptions are at best weak guidelines, so you can’t even necessarily prioritize what to catch up on even at_that_gross level of granularity.Nope: your only option is going to be to read<em>the entire backlog, from start to finish</em>, or else just accept that, at some distant point three months from now, you’re going to look like a complete idiot when you’re the only one didn’t know that all employee blood was now going to be collected for occult purposes.</p>
<p>Granted, this isn’t Slack’s fault<em>per se</em>, at least insofar as_every_chat system has this problem, but Slack’s attempt to become your One True Source of Everything, from scheduling to reminders to SharePoint replacement to company directory, means that a_huge_amount of information that previously would’ve been in emails ends up in Slack, and_only_in Slack. And that’s a very deliberate decision by Slack to make themselves utterly indispensable, so I feel very comfy screaming at them until I go hoarse.</p>
<h3 id="3-It-cannot-be-sanely-organized"><a href="#3-It-cannot-be-sanely-organized" class="headerlink" title="3. It cannot be sanely organized"></a>3. It cannot be sanely organized</h3><p>Okay fine, so you read through the whole backlog from your vacation, which took you barely even 70 hours, and have extracted the six actual to-do items from it, one of which involves something about pentagrams and goats that you’ll decipher later. Great. Mazel tov. Phase one complete.</p>
<p>Now what? Slack has no meaningful way to organize those six messages. There aren’t folders. There isn’t a meaningful “do later” pile. (There’s<code>/remind</code>, to be fair, but, as noted previously, that just generates more notifications, which we’re trying to avoid. Theoretically.) So you’re left with…what, exactly? Right-clicking on each individual message at the end of the chain, copying the link, and pasting that into some external to-do app? Which, of course, when you click back on the link, will require you to re-read at least_some_amount of unstructured backlog, including a bunch of unrelated garbage about reconfiguring CARP on the edge servers and something about epoll and multithreading and a panda birth video that just happens to be there, just to remind yourself what everyone said?</p>
<p>Welcome to hell. Population: all Slack users.</p>
<h3 id="4-It’s-proprietary-and-encourages-lock-in"><a href="#4-It’s-proprietary-and-encourages-lock-in" class="headerlink" title="4. It’s proprietary and encourages lock-in"></a>4. It’s proprietary and encourages lock-in</h3><p>In an ideal world, I could circumvent a lot of these issues in any number of ways. For example, I’m still active in open-source sometimes, and the open-source equivalent of Slack is (usually) still IRC. But IRC, being a well-documentedolder system, has_tons_of different tools to extract data from it. If I want to be nerdy, I can yank individual messages from<a href="https://www.emacswiki.org/emacs/ERC" target="_blank" rel="external">ERC</a>straight into<a href="http://orgmode.org/" target="_blank" rel="external">org mode</a>, or write custom scripts for<a href="https://weechat.org/" target="_blank" rel="external">WeeChat</a>, or use any of literally dozens of clients written in Ruby and Python and Io and Java and C# and thousands of other programming languages plus also JavaScript and do really bespoke things. And even if I don’t, the plethora of macOS and Windows clients means that an off-the-shelf or trivially customizable AppleScript or WSH solution is never far away.</p>
<p>But Slack is Slack, and Slack is Electron, and Electron is Chrome—Chrome surrounded by an unscriptable posterior that eats up 100 MB of RAM per channel, plus an extra 250 MB for each Giphy.And while I can_almost_script my way out of this hell, I really can’t. Not as a mortal end-user, anyway. To the extent I_can_do anything, I need to write directly against the<a href="https://api.slack.com/" target="_blank" rel="external">Slack API</a>, rather than using something commonplace like XMPP or IRC, so goodbye portability. And even if I’m willing and able to write against the proprietary API, a lot of the more interesting things you can do require being an organization admin, and require being enabled globally for the entire instance. So goodbye, personalized custom integration points, and hello, one-size-fits-zero webhooks. This is my life now.</p>
<h3 id="5-Its-version-of-Markdown-is-just-broken"><a href="#5-Its-version-of-Markdown-is-just-broken" class="headerlink" title="5. Its version of Markdown is just broken"></a>5. Its version of Markdown is just broken</h3><p>I’m going to use up an entire heading purely to say that making<code>*foo*</code>be<strong>bold</strong>and<code>_foo_</code>be_italic_is covered in Leviticus 64:128 and explicitly punishable by stoning until death.</p>
<h3 id="6-It-encourages-use-for-both-business-and-personal-applications"><a href="#6-It-encourages-use-for-both-business-and-personal-applications" class="headerlink" title="6. It encourages use for both business and personal applications"></a>6. It encourages use for both business and personal applications</h3><p>All this would be merely infuriating and drive me into a blind murderous rage if it were just something I dealt with at work, but_oh no,_now the_fun_groups I interact with are turning to Slack! That’s right: the same application and environment that makes a full-blown Dementor-style kiss with my attention span for work can now corner me in a back-alley when I just want to shoot the breeze with friends.</p>
<p>I glance at the Slack icon. I have nine unread messages. Neat. Are they from work? I should probably actually go read those and see which ones require I do something. Are they all the ex-employees of that one company I used to work for? It’s probably a bunch of political screaming about stochastically sentient Cheetos that somehow won the presidency, and I’m honestly a bit tired of reading about that at this point.But at any rate, I can’t know until I take my phone out and read the notification—and sometimes_even then_I can’t, since of course some of the people I talk to are on multiple Slack instances and have a habit of saying things like “<code>@bmp</code>did you look at this it’s really concerning?” which requires I actually load up the freaking client and find the instance and the message and finally learn to my utter horror that I shall never be given up, let down, or run around/deserted.</p>
<h3 id="Give-up-and-yield-untoCthulhuSlack-destroyer-of-focus"><a href="#Give-up-and-yield-untoCthulhuSlack-destroyer-of-focus" class="headerlink" title="Give up and yield untoCthulhuSlack, destroyer of focus"></a>Give up and yield unto<del>Cthulhu</del>Slack, destroyer of focus</h3><p>Stop using Slack. I hate it; you also should hate it. It’s distracting. It murders productivity. It destroys old tools. It exploits psychological needs in such a way that it kills your soul and hangs it up to dry over a lava pit, where the clothesline catches fire and your soul falls into the fire and somehow you’re not dead, just a zombie, forever, reading zombie notifications on your zombie iPhone and wondering whether “<code>@here</code>brains?” is a lunch invite or an insult until you read the backlog. Friends do not let friends use Slack. I have been utterly convincing and you should listen to me in my capacity as low-grade Internet celebrity and do what I say because mindlessly obeying authority is the right thing to do.</p>
<p>But realistically? We’re all still using Slack, because it’s there, and we have to, and it’s the best option according to our collective judgment, which I do have point out may empirically be lacking at this point. So if we_are_stuck in Slack, then maybe, just maybe, we could start trying to restore Slack to a place where it’s genuinely for ephemeral ideas. Where it’s indeed the place for_ad hoc_conversations, but not a canonical store for their conclusions and action items. Where I_don’t_have to read the backlog when I come back from vacation, because anything actionable will at worst have been duplicated as an email or a Trello card or what have you. Where I can disable Slack notifications because I can know, with certainty, that any activity can wait until I’m back at my computer and actually_want_to spend time chatting on Slack.</p>
<p>In the meantime I’ll be right back because either the data center just exploded or someone posted a picture of a goat fainting and The Notification God must be placated.</p>
<p>Source: <a href="http://www.tuicool.com/articles/hit/IvUb6nq" target="_blank" rel="external">https://bitquabit.com/post/i-hate-slack-and-you-should-too/</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Yeah, that’s right: there’s finally something I feel so negatively about that I’m unsatisfied hating it all by myself; I want_you_to hate
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Creating a Simple Game With Core ML in Swift 4</title>
    <link href="https://gmagon.com/blog/2017/07/06/creating-a-simple-game-with-core-ml-in-swift-4/"/>
    <id>https://gmagon.com/blog/2017/07/06/creating-a-simple-game-with-core-ml-in-swift-4/</id>
    <published>2017-07-06T00:00:00.000Z</published>
    <updated>2017-07-06T10:09:59.025Z</updated>
    
    <content type="html"><![CDATA[<p>WWDC 2017 brought many amazing and powerful APIs to iOS. Among the most popular is<a href="https://developer.apple.com/documentation/coreml" target="_blank" rel="external">Core ML</a>(of course, ARKit is hot too!). Core ML allows developers to use machine learning models in their apps without the knowledge of neural networks or machine learning algorithms. Today, I will show you how simple it is to create a game using Core ML. We will be creating a simple scavenger hunt game which will have the player running around the room looking for objects. We have already covered<a href="http://www.appcoda.com/coreml-introduction" target="_blank" rel="external">the basics of Core ML in our tutorial</a>which I suggest you read over before continuing.</p>
<p>Note:You will need Xcode 9 beta to for this tutorial. You will also need a device that is running iOS 11 beta in order to test out the app. This app will NOT run in the simulator. The also might run slow on older devices such as the iPhone 5s. While Xcode 9 beta supports both Swift 3.2 and 4.0, all the code in this tutorial is written in Swift 4.</p>
<h2 id="App-Overview"><a href="#App-Overview" class="headerlink" title="App Overview"></a>App Overview</h2><p>The game that we are making today is simple to create and play. After the user taps the Start button, the name of a random object will appear at the top of the screen. It is the player’s job to find that object. Once the player does, they will point the phone at it. Using the machine learning algorithm, the iPhone will recognize the object and then ask for another one. Every object found adds a point to the score. The player also has the option to skip an object if they cannot find it.</p>
<p>This app recognizes objects slightly differently than the one demonstrated in the Introduction to Core ML tutorial. This is mainly because we will have a live camera view and predicting objects in real time rather than choosing a single photo.</p>
<p><img src="http://img0.tuicool.com/NJnu2mQ.png!web" alt=""></p>
<h2 id="Creating-the-Project"><a href="#Creating-the-Project" class="headerlink" title="Creating the Project"></a>Creating the Project</h2><p>First things first! Let’s open Xcode 9 beta and create a new project. Choose the_Single View App_template for this app. Though we are building a game, the Single View Application template is good enough. I will be naming the project_CoreMLScavenge_but you can name it whatever you wish. Make sure to set the language to<em>Swift</em>.</p>
<p><img src="http://img1.tuicool.com/fyyeieJ.png!web" alt=""></p>
<p>Once the project is created, uncheck the boxes next to<code>Landscape Left</code>and<code>Landscape Right</code>. We will stick to portrait mode for this game.</p>
<p><img src="http://img0.tuicool.com/AvQbmuF.png!web" alt=""></p>
<h2 id="Creating-the-User-Interface"><a href="#Creating-the-User-Interface" class="headerlink" title="Creating the User Interface"></a>Creating the User Interface</h2><p>Now it’s time to have fun! Go to the<code>Main.storyboard</code>file in the project navigator. Start by adding a<code>View</code>to the top and bottom of the View Controller. Stretch the widths to the size of the View Controller and make the height around 85 pixels for each. The entire background is going to be the live camera feed, so we are adding these views so we can see the labels and buttons on top of it. Make the background of the view a light-gray color. This way we know not to accidentally put any elements on top of it.</p>
<p><img src="http://img1.tuicool.com/Yvi2EzV.png!web" alt=""></p>
<p>In the top view, add a<code>UILabel</code>to the center and another one to the left. The center label will show the object for the player to find, so stretch it out a bit so it can fit longer words. The label on the left will show the score. You can condense it a bit since it will only need to show two digits.</p>
<p><img src="http://img1.tuicool.com/eE32MjY.png!web" alt=""></p>
<p>In the bottom view, add two<code>UILabel</code>s and two<code>UIButtons</code>. One label will show the score, and the other will show the player’s highest score. Make one of the buttons say “start”, which will of course start the game. Make the other button say “skip”. The players can tap this if they cannot find the object and want another one.</p>
<p><img src="http://img1.tuicool.com/uaqQnmN.png!web" alt=""></p>
<p>I will not cover how to add layout constraints to these elements in this tutorial. However, I highly suggest that you do. Check out ourAuto Layout Tutorial if you would like to learn how to use it. If you are not going to use Auto Layout, be sure to make your view controller’s size to the type of the device you are going to run the app on.</p>
<h2 id="Setting-Up-the-View"><a href="#Setting-Up-the-View" class="headerlink" title="Setting Up the View"></a>Setting Up the View</h2><p>Now that the UI is done, we can start coding. Select the<code>ViewController.swift</code>file in the project navigator. Let’s start by importing the necessary frameworks above the class.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">import</div><div class="line"> MobileCoreServices</div><div class="line"></div><div class="line">import</div><div class="line"> Vision</div><div class="line"></div><div class="line">import</div><div class="line"> CoreML</div><div class="line"></div><div class="line">import</div><div class="line"> AVKit</div></pre></td></tr></table></figure>
<p>Next add the outlets so we can connect our code to the UI. We need to add 8 outlets in total.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div></pre></td><td class="code"><pre><div class="line">@IBOutlet</div><div class="line"> var </div><div class="line">scoreLabel</div><div class="line">: UILabel!</div><div class="line">    </div><div class="line">@IBOutlet</div><div class="line"> var </div><div class="line">highscoreLabel</div><div class="line">: UILabel!</div><div class="line">    </div><div class="line">@IBOutlet</div><div class="line"> var </div><div class="line">timeLabel</div><div class="line">: UILabel!</div><div class="line">    </div><div class="line">@IBOutlet</div><div class="line"> var </div><div class="line">objectLabel</div><div class="line">: UILabel!</div><div class="line">    </div><div class="line">@IBOutlet</div><div class="line"> var </div><div class="line">startButton</div><div class="line">: UIButton!</div><div class="line">    </div><div class="line">@IBOutlet</div><div class="line"> var </div><div class="line">skipButton</div><div class="line">: UIButton!</div><div class="line">    </div><div class="line">@IBOutlet</div><div class="line"> var </div><div class="line">topView</div><div class="line">: UIView!</div><div class="line">    </div><div class="line">@IBOutlet</div><div class="line"> var </div><div class="line">bottomView</div><div class="line">: UIView!</div></pre></td></tr></table></figure>
<p>Your code should now look like this:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div></pre></td><td class="code"><pre><div class="line">import</div><div class="line">UIKit</div><div class="line">import</div><div class="line">MobileCoreServices</div><div class="line">import</div><div class="line">Vision</div><div class="line">import</div><div class="line">CoreML</div><div class="line">import</div><div class="line">AVKit</div><div class="line">class</div><div class="line">ViewController</div><div class="line">: </div><div class="line">UIViewController</div><div class="line"> &#123;</div><div class="line">    </div><div class="line">@IBOutlet</div><div class="line"> var </div><div class="line">scoreLabel</div><div class="line">: UILabel!</div><div class="line">    </div><div class="line">@IBOutlet</div><div class="line"> var </div><div class="line">highscoreLabel</div><div class="line">: UILabel!</div><div class="line">    </div><div class="line">@IBOutlet</div><div class="line"> var </div><div class="line">timeLabel</div><div class="line">: UILabel!</div><div class="line">    </div><div class="line">@IBOutlet</div><div class="line"> var </div><div class="line">objectLabel</div><div class="line">: UILabel!</div><div class="line">    </div><div class="line">@IBOutlet</div><div class="line"> var </div><div class="line">startButton</div><div class="line">: UIButton!</div><div class="line">    </div><div class="line">@IBOutlet</div><div class="line"> var </div><div class="line">skipButton</div><div class="line">: UIButton!</div><div class="line">    </div><div class="line">@IBOutlet</div><div class="line"> var </div><div class="line">topView</div><div class="line">: UIView!</div><div class="line">    </div><div class="line">@IBOutlet</div><div class="line"> var </div><div class="line">bottomView</div><div class="line">: UIView!</div><div class="line"> </div><div class="line">    override func viewDidLoad() &#123;</div><div class="line">        </div><div class="line">super</div><div class="line">.viewDidLoad</div><div class="line">()</div><div class="line">        </div><div class="line">// Do any additional setup after loading the view, typically from a nib.</div><div class="line"></div><div class="line">    &#125;</div><div class="line"> </div><div class="line">    </div><div class="line">override</div><div class="line">func</div><div class="line">didReceiveMemoryWarning</div><div class="line">() &#123;</div><div class="line">        </div><div class="line">super</div><div class="line">.didReceiveMemoryWarning</div><div class="line">()</div><div class="line">        </div><div class="line">// Dispose of any resources that can be recreated.</div><div class="line"></div><div class="line">    &#125;</div><div class="line"> </div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>Now we need to create some global variables. Let’s add the following variables right under where we added the outlets.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">var</div><div class="line"> cameraLayer: CALayer!</div><div class="line">    </div><div class="line">var</div><div class="line"> gameTimer: Timer!</div><div class="line">    </div><div class="line">var</div><div class="line"> timeRemaining = </div><div class="line">60</div><div class="line">var</div><div class="line"> currentScore = </div><div class="line">0</div><div class="line">var</div><div class="line"> highScore = </div><div class="line">0</div></pre></td></tr></table></figure>
<p>Let me explain each variable one by one:</p>
<p>Line #1:This is the camera layer which we will add to the view later on. It will take up the entire background of the screen.</p>
<p>Line #2:We will initialize the game timer later. We are making it global so we can invalidate it (stop it) from any function.</p>
<p>Line #3:This variable will hold the time remaining in the game and it is initialized to 60 so the game lasts one minute. Feel free to change it to another number if you want the game to be shorter or longer.</p>
<p>Line #4:This will hold the player’s score and increase by one each time they find an object.</p>
<p>Line #5:This will hold the player’s high score. It will be set from UserDefaults each time the app loads.</p>
<p>Putting a lot of code in the<code>viewDidLoad</code>can make our code look messy and unorganized. To fix this, we’re going to add a<code>viewSetup</code>function right after the<code>viewDidLoad</code>to take care of some of the basic UI settings that need to be done at runtime.</p>
<p>Add this into the<code>viewDidLoad</code>:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">viewSetup</div><div class="line">()</div></pre></td></tr></table></figure>
<p>Then add this right after the<code>viewDidLoad</code>:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line">func</div><div class="line">viewSetup</div><div class="line">()</div><div class="line"> &#123;</div><div class="line">        </div><div class="line">    </div><div class="line">let</div><div class="line"> backgroundColor = </div><div class="line">UIColor</div><div class="line">.</div><div class="line">init</div><div class="line">(red: </div><div class="line">255</div><div class="line">/</div><div class="line">255</div><div class="line">, green: </div><div class="line">255</div><div class="line">/</div><div class="line">255</div><div class="line">, blue: </div><div class="line">255</div><div class="line">/</div><div class="line">255</div><div class="line">, alpha: </div><div class="line">0.8</div><div class="line">)</div><div class="line">    topView.backgroundColor = backgroundColor</div><div class="line">    bottomView.backgroundColor = backgroundColor</div><div class="line">    scoreLabel.text = </div><div class="line">&quot;0&quot;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>What this is doing is adding some transparency to the top and bottom views so we can see the live camera feed behind them. We are also setting the score label text to 0.</p>
<p>Your code should now look like this:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div></pre></td><td class="code"><pre><div class="line">import</div><div class="line"> UIKit</div><div class="line"></div><div class="line">import</div><div class="line"> MobileCoreServices</div><div class="line"></div><div class="line">import</div><div class="line"> Vision</div><div class="line"></div><div class="line">import</div><div class="line"> CoreML</div><div class="line"></div><div class="line">import</div><div class="line"> AVKit</div><div class="line"> </div><div class="line"></div><div class="line">class</div><div class="line">ViewController</div><div class="line">: </div><div class="line">UIViewController</div><div class="line">&#123;</div><div class="line">    </div><div class="line">@IBOutlet</div><div class="line">var</div><div class="line"> scoreLabel: </div><div class="line">UILabel</div><div class="line">!</div><div class="line">    </div><div class="line">@IBOutlet</div><div class="line">var</div><div class="line"> highscoreLabel: </div><div class="line">UILabel</div><div class="line">!</div><div class="line">    </div><div class="line">@IBOutlet</div><div class="line">var</div><div class="line"> timeLabel: </div><div class="line">UILabel</div><div class="line">!</div><div class="line">    </div><div class="line">@IBOutlet</div><div class="line">var</div><div class="line"> objectLabel: </div><div class="line">UILabel</div><div class="line">!</div><div class="line">    </div><div class="line">@IBOutlet</div><div class="line">var</div><div class="line"> startButton: </div><div class="line">UIButton</div><div class="line">!</div><div class="line">    </div><div class="line">@IBOutlet</div><div class="line">var</div><div class="line"> skipButton: </div><div class="line">UIButton</div><div class="line">!</div><div class="line">    </div><div class="line">@IBOutlet</div><div class="line">var</div><div class="line"> topView: </div><div class="line">UIView</div><div class="line">!</div><div class="line">    </div><div class="line">@IBOutlet</div><div class="line">var</div><div class="line"> bottomView: </div><div class="line">UIView</div><div class="line">!</div><div class="line">    </div><div class="line">    </div><div class="line">var</div><div class="line"> cameraLayer: </div><div class="line">CALayer</div><div class="line">!</div><div class="line">    </div><div class="line">var</div><div class="line"> gameTimer: </div><div class="line">Timer</div><div class="line">!</div><div class="line">    </div><div class="line">var</div><div class="line"> timeRemaining = </div><div class="line">60</div><div class="line">var</div><div class="line"> currentScore = </div><div class="line">0</div><div class="line">var</div><div class="line"> highScore = </div><div class="line">0</div><div class="line">override</div><div class="line">func</div><div class="line">viewDidLoad</div><div class="line">()</div><div class="line"> &#123;</div><div class="line">        </div><div class="line">super</div><div class="line">.viewDidLoad()</div><div class="line">        </div><div class="line">        viewSetup()</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    </div><div class="line">func</div><div class="line">viewSetup</div><div class="line">()</div><div class="line"> &#123;</div><div class="line">        </div><div class="line">        </div><div class="line">let</div><div class="line"> backgroundColor = </div><div class="line">UIColor</div><div class="line">.</div><div class="line">init</div><div class="line">(red: </div><div class="line">255</div><div class="line">/</div><div class="line">255</div><div class="line">, green: </div><div class="line">255</div><div class="line">/</div><div class="line">255</div><div class="line">, blue: </div><div class="line">255</div><div class="line">/</div><div class="line">255</div><div class="line">, alpha: </div><div class="line">0.8</div><div class="line">)</div><div class="line">        topView.backgroundColor = backgroundColor</div><div class="line">        bottomView.backgroundColor = backgroundColor</div><div class="line">        scoreLabel.text = </div><div class="line">&quot;0&quot;</div><div class="line"></div><div class="line">    &#125;</div><div class="line"> </div><div class="line">    </div><div class="line">override</div><div class="line">func</div><div class="line">didReceiveMemoryWarning</div><div class="line">()</div><div class="line"> &#123;</div><div class="line">        </div><div class="line">super</div><div class="line">.didReceiveMemoryWarning()</div><div class="line">        </div><div class="line">// Dispose of any resources that can be recreated.</div><div class="line"></div><div class="line">    &#125;</div><div class="line"> </div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="Setting-Up-the-Camera"><a href="#Setting-Up-the-Camera" class="headerlink" title="Setting Up the Camera"></a>Setting Up the Camera</h2><p>Now it’s time to setup the live camera feed which will the entire background of the view. Before we start adding code, we need to ask the user’s permission to use the camera. iOS will take care of most of the work related to this. However, we need to provide a description of why we need the camera.</p>
<p>Head over to the<code>info.plist</code>file in the project navigator. Add a row with the key_Privacy – Camera Usage Description_and type a description in the value.</p>
<p><img src="http://img2.tuicool.com/uMv63uz.png!web" alt=""></p>
<p>Now it’s time to add code. To keep things organized, we will add the code to prepare the camera in a function called<code>cameraSetup</code>.</p>
<p>Add the following to the<code>viewDidLoad</code>under<code>viewSetup</code>method call:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">cameraSetup</div><div class="line">()</div></pre></td></tr></table></figure>
<p>Next, add the following function after the<code>viewSetup()</code>function:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">func</div><div class="line">cameraSetup</div><div class="line">()</div><div class="line"> &#123;</div><div class="line">        </div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>Now we are going to create something called<code>AVCaptureSession</code>which will make it possible to have a real time capture. Add the following to the<code>cameraSetup</code>function:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">let</div><div class="line"> captureSession = AVCaptureSession()</div><div class="line">captureSession.sessionPreset = AVCaptureSession.Preset.photo</div><div class="line"></div><div class="line">let</div><div class="line"> backCamera = AVCaptureDevice.</div><div class="line">default</div><div class="line">(.builtInWideAngleCamera, </div><div class="line">for</div><div class="line">: .video, position: .back)!</div><div class="line"></div><div class="line">let</div><div class="line"> input = </div><div class="line">try</div><div class="line">! AVCaptureDeviceInput(device: backCamera)</div><div class="line">captureSession.addInput(input)</div></pre></td></tr></table></figure>
<p>So what is going on here?</p>
<p>Line #1:We create the<code>AVCaptureSession</code>constant.</p>
<p>Line #2:We set the preset for the caption which pretty much sets the quality for the output. We are setting it to photo for it to be high resolution.</p>
<p>Line #3:We create an AVCaptureDevice which is the back camera. There is no reason to use the front camera for this game.</p>
<p>Line #4:We specify that we are using the back camera by referencing the backCamera AVCaptureDevice.</p>
<p>Line #5:We are adding the backCamera device as the input for the captureSession.</p>
<p>Remember the variable we made earlier called<code>cameraLayer</code>? Now it’s time to use it. We’re going to be adding the camera layer as a sublayer and setting it to the view controller’s size.</p>
<p>Add the following after the code we just added for the capture session:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">cameraLayer = AVCaptureVideoPreviewLayer(session: captureSession)</div><div class="line"></div><div class="line">view</div><div class="line">.layer.addSublayer(cameraLayer)</div><div class="line">cameraLayer.frame = </div><div class="line">view</div><div class="line">.bounds</div><div class="line"> </div><div class="line"></div><div class="line">view</div><div class="line">.bringSubview(toFron</div><div class="line">t:</div><div class="line"> topView)</div><div class="line"></div><div class="line">view</div><div class="line">.bringSubview(toFron</div><div class="line">t:</div><div class="line"> bottomView)</div></pre></td></tr></table></figure>
<p>Line #1-3:Here we are initializing the<code>cameraLayer</code>as an<code>AVCaptureVideoPreviewLayer</code>and setting the setting parameter to<code>captureSession</code>. After that, we add it to the view as a sublayer and set the size to the size of the entire view controller.</p>
<p>Line #5-6:Here we are bringing the top and bottom views to the front. This way, the camera layer doesn’t cover them.</p>
<p>To finish off this function, add the following code under what we just added:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">let videoOutput = AVCaptureVideoDataOutput()</div><div class="line">videoOutput.setSampleBufferDelegate(self, </div><div class="line">queue:</div><div class="line"> DispatchQueue(</div><div class="line">label:</div><div class="line">&quot;buffer delegate&quot;</div><div class="line">))</div><div class="line">videoOutput.recommendedVideoSettings(</div><div class="line">forVideoCodecType:</div><div class="line"> .jpeg, </div><div class="line">assetWriterOutputFileType:</div><div class="line"> .mp4)</div><div class="line"> </div><div class="line">captureSession.addOutput(videoOutput)</div><div class="line">captureSession.sessionPreset = .high</div><div class="line">captureSession.startRunning()</div></pre></td></tr></table></figure>
<p>Line #1-3:Here we are creating the data output and specifying the output settings. You will see an error here but don’t worry about it. We will take care of that soon.</p>
<p>Line #5-7:Finally, we add the video output to the capture session and start running it.</p>
<p>The<code>cameraSetup</code>function should now look like this:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div></pre></td><td class="code"><pre><div class="line">func cameraSetup() &#123;</div><div class="line">    </div><div class="line">let</div><div class="line"> captureSession = AVCaptureSession()</div><div class="line">    captureSession.sessionPreset = AVCaptureSession.Preset.photo</div><div class="line">        </div><div class="line">    </div><div class="line">let</div><div class="line"> backCamera = AVCaptureDevice.default(.builtInWideAngleCamera, </div><div class="line">for</div><div class="line">: .video, position: .back)!</div><div class="line">    </div><div class="line">let</div><div class="line">input</div><div class="line"> = try! AVCaptureDeviceInput(device: backCamera)</div><div class="line">        </div><div class="line">    captureSession.addInput(</div><div class="line">input</div><div class="line">)</div><div class="line">        </div><div class="line">    cameraLayer = AVCaptureVideoPreviewLayer(session: captureSession)</div><div class="line">    </div><div class="line">view</div><div class="line">.layer.addSublayer(cameraLayer)</div><div class="line">    cameraLayer.frame = </div><div class="line">view</div><div class="line">.bounds</div><div class="line">    </div><div class="line">view</div><div class="line">.bringSubview(toFron</div><div class="line">t:</div><div class="line"> topView)</div><div class="line">    </div><div class="line">view</div><div class="line">.bringSubview(toFron</div><div class="line">t:</div><div class="line"> bottomView)</div><div class="line">        </div><div class="line">    </div><div class="line">let</div><div class="line"> videoOutput = AVCaptureVideoDataOutput()</div><div class="line">    videoOutput.setSampleBufferDelegate(self, queue: DispatchQueue(labe</div><div class="line">l:</div><div class="line">&quot;buffer delegate&quot;</div><div class="line">))</div><div class="line">    videoOutput.recommendedVideoSettings(forVideoCodecType: .jpeg, assetWriterOutputFileType: .mp4)</div><div class="line">        </div><div class="line">    captureSession.addOutput(videoOutput)</div><div class="line">    captureSession.sessionPreset = .high</div><div class="line">    captureSession.startRunning()</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="Adding-the-Core-ML-Data-Model"><a href="#Adding-the-Core-ML-Data-Model" class="headerlink" title="Adding the Core ML Data Model"></a>Adding the Core ML Data Model</h2><p>After setting up the UI and camera, it is time to work with Core ML for object recognition.</p>
<p>Before we continue coding, we need to add the Core ML data model into the project. In order to use Core ML, you need to have a pre-trained model. While it is possible to build your own model for this game, we will use a model available on Apple’s developer website.</p>
<p>Go to<a href="https://developer.apple.com/machine-learning/" target="_blank" rel="external">“Apple’s machine learning website”</a>and scroll to the bottom. Here you will find four different pre-trained Core ML models available for download.</p>
<p><img src="http://img0.tuicool.com/zI7bAvr.png!web" alt=""></p>
<p>For this game, we will be using the_Inception V3_model. Once you have the model downloaded, drag it into the Xcode project’s project navigator. Click on it and observe what is displayed.</p>
<p><img src="http://img0.tuicool.com/URbymuU.png!web" alt=""></p>
<p>Note:Please make sure that Target Membership of the project is selected, otherwise, your app will not be able to access the file.</p>
<p>As you can see, this model has a type of a<em>Neural Network Classifier</em>. It takes in an image size 299×299 and outputs two things. A dictionary which is the probability or confidence level for the calculations of the model, and a string with the actual name of the object in the picture.</p>
<h2 id="Predicting-the-Object"><a href="#Predicting-the-Object" class="headerlink" title="Predicting the Object"></a>Predicting the Object</h2><p>Now our little field trip is over and it’s time go to back to the<code>View Controller</code>and add two awesome functions that make the magic happen.</p>
<p>First we’re going to add the<code>predict</code>function. Add the following code after the<code>cameraSetup</code>function:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line">func</div><div class="line">predict</div><div class="line">(image: CGImage)</div><div class="line"> &#123;</div><div class="line">    </div><div class="line">let</div><div class="line"> model = </div><div class="line">try</div><div class="line">! </div><div class="line">VNCoreMLModel</div><div class="line">(</div><div class="line">for</div><div class="line">: </div><div class="line">Inceptionv3</div><div class="line">().model)</div><div class="line">    </div><div class="line">let</div><div class="line"> request = </div><div class="line">VNCoreMLRequest</div><div class="line">(model: model, completionHandler: results)</div><div class="line">    </div><div class="line">let</div><div class="line"> handler = </div><div class="line">VNSequenceRequestHandler</div><div class="line">()</div><div class="line">    </div><div class="line">try</div><div class="line">! handler.perform([request], on: image)</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>Don’t let its size fool you, this is a powerful function. Here is what the code does:</p>
<p>Line #2:We create a model constant for the Inception V3 model.</p>
<p>Line #3:We create a<code>VNCoreMLRequest</code>which will call the results function (we are writing that next, so don’t worry about the error.)</p>
<p>Line #4-5:We create a constant for a<code>VNSequenceRequestHandler</code>object and then perform it with the image passed into the predict function via its parameter.</p>
<p>Next, it’s time to add the<code>results</code>function which will handle the results of the<code>predict</code>method and keep the game moving forward.</p>
<p>Add the following code after the<code>predict</code>function:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div></pre></td><td class="code"><pre><div class="line">func</div><div class="line">results</div><div class="line">(request: VNRequest, error: Error?)</div><div class="line"> &#123;</div><div class="line">    </div><div class="line">guard</div><div class="line">let</div><div class="line"> results = request.results </div><div class="line">as</div><div class="line">? [</div><div class="line">VNClassificationObservation</div><div class="line">] </div><div class="line">else</div><div class="line"> &#123;</div><div class="line">        </div><div class="line">print</div><div class="line">(</div><div class="line">&quot;No result found&quot;</div><div class="line">)</div><div class="line">        </div><div class="line">return</div><div class="line"></div><div class="line">    &#125;</div><div class="line">        </div><div class="line">    </div><div class="line">guard</div><div class="line"> results.</div><div class="line">count</div><div class="line"> != </div><div class="line">0</div><div class="line">else</div><div class="line"> &#123;</div><div class="line">        </div><div class="line">print</div><div class="line">(</div><div class="line">&quot;No result found&quot;</div><div class="line">)</div><div class="line">        </div><div class="line">return</div><div class="line"></div><div class="line">    &#125;</div><div class="line">        </div><div class="line">    </div><div class="line">let</div><div class="line"> highestConfidenceResult = results.first!</div><div class="line">    </div><div class="line">let</div><div class="line"> identifier = highestConfidenceResult.identifier.</div><div class="line">contains</div><div class="line">(</div><div class="line">&quot;, &quot;</div><div class="line">) ? </div><div class="line">String</div><div class="line">(describing: highestConfidenceResult.identifier.</div><div class="line">split</div><div class="line">(separator: </div><div class="line">&quot;,&quot;</div><div class="line">).first!) : highestConfidenceResult.identifier</div><div class="line">        </div><div class="line">    </div><div class="line">if</div><div class="line"> identifier == objectLabel.text! &#123;</div><div class="line">        currentScore += </div><div class="line">1</div><div class="line">/</div><div class="line">extObject()</div><div class="line"></div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>This function is called after a prediction. It first has two guards to make sure that there is actually a result. If there is, it will take the result with the highest confidence and put it into its own string called<code>identifier</code>. Then the function will check to see if the identifier is the same as the object label’s text. If they are equal, that means the player found the correct object and the score will be increased. There is also a function call for<code>nextObject</code>which is commented out. We have not yet created that function so leave it that way for now.</p>
<p>Okay! So we are done with the majority of the Core ML code for the game. Isn’t that easy? Your<code>predict</code>and<code>results</code>functions should look like this:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div></pre></td><td class="code"><pre><div class="line">func</div><div class="line">predict</div><div class="line">(image: CGImage)</div><div class="line"> &#123;</div><div class="line">    </div><div class="line">let</div><div class="line"> model = </div><div class="line">try</div><div class="line">! </div><div class="line">VNCoreMLModel</div><div class="line">(</div><div class="line">for</div><div class="line">: </div><div class="line">Inceptionv3</div><div class="line">().model)</div><div class="line">    </div><div class="line">let</div><div class="line"> request = </div><div class="line">VNCoreMLRequest</div><div class="line">(model: model, completionHandler: results)</div><div class="line">    </div><div class="line">let</div><div class="line"> handler = </div><div class="line">VNSequenceRequestHandler</div><div class="line">()</div><div class="line">    </div><div class="line">try</div><div class="line">! handler.perform([request], on: image)</div><div class="line">&#125;</div><div class="line">    </div><div class="line"></div><div class="line">func</div><div class="line">results</div><div class="line">(request: VNRequest, error: Error?)</div><div class="line"> &#123;</div><div class="line">    </div><div class="line">guard</div><div class="line">let</div><div class="line"> results = request.results </div><div class="line">as</div><div class="line">? [</div><div class="line">VNClassificationObservation</div><div class="line">] </div><div class="line">else</div><div class="line"> &#123;</div><div class="line">        </div><div class="line">print</div><div class="line">(</div><div class="line">&quot;No result found&quot;</div><div class="line">)</div><div class="line">        </div><div class="line">return</div><div class="line"></div><div class="line">    &#125;</div><div class="line">        </div><div class="line">        </div><div class="line">    </div><div class="line">guard</div><div class="line"> results.</div><div class="line">count</div><div class="line"> != </div><div class="line">0</div><div class="line">else</div><div class="line"> &#123;</div><div class="line">        </div><div class="line">print</div><div class="line">(</div><div class="line">&quot;No result found&quot;</div><div class="line">)</div><div class="line">        </div><div class="line">return</div><div class="line"></div><div class="line">    &#125;</div><div class="line">        </div><div class="line">    </div><div class="line">let</div><div class="line"> highestConfidenceResult = results.first!</div><div class="line">    </div><div class="line">let</div><div class="line"> identifier = highestConfidenceResult.identifier.</div><div class="line">contains</div><div class="line">(</div><div class="line">&quot;, &quot;</div><div class="line">) ? </div><div class="line">String</div><div class="line">(describing: highestConfidenceResult.identifier.</div><div class="line">split</div><div class="line">(separator: </div><div class="line">&quot;,&quot;</div><div class="line">).first!) : highestConfidenceResult.identifier</div><div class="line">        </div><div class="line">    </div><div class="line">if</div><div class="line"> identifier == objectLabel.text! &#123;</div><div class="line">        currentScore += </div><div class="line">1</div><div class="line">/</div><div class="line">extObject()</div><div class="line"></div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>One more thing we need to do before we are done with the Core ML part of this game. We need to add an extension to call the predict function. Add the following code the the very bottom of the file, after the last bracket:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div></pre></td><td class="code"><pre><div class="line">extension</div><div class="line">ViewController</div><div class="line">: </div><div class="line">AVCaptureVideoDataOutputSampleBufferDelegate</div><div class="line">&#123;</div><div class="line">    </div><div class="line">func</div><div class="line">captureOutput</div><div class="line">(</div><div class="line">_</div><div class="line"> output: AVCaptureOutput, didOutput sampleBuffer: CMSampleBuffer, from connection: AVCaptureConnection)</div><div class="line"> &#123;</div><div class="line">        </div><div class="line">guard</div><div class="line">let</div><div class="line"> pixelBuffer = </div><div class="line">CMSampleBufferGetImageBuffer</div><div class="line">(sampleBuffer) </div><div class="line">else</div><div class="line"> &#123; </div><div class="line">fatalError</div><div class="line">(</div><div class="line">&quot;pixel buffer is nil&quot;</div><div class="line">) &#125;</div><div class="line">        </div><div class="line">let</div><div class="line"> ciImage = </div><div class="line">CIImage</div><div class="line">(cvPixelBuffer: pixelBuffer)</div><div class="line">        </div><div class="line">let</div><div class="line"> context = </div><div class="line">CIContext</div><div class="line">(options: </div><div class="line">nil</div><div class="line">)</div><div class="line">        </div><div class="line">        </div><div class="line">guard</div><div class="line">let</div><div class="line"> cgImage = context.createCGImage(ciImage, from: ciImage.extent) </div><div class="line">else</div><div class="line"> &#123; </div><div class="line">fatalError</div><div class="line">(</div><div class="line">&quot;cg image&quot;</div><div class="line">) &#125;</div><div class="line">        </div><div class="line">let</div><div class="line"> uiImage = </div><div class="line">UIImage</div><div class="line">(cgImage: cgImage, scale: </div><div class="line">1.0</div><div class="line">, orientation: .leftMirrored)</div><div class="line">        </div><div class="line">        </div><div class="line">DispatchQueue</div><div class="line">.main.sync &#123;</div><div class="line">            predict(image: uiImage.cgImage!)</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>This extension adopts the<code>AVCaptureVideoDataOutputSampleBufferDelegate</code>protocol to process the captured video sample buffers, and creates a CGImage from the video feed. With the images, we pass it to the predict function. You should now be able to build your project without any errors. This is how we continuously capture video and pass it to the built-in machine learning model for object recognition.</p>
<h2 id="Preparing-an-Array-of-Objects-for-the-Game"><a href="#Preparing-an-Array-of-Objects-for-the-Game" class="headerlink" title="Preparing an Array of Objects for the Game"></a>Preparing an Array of Objects for the Game</h2><p>In order for the game to give the player random objects to look for, we have to prepare a list of objects to choose from. To do this, we will create an array with the names of a bunch of objects. Later we will create a function to choose an element from this array randomly and tell the player to go find it.</p>
<p>This is going to be a somewhat lengthy array, so for organization purposes, I have decided to create it in a struct in a separate Swift file. Right click in the project navigator and choose<code>New File...</code>.</p>
<p>Now select the Swift File option and click<em>next</em>. Name the file “Objects” and click<em>create</em>. Place the following code snippet into the file after the<code>import</code>statement:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div></pre></td><td class="code"><pre><div class="line">struct</div><div class="line">Objects</div><div class="line"> &#123;</div><div class="line">    </div><div class="line">let</div><div class="line"> objectArray = [</div><div class="line">&quot;computer keyboard&quot;</div><div class="line">, </div><div class="line">&quot;mouse&quot;</div><div class="line">, </div><div class="line">&quot;iPod&quot;</div><div class="line">, </div><div class="line">&quot;printer&quot;</div><div class="line">, </div><div class="line">&quot;digital clock&quot;</div><div class="line">, </div><div class="line">&quot;digital watch&quot;</div><div class="line">, </div><div class="line">&quot;backpack&quot;</div><div class="line">, </div><div class="line">&quot;ping-pong ball&quot;</div><div class="line">, </div><div class="line">&quot;envelope&quot;</div><div class="line">, </div><div class="line">&quot;water bottle&quot;</div><div class="line">, </div><div class="line">&quot;combination lock&quot;</div><div class="line">, </div><div class="line">&quot;lampshade&quot;</div><div class="line">, </div><div class="line">&quot;switch&quot;</div><div class="line">, </div><div class="line">&quot;lighter&quot;</div><div class="line">, </div><div class="line">&quot;pillow&quot;</div><div class="line">, </div><div class="line">&quot;spider web&quot;</div><div class="line">, </div><div class="line">&quot;sandal&quot;</div><div class="line">, </div><div class="line">&quot;vacuum&quot;</div><div class="line">, </div><div class="line">&quot;wall clock&quot;</div><div class="line">, </div><div class="line">&quot;bath towel&quot;</div><div class="line">, </div><div class="line">&quot;wallet&quot;</div><div class="line">, </div><div class="line">&quot;poster&quot;</div><div class="line">, </div><div class="line">&quot;chocolate&quot;</div><div class="line">]</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>Here I have created an array called<code>objectArray</code>of some common, random, household objects that the Core ML model looks for. These are just a select few so feel free to add more.</p>
<p>Now go back to<code>ViewController.swift</code>before we jump into the next step.</p>
<h2 id="Saving-the-Score"><a href="#Saving-the-Score" class="headerlink" title="Saving the Score"></a>Saving the Score</h2><p>We will be saving the player’s highest score using<code>UserDefaults</code>. This means that we need a setter function to save the score into UserDefaults and a getter function to retrieve it.</p>
<p>Add the following two functions to your code after the results function:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div></pre></td><td class="code"><pre><div class="line">func</div><div class="line">getHighScore</div><div class="line">()</div><div class="line"> &#123;</div><div class="line">    </div><div class="line">if</div><div class="line">let</div><div class="line"> score = </div><div class="line">UserDefaults</div><div class="line">.standard.object(forKey: </div><div class="line">&quot;highscore&quot;</div><div class="line">) &#123;</div><div class="line">        highscoreLabel.text = </div><div class="line">&quot;</div><div class="line">\(score)</div><div class="line">&quot;</div><div class="line"></div><div class="line">        highScore = score </div><div class="line">as</div><div class="line">! </div><div class="line">Int</div><div class="line"></div><div class="line">    &#125;</div><div class="line">    </div><div class="line">else</div><div class="line"> &#123;</div><div class="line">        </div><div class="line">print</div><div class="line">(</div><div class="line">&quot;No highscore, setting to 0.&quot;</div><div class="line">)</div><div class="line">        highscoreLabel.text = </div><div class="line">&quot;0&quot;</div><div class="line"></div><div class="line">        highScore = </div><div class="line">0</div><div class="line"></div><div class="line">        setHighScore(score: </div><div class="line">0</div><div class="line">)</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line">    </div><div class="line"></div><div class="line">func</div><div class="line">setHighScore</div><div class="line">(score: Int)</div><div class="line"> &#123;</div><div class="line">    </div><div class="line">UserDefaults</div><div class="line">.standard.</div><div class="line">set</div><div class="line">(score, forKey: </div><div class="line">&quot;highscore&quot;</div><div class="line">)</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>The first function,<code>getHighScore</code>, uses an<code>if let</code>statement to check if there is already a saved score in UserDefaults. If there is, it sets the<code>highScore</code>variable to it, if not, it sets the<code>highScore</code>to 0. The second function,<code>setHighScore</code>, simply sets the current score as the high score. We will call this when the player beats their score.</p>
<p>The<code>getHighScore</code>function needs to be called when the app loads up. This way, the player can see their high score when they open the app.</p>
<p>Add<code>getHighScore()</code>to the<code>viewDidLoad</code>under the<code>cameraSetup</code>function call. Your<code>ViewDidLoad</code>should look like this:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">override</div><div class="line">func</div><div class="line">viewDidLoad</div><div class="line">() &#123;</div><div class="line">    </div><div class="line">super</div><div class="line">.viewDidLoad</div><div class="line">()</div><div class="line">        </div><div class="line">    </div><div class="line">viewSetup</div><div class="line">()</div><div class="line">    </div><div class="line">cameraSetup</div><div class="line">()</div><div class="line">    </div><div class="line">getHighScore</div><div class="line">()</div><div class="line"> </div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="Handling-the-Game-Play"><a href="#Handling-the-Game-Play" class="headerlink" title="Handling the Game Play"></a>Handling the Game Play</h2><p>Now it’s time to add a number of different functions to pull everything we have already done together and make this app work. We will start by adding functions to choose a random object from the objects array and handle when the game ends.</p>
<p>Add the following to your code after the<code>setHighScore</code>method:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div></pre></td><td class="code"><pre><div class="line">//1</div><div class="line">func</div><div class="line">endGame</div><div class="line">()</div><div class="line"> &#123;</div><div class="line">        </div><div class="line">//2</div><div class="line"></div><div class="line">        startButton.isHidden = </div><div class="line">false</div><div class="line"></div><div class="line">        skipButton.isHidden = </div><div class="line">true</div><div class="line"></div><div class="line">        objectLabel.text = </div><div class="line">&quot;Game Over&quot;</div><div class="line">//3</div><div class="line">if</div><div class="line"> currentScore </div><div class="line">&gt;</div><div class="line"> highScore &#123;</div><div class="line">            setHighScore(score: currentScore)</div><div class="line">            highscoreLabel.text = </div><div class="line">&quot;</div><div class="line">\(currentScore)</div><div class="line">&quot;</div><div class="line"></div><div class="line">        &#125;</div><div class="line">        </div><div class="line">//4</div><div class="line"></div><div class="line">        currentScore = </div><div class="line">0</div><div class="line"></div><div class="line">        timeRemaining = </div><div class="line">60</div><div class="line"></div><div class="line">        </div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    </div><div class="line">//5</div><div class="line">func</div><div class="line">nextObject</div><div class="line">()</div><div class="line"> &#123;</div><div class="line">        </div><div class="line">//6</div><div class="line">let</div><div class="line"> allObjects = </div><div class="line">Objects</div><div class="line">().objectArray</div><div class="line">        </div><div class="line">//7</div><div class="line">let</div><div class="line"> randomObjectIndex = </div><div class="line">Int</div><div class="line">(arc4random_uniform(</div><div class="line">UInt32</div><div class="line">(allObjects.</div><div class="line">count</div><div class="line">)))</div><div class="line">        </div><div class="line">//8</div><div class="line">guard</div><div class="line"> allObjects[randomObjectIndex] != objectLabel.text </div><div class="line">else</div><div class="line"> &#123;</div><div class="line">            nextObject()</div><div class="line">            </div><div class="line">return</div><div class="line"></div><div class="line">        &#125;</div><div class="line">        </div><div class="line">//9</div><div class="line"></div><div class="line">        objectLabel.text = allObjects[randomObjectIndex]</div><div class="line">        scoreLabel.text = </div><div class="line">&quot;</div><div class="line">\(currentScore)</div><div class="line">&quot;</div><div class="line"></div><div class="line">    &#125;</div></pre></td></tr></table></figure>
<p>So what exactly are these functions doing you ask?</p>
<ol>
<li>The<br><code>endGame</code><br>function is called when the timer is up.</li>
<li>We first unhide the start button and hide the skip button since it is no longer needed when the game is not in play. We also set the object label’s text to say “Game Over”.</li>
<li>We check if the score that the player just got is higher than the high score. If it is, than we call the<br><code>setHighScore</code><br>function.</li>
<li>We reset the variables for the next game.</li>
<li>The<br><code>nextObject</code><br>function is called when the player either finds the correct object or taps the skip button. This function will take a random object from the object array and set it to the objects label so the player knows to find it.</li>
<li>We create an instance of the objectArray.</li>
<li>We generate a random number from 0 to the length of the object array.</li>
<li>We use a guard to make sure that the random number that was just chosen is not the same as the last one. This way, the player will not get the same object twice in a row.</li>
<li>We set the object label to the random object and make sure the score label is displaying the correct score.</li>
</ol>
<p>Important:Now that we have created the_nextObject_function, make sure you go back up to the_results_function and uncomment the function call for<em>nextObject</em>.</p>
<p>Next, we need to add the actions that we will connect to the play and skip buttons. Add the following code after the<code>nextObject</code>function:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div></pre></td><td class="code"><pre><div class="line">@IBAction</div><div class="line">func</div><div class="line">startButtonTapped</div><div class="line">()</div><div class="line"> &#123;</div><div class="line">    </div><div class="line">//1</div><div class="line"></div><div class="line">    gameTimer = </div><div class="line">Timer</div><div class="line">.scheduledTimer(withTimeInterval: </div><div class="line">1</div><div class="line">, repeats: </div><div class="line">true</div><div class="line">, block: &#123; (gameTimer) </div><div class="line">in</div><div class="line">//2</div><div class="line">guard</div><div class="line">self</div><div class="line">.timeRemaining != </div><div class="line">0</div><div class="line">else</div><div class="line"> &#123;</div><div class="line">            gameTimer.invalidate()</div><div class="line">            </div><div class="line">self</div><div class="line">.endGame()</div><div class="line">            </div><div class="line">return</div><div class="line"></div><div class="line">        &#125;</div><div class="line">            </div><div class="line">        </div><div class="line">self</div><div class="line">.timeRemaining -= </div><div class="line">1</div><div class="line">self</div><div class="line">.timerLabel.text = </div><div class="line">&quot;</div><div class="line">\(</div><div class="line">self</div><div class="line">.timeRemaining)</div><div class="line">&quot;</div><div class="line"></div><div class="line">    &#125;)</div><div class="line">    </div><div class="line">//3  </div><div class="line"></div><div class="line">    startButton.isHidden = </div><div class="line">true</div><div class="line"></div><div class="line">    skipButton.isHidden = </div><div class="line">false</div><div class="line"></div><div class="line">    nextObject()</div><div class="line">        </div><div class="line">&#125;</div><div class="line"> </div><div class="line"></div><div class="line">//4  </div><div class="line">@IBAction</div><div class="line">func</div><div class="line">skipButtonTapped</div><div class="line">()</div><div class="line"> &#123;</div><div class="line">    nextObject()</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>So what did we do here?</p>
<ol>
<li>First we added an action that will be called when the start button is tapped. Here we initialize the gameTimer using the new method that takes a block to invoke rather than a selector which makes the code much cleaner and more organized.</li>
<li>We add a guard to make sure that there is time left in the game. If there is not, we invalidate the timer and run the<br><code>endGame</code><br>function. If there is time, we subtract one from the time remaining and update the timer label.</li>
<li>Here we hide the startButton, show the skip button, and call the<br><code>nextObject</code><br>function to show the first object to find.</li>
<li>We add an action to connect to the skip button which simply calls for a new object.</li>
</ol>
<p>Important:Now, make sure you go to your storyboard and connect all outlets an actions to the proper elements.</p>
<h2 id="Playing-the-Game"><a href="#Playing-the-Game" class="headerlink" title="Playing the Game"></a>Playing the Game</h2><p>Now it’s finally time to build and run your game. Once loaded, tap the play button and point your phone at the object stated at the top. See how high is your score! You might need to wait a second for the app to focus before it can recognize an object. Also, please note that if you have an older device such as an iPhone 5s or 6, the app might run really slow because of the power and resources that Core ML needs. As I testedt, the game ran great on my iPhone 7. But when I tried it on my iPhone 5s, it was really slow and laggy.</p>
<p><img src="http://img2.tuicool.com/6NnMr2V.png!web" alt=""></p>
<p>In case you were wondering, this model cannot recognize the Nintendo Switch!</p>
<h2 id="Recap"><a href="#Recap" class="headerlink" title="Recap"></a>Recap</h2><p>I hope you had fun creating this game and have some more insight on how much you can do with Core ML. The game is not perfect, there are a lot of things you can improve (say, play a sound when the object is matched). But this is just a simple example showing how you can apply Core ML. So get creative and see how you can improve upon it.</p>
<p>For reference, the complete demo app is available on<a href="https://github.com/appcoda/CoreMLScavenge" target="_blank" rel="external">GitHub</a>.</p>
<p>For more details about the Core ML framework, you can refer to the<a href="https://developer.apple.com/documentation/coreml" target="_blank" rel="external">official Core ML documentation</a>.</p>
<p>Do you like this tutorial? Feel free to leave a comment and let me know.</p>
<p>Source: <a href="http://www.tuicool.com/articles/hit/QbeiquA" target="_blank" rel="external">http://www.appcoda.com/coreml-game/</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;WWDC 2017 brought many amazing and powerful APIs to iOS. Among the most popular is&lt;a href=&quot;https://developer.apple.com/documentation/core
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Small Elements, Big Impact: Types and Functions of UI Icons.</title>
    <link href="https://gmagon.com/blog/2017/07/06/small-elements-big-impact-types-and-functions-of-ui-icons/"/>
    <id>https://gmagon.com/blog/2017/07/06/small-elements-big-impact-types-and-functions-of-ui-icons/</id>
    <published>2017-07-06T00:00:00.000Z</published>
    <updated>2017-07-06T10:09:59.045Z</updated>
    
    <content type="html"><![CDATA[<p>Icons in user interfaces are the elements that cannot be overestimated. Small and meaningful, they solve numerous problems. They become little keys to usability and intuitive navigation. And only designers know how much time and effort is needed to make them simple, helpful and expressive.</p>
<p>Guru of user experience design Steve  Jobs said: «Details matter, it’s worth waiting to get it right.» Obviously, icons are on the top of details making interface usable and navigable. So, today let’s discuss what are their types and how they can be used in interfaces.</p>
<h2 id="Definition"><a href="#Definition" class="headerlink" title="Definition"></a>Definition</h2><p>In general terms, an icon can be defined as an image which has a high symbolic value and is used for the purpose of communication. Icons present signs which are informative and support data exchange between the informer and addressee alongside with words and sentences: while copy is served with letters or characters, icons communicate via the images showing pictorial resemblance with an object of the physical world. In computing and digital design, icons are pictograms or ideograms used in the web or mobile interface to support its usability and provide the successful flow of human-computer interaction.</p>
<p>Diving into the benefits of icons, one of the most important among them is the ability to replace the text. In one of our earlier articles, we gave details about the<a href="http://tubikstudio.com/visual-perception-icons-vs-copy-in-ui/" target="_blank" rel="external">relations of copy and icons</a>and their influence on usability. The process of the research showed that usage of recognizable and clear icons had a great potential in strengthening navigation as most people perceive images faster than words. However, even the slightest misperception can become the reason of poor UX so the solutions on the type of icons should be carefully tested to reach the good balance of icons and copy for a particular target audience.</p>
<p><img src="http://img0.tuicool.com/7vIF7bn.jpg!web" alt=""></p>
<h2 id="History"><a href="#History" class="headerlink" title="History"></a>History</h2><p>Obviously, icons weren’t invented by interface designers. As an object of communication, they have a long and diverse history rooting in ancient times. They are found in maps, signs, schemes, manuals and many other sources of information. However, with the advent of new technologies and graphical user interfaces, icons experienced the new twist of progress. Historically, Xerox is mentioned in credits for creating the first icons for a graphical UI in the early 1970s: the icons were implemented in a machine called Xerox Alto which was very expensive and didn’t really go to the wide masses. Still, that was a beginning of a long story: in 1981, Xerox Star was released and it’s referred to as the first consumer computer which used icons as a part of its interface. In particular, it applied the icons of folders and trash bins which have been used so far.</p>
<p><img src="http://img0.tuicool.com/rIRVjmb.png!web" alt=""></p>
<p><a href="https://www.interaction-design.org/literature/article/a-brief-history-of-the-origin-of-the-computer-icon" target="_blank" rel="external"><em>Source</em></a></p>
<p>Another milestone easily remembered on this way is presented with the color icons Apple revealed first in 1991 and then later with their further updates for Macintosh. They featured another approach to the style when icons combined functionality and informative capacity with attractive and harmonic appearance.</p>
<p><img src="http://img2.tuicool.com/vANvaqY.png!web" alt=""></p>
<p><a href="https://www.interaction-design.org/literature/article/a-brief-history-of-the-origin-of-the-computer-icon" target="_blank" rel="external"><em>Source</em></a></p>
<p>These days icons are presented in digital design with numerous packs and sets in all the themes and styles possible. Although there are many ready-made packs, the database of icons is growing all the time in search of new solutions appealing to users.</p>
<p>Talking about the classification of icons, we can mark out several aspects of grouping them on types.</p>
<h2 id="Types-based-on-functions"><a href="#Types-based-on-functions" class="headerlink" title="Types based on functions"></a>Types based on functions</h2><h3 id="Clarifying-icons"><a href="#Clarifying-icons" class="headerlink" title="Clarifying icons"></a>Clarifying icons</h3><p>These are the icons aimed at explanation. They are visual markers explaining particular features or marking out categories of content. In some cases, they are not the layout elements of direct interaction; also, you can often find them in combination with copy supporting their meaning. This trick activates multiple elements of perception in one interaction providing better recognizability for call-to-action elements. People, who instantly understand the symbol transferred with the icon, won’t pay big attention to the copy. The same will happen to those who have problems with fast copy recognition. However, using the copy together with the icon decreases the risk of misunderstanding or wrong interactions for people who can possibly misinterpret the meaning of the image.</p>
<p><img src="http://img1.tuicool.com/3AZbqaf.png!web" alt=""></p>
<p><a href="https://dribbble.com/shots/3440889-Homey-App" target="_blank" rel="external"><em>Homey App</em></a></p>
<p><img src="http://img0.tuicool.com/rUjuUjj.png!web" alt=""></p>
<p>Category icons forSaily app</p>
<h3 id="Interactive-icons"><a href="#Interactive-icons" class="headerlink" title="Interactive icons"></a>Interactive icons</h3><p>The icons of this type are directly involved into interaction process and are the core supporters of navigation. They are clickable or tappable and respond to the users request doing the action symbolized by them. Their main goal is to inform users about the functions or featuresbehindthe buttons, controls and any other elements of interaction.</p>
<p><img src="http://img1.tuicool.com/AJ3a6nA.gif" alt=""></p>
<p><a href="https://dribbble.com/shots/2071319-GIF-of-the-Tapbar-Interactions" target="_blank" rel="external"><em>Tab Bar interactions</em></a></p>
<p><img src="http://img2.tuicool.com/z6NnMfE.gif" alt=""></p>
<p><a href="https://dribbble.com/shots/2267219-UI-Navigation-Concept" target="_blank" rel="external"><em>Menu interaction concept</em></a></p>
<h3 id="Decorative-and-entertaining-icons"><a href="#Decorative-and-entertaining-icons" class="headerlink" title="Decorative and entertaining icons"></a>Decorative and entertaining icons</h3><p>The icons of this type give more about aesthetic appeal than functionality. However, this aspect is also significant and needs to be considered as the style and appearance corresponding to the target audience preferences and expectations set the solid ground for high desirability. Applied wisely, it is one of the features that can not only attract but also retain users and add much to the positive user experience. Decorative icons are often used to present seasonal features and special offers.</p>
<p><img src="http://img0.tuicool.com/VnMrA3a.jpg!web" alt=""></p>
<p><a href="https://dribbble.com/shots/2007927-Easter-and-spring-themed-icons" target="_blank" rel="external"><em>Easter and spring themed icons</em></a></p>
<h3 id="App-icons"><a href="#App-icons" class="headerlink" title="App icons"></a>App icons</h3><p>App icons are the interactive brand signs that present the application on different platforms supporting the original identity of the digital product. In most cases, it features the logo of the app designed according to the requirements set for this kind of icons. However, it also can apply something else, for example, a mascot or an abstract combination of corporate colors. The effective solution is usually based on thorough market and competition research with the aim of creating an original icon which won’t get lost on the screen full of other app icons.</p>
<p><img src="http://img2.tuicool.com/eM732av.png!web" alt=""></p>
<p><a href="https://dribbble.com/shots/2852836-Elephun-Icon" target="_blank" rel="external"><em>Elephun App Icon</em></a></p>
<h3 id="Favicon"><a href="#Favicon" class="headerlink" title="Favicon"></a>Favicon</h3><p>Favicon, also known as URL icon or bookmark icon, is a special type of symbol which represents the product or brand in the URL-line of the browser as well as in the bookmark tab. It allows users to get a quick visual connection with it while they are browsing. This interface element proved itself effective for productive website promotion and good recognizability of its visual identity.</p>
<h2 id="Types-based-on-visual-performance"><a href="#Types-based-on-visual-performance" class="headerlink" title="Types based on visual performance"></a>Types based on visual performance</h2><h3 id="Glyph-icons"><a href="#Glyph-icons" class="headerlink" title="Glyph icons"></a>Glyph icons</h3><p>The term “glyph”[glif] has come to design from the field of typography. The word takes its roots from the Greek word which means “carving”. Originally, the term presents an elements symbols or pictogram which is included in the set of symbols agreed upon many users (readers, writers etc.): it presents a readable character enabling people to write it.</p>
<p>In the sphere of typography, it is a certain graphic representation of an element of written language within a particular system of writing or particular typeface: it can be a grapheme, or part of a grapheme, or sometimes several graphemes in combination (a composed glyph). Here’s the set of ancient Celtic glyphs, for example.</p>
<p><img src="http://img2.tuicool.com/63IF3mM.jpg!web" alt=""></p>
<p><a href="http://td-brushes.deviantart.com/art/Pictish-Rune-Meanings-40202186" target="_blank" rel="external"><em>Source</em></a></p>
<p>In modern digital design, the word “glyph” reinvented its meaning but not into a sort of revolution. It is used to define a graphic symbol that provides the appearance or form for a character: it can be an alphabetic or numeric font as well as a symbol picturing an encoded character. Talking about icons, glyph icons are first of all described as a typographic symbol that represents something else, not letter or number. Among popular examples, you will also find the «@» symbol representing the preposition «at». For example, here is the set of icons for material design from Google.</p>
<p><img src="http://img0.tuicool.com/jURniiq.jpg!web" alt=""></p>
<p><a href="https://material.io/icons/" target="_blank" rel="external"><em>Material icons</em></a></p>
<p>Glyph icons use simplified and universal shapes and images to be recognizable and flexible in terms of responsive design. They play the big role in the issues of navigation for a digital product.</p>
<p><img src="http://img2.tuicool.com/QJ7RZ3E.png!web" alt=""></p>
<p><a href="https://dribbble.com/shots/2396211-Weather-Icons-Set" target="_blank" rel="external"><em>Weather icons</em></a></p>
<h3 id="Flat-and-semi-flat-icons"><a href="#Flat-and-semi-flat-icons" class="headerlink" title="Flat and semi-flat icons"></a>Flat and semi-flat icons</h3><p>Flat icons are usually a bit more complex than glyph: they can apply color combinations, filling of the elements and present a bit more complicated images. Nevertheless, they are also focused on simple and recognizable visual metaphors quickly transferring the required meaning. The most prominent feature which actually has inspired the name of this direction is applying flat 2-dimensional visual details as the opposite to highly realistic and detailed skeuomorphic images. Flat style allows designers to be more flexible in applying the expressive power of colors and shapes not losing in legibility of the presented items.</p>
<p><img src="http://img0.tuicool.com/eABB7vY.png!web" alt=""></p>
<p><a href="https://dribbble.com/shots/2082509-Blog-App" target="_blank" rel="external"><em>Blog App</em></a></p>
<h3 id="Skeuomorphic-icons"><a href="#Skeuomorphic-icons" class="headerlink" title="Skeuomorphic icons"></a>Skeuomorphic icons</h3><p>Skeuomorphism is the design direction somehow opposite to flat. It is based on the idea of reflecting images in 3D look very close to the original natural look of the physical objects. It was popular for GUI of different types and functionality several years ago. But then it was gradually replaced with flat design in UI which is simpler and therefore more flexible and practical for the needs of digital interfaces. Nevertheless, the skeuomorphic icons are still widely used in game design and app icons in game sector.</p>
<h3 id="SVG-icons"><a href="#SVG-icons" class="headerlink" title="SVG icons"></a>SVG icons</h3><p>SVG icons, decoded as Scalable Vector Graphics, are responsive icons built on XML-based 2D vector images. They are designed and integrated according to an open standard developed by the World Wide Web Consortium (W3C) since 1999, and supported by all major browsers. SVG icons are growing their popularity as today websites are used on the diversity of platforms and devices and need to be responsive to provide positive UX.</p>
<h2 id="Types-based-on-applied-image-metaphor"><a href="#Types-based-on-applied-image-metaphor" class="headerlink" title="Types based on applied image metaphor"></a>Types based on applied image metaphor</h2><p>This direction of icons typology is based on the research provided by the famous expert in usability Jackob Nielsen and revealed in hisarticlefor Nielsen Norman Group. In this perspective, icons can be divided into three core types according to the type of the metaphor they reflect.</p>
<p>Resemblance iconsare the symbols directly depicting a physical object the icon represents. These are, for example, the magnifier for search, the shopping cart, the envelope for mail etc.</p>
<p>Reference iconsare the symbols depicting an object on the basis of analogy. For instance, a picture of a clamp representing a file-compression utility (because it squeezes) goes to this group.</p>
<p>Arbitrary iconsare the symbols which currently do not set direct connections with the objects and their recognizability is based on convention and power of habit. This is when we should remember about floppy disc representing «Save» function: although initially it was a reference icon, for many users now it doesn’t work like that — they just know the meaning solidly connected to this image for many years.</p>
<p><img src="http://img2.tuicool.com/FJBRfqZ.jpg!web" alt=""></p>
<p><a href="https://dribbble.com/shots/2117638-Multimedia-icon-set" target="_blank" rel="external"><em>Multimedia Icon Set</em></a></p>
<h2 id="Key-features-of-effective-icons"><a href="#Key-features-of-effective-icons" class="headerlink" title="Key features of effective icons"></a>Key features of effective icons</h2><p>In one of our previous articles devoted to the role of icons in user interfaces, we have already described all the essential features making the icons efficient, so today let’s just quickly recall them.</p>
<ul>
<li><strong>clear</strong><br>— the meaning of the icon is understandable and accessible to the target audience</li>
<li><strong>meaningful</strong><br>— the icon transfers the informative value</li>
<li><strong>recognizable</strong><br>— the visual symbol applied in the icon is presented in the form which can be recognized and decoded correctly by users</li>
<li><strong>simple</strong><br>— the icon isn’t overloaded with non-essential graphic elements which allows it to be quickly perceived and understood without too much effort</li>
<li><strong>original and noticeable</strong><br>— the icon stands out among other similar elements of the interface which is especially actual for the app icons</li>
<li><strong>scalable and flexible</strong><br>— the icon saves its unity, integrity, and legibility in different sizes and resolutions</li>
<li><strong>attractive</strong><br>— the icon satisfies aesthetic expectations and sets harmonic visual appeal</li>
<li><strong>non-offensive</strong><br>— the icon doesn’t have hidden meanings or misperceptions which could feel offensive or rude for any part of the target audience</li>
<li><strong>consistent</strong><br>— the icon corresponds to the general stylistic concept of the layout it is applied for.</li>
</ul>
<p><img src="http://img1.tuicool.com/rQBfqyv.jpg!web" alt=""></p>
<h2 id="Recommended-reading"><a href="#Recommended-reading" class="headerlink" title="Recommended reading"></a>Recommended reading</h2><p>Here is a bunch of articles for further exploration of the topic:</p>
<p><a href="https://www.nngroup.com/articles/classifying-icons/" target="_blank" rel="external">Icon Classification: Resemblance, Reference, and Arbitrary Icons</a></p>
<p><a href="https://www.interaction-design.org/literature/article/a-brief-history-of-the-origin-of-the-computer-icon" target="_blank" rel="external">A Brief History of the Origin of the Computer Icon</a></p>
<p><a href="http://tubikstudio.com/iconic-simplicity-the-vital-role-of-icons/" target="_blank" rel="external">Iconic Simplicity. The Vital Role of Icons.</a></p>
<p><a href="http://tubikstudio.com/visual-perception-icons-vs-copy-in-ui/" target="_blank" rel="external">Visual Perception: Icons VS Copy in UI.</a></p>
<p><a href="https://icons8.com/articles/how-to-combine-icons-from-different-sets-in-your-ui/" target="_blank" rel="external">How to Combine Icons from Different Sets in Your UI</a></p>
<p>Welcome to see the designs by Tubik Studio on <a href="https://dribbble.com/Tubik" target="_blank" rel="external">Dribbble</a>and <a href="https://www.behance.net/Tubik" target="_blank" rel="external">Behance</a></p>
<p>Source: <a href="http://www.tuicool.com/articles/hit/IfqYJz7" target="_blank" rel="external">http://tubikstudio.com/small-elements-big-impact-types-and-functions-of-ui-icons/</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Icons in user interfaces are the elements that cannot be overestimated. Small and meaningful, they solve numerous problems. They become l
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Tonsser, the social app for youth soccer players, partners with Nike and raises new funding</title>
    <link href="https://gmagon.com/blog/2017/07/06/tonsser-the-social-app-for-youth-soccer-players-partners-with-nike-and-raises-new-funding/"/>
    <id>https://gmagon.com/blog/2017/07/06/tonsser-the-social-app-for-youth-soccer-players-partners-with-nike-and-raises-new-funding/</id>
    <published>2017-07-06T00:00:00.000Z</published>
    <updated>2017-07-06T10:09:59.048Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://img2.tuicool.com/EneaUnz.jpg!web" alt=""></p>
<p><a href="http://tonsser.com/" target="_blank" rel="external">Tonsser</a>, the Copenhagen-based startup that offers a vertical social network aimed at youth soccer players who want to build their own online profile and potentially get discovered by a bigger club, continues to grow at a clip, both in terms of signups but also the influence it wants to have on the beautiful game. The company has signed on Nike as its first brand channel partner, and now has 380,000 youth players registered, up from 100,000 just over a year ago.</p>
<p>The Danish startup has also raised a new round of funding as it gears up for a 2018 expansion to the U.K., home to the English Premier League and a huge potential youth football market for the startup. It is also quite a fragmented one, in terms of youth leagues, so it will be interesting to see how quickly Tonsser can grow here. The app is currently live in France, Germany, Denmark, Sweden and Norway.</p>
<p>In a call with co-founder and CEO Peter Holm (and after we spent the first ten minutes catching up with the latest Tottenham Hotspur news, as we are inclined to do), he told me that Tonsser is evolving from a social app that was<a href="https://techcrunch.com/2016/06/08/tonsser/" target="_blank" rel="external">mainly about youth players making a profile of themselves and tracking scores and stats</a>in order to get noticed by scouts — a bit like a real life Football Manager video game — to offer even more user-generated content where players can learn skills from each other and in turn become influencers on the platform.</p>
<p><img src="http://img1.tuicool.com/MVFbMzJ.jpg!web" alt="">“Since the internet you no longer need to go to Harvard to learn and be educated by the best. You can go to Youtube, masterclasses or see a Ted talk. We believe it should be the same in football where don’t need to be at the best or most expensive academy to learn and be inspired by the best players and coaches,” he says.</p>
<p>This is seeing top youth players, including from PSG, Lyon, and Dortmund, and “freestylers and local heroes” create video content, such as how to take a free kick, to inspire other young soccer players in Europe.</p>
<p>Related to this, Tonsser has signed on Nike to be the first brand to get access to the platform with their own channel, where they are posting what Holm calls “edutainment,” including drills with from players in Barcelona’s La Masia academy. This also points towards the makings of a revenue model for the free to access social app.</p>
<p>“Next is opening [the platform up] to top clubs to show drills and practice from their academies. [We are] currently in talks with international top clubs from England, Germany, Holland and Denmark,” adds Holm.</p>
<p>He also tells me Tonsser is working on integrations with wearable devices to “empower players to become more data-driven and compare physical data including pace, acceleration, distance covered, form, etc”.</p>
<p>Meanwhile, I understand the startup has raised €2.5 million in new funding. Backing the round are existing investors Wellington Partners, SEED Capital, Arthur Kosten (Booking.com), and unnamed professional soccer players. The long term ambition is “to become the de facto platform for the next generation of football,” says the Tonsser CEO.</p>
<p>Source: <a href="http://www.tuicool.com/articles/hit/Qr6VZjV" target="_blank" rel="external">https://techcrunch.com/2017/07/06/tonsser-the-social-app-for-youth-soccer-players-partners-with-nike-and-raises-new-funding/</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://img2.tuicool.com/EneaUnz.jpg!web&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://tonsser.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Tonsser&lt;/a
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Micro frontends – a microservice approach to front-end web development</title>
    <link href="https://gmagon.com/blog/2017/07/06/micro-frontends-a-microservice-approach-to-front-end-web-development/"/>
    <id>https://gmagon.com/blog/2017/07/06/micro-frontends-a-microservice-approach-to-front-end-web-development/</id>
    <published>2017-07-06T00:00:00.000Z</published>
    <updated>2017-07-06T10:09:59.031Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://img0.tuicool.com/7BFRBrz.png!web" alt=""></p>
<p>For web apps, the front end is becoming bigger and bigger, and the back end is getting less important. Our web app at<a href="https://www.weld.io/?utm_source=medium.com&amp;utm_content=micro-frontends" target="_blank" rel="external"><strong>Weld</strong>(web/app creation tool)</a>is 90% front-end code, with a very thin back end. I can imagine that a majority of new web apps being built today are dealing with a similar situation.</p>
<p>Web apps also change over time, as do development techniques and frameworks. This requires support for allowing different front-end frameworks to co-exist, e.g. older modules built in JQuery or AngularJS 1.x, combined with newer modules built in React or Vue.</p>
<h3 id="The-monolithic-approach-doesn’t-work-for-larger-web-apps"><a href="#The-monolithic-approach-doesn’t-work-for-larger-web-apps" class="headerlink" title="The monolithic approach doesn’t work for larger web apps"></a>The monolithic approach doesn’t work for larger web apps</h3><p>Having a monolithic approach to a large front-end app becomes unwieldly. There needs to be a way of breaking it up into smaller modules that can act independently.</p>
<p>Example:</p>
<ul>
<li><code>myapp.com/</code><ul>
<li>landing page built with static HTML.</li>
</ul>
</li>
<li><code>myapp.com/settings</code><ul>
<li>old settings module built in AngularJS 1.x.</li>
</ul>
</li>
<li><code>myapp.com/dashboard</code><ul>
<li>new dashboard module built in React.</li>
</ul>
</li>
</ul>
<p>I would imagine the following is needed:</p>
<ol>
<li>A<br><strong>shared codebase</strong><br>in pure JavaScript e.g. managing routing and user sessions. Also some shared CSS. Both should be as thin as possible.</li>
<li>A<br><strong>collection of separate modules</strong><br>, “mini-apps”, built in various frameworks. Stored in different code repositories.</li>
<li>A deployment system that<br><strong>bundles all the modules together</strong><br>from different repositories and deploys to a server, whenever a module is updated.</li>
</ol>
<h3 id="The-solution-“micro-frontends”"><a href="#The-solution-“micro-frontends”" class="headerlink" title="The solution: “micro frontends”"></a>The solution: “micro frontends”</h3><p>But as it turns out, a lot of other people is thinking about the same ideas. The common term is<em>“micro frontends”</em>.</p>
<p>Companies like<a href="https://news.ycombinator.com/item?id=13009285" target="_blank" rel="external">Spotify</a>,<a href="https://news.ycombinator.com/item?id=13012916" target="_blank" rel="external">Klarna</a>,<a href="https://www.mosaic9.org/" target="_blank" rel="external">Zalando</a>,<a href="https://www.upwork.com/blog/2017/05/modernizing-upwork-micro-frontends/" target="_blank" rel="external">Upwork</a>, and<a href="http://allegro.tech/2016/03/Managing-Frontend-in-the-microservices-architecture.html" target="_blank" rel="external">Allegro</a>are using the micro frontends approach to build their web apps.</p>
<h3 id="Implementing-micro-frontends"><a href="#Implementing-micro-frontends" class="headerlink" title="Implementing micro frontends"></a>Implementing micro frontends</h3><p>Here’s a few different approaches to implementing micro frontends:</p>
<ol>
<li>Isolating micro-apps into<br><a href="https://news.ycombinator.com/item?id=13009285" target="_blank" rel="external"><strong>IFrames</strong>using libraries and Window.postMessage APIs</a><br>to coordinate. IFrames share APIs exposed by their parent window.</li>
<li><a href="https://news.ycombinator.com/item?id=13011795" target="_blank" rel="external">Multiple single-page apps that live at different URLs</a><br>. The apps use NPM/Bower components for shared functionality.</li>
<li>Using<br><a href="http://allegro.tech/2016/03/Managing-Frontend-in-the-microservices-architecture.html" target="_blank" rel="external"><strong>Varnish Cache</strong>to integrate different modules</a><br>.</li>
<li><a href="https://technologyconversations.com/2015/08/09/including-front-end-web-components-into-microservices/" target="_blank" rel="external"><strong>Web Components</strong>as the integration layer</a><br>.</li>
<li><a href="https://news.ycombinator.com/item?id=13012916" target="_blank" rel="external">“Blackbox”<strong>React</strong>components</a><br>.</li>
</ol>
<h3 id="Resources"><a href="#Resources" class="headerlink" title="Resources"></a>Resources</h3><ul>
<li><a href="https://news.ycombinator.com/item?id=13009285" target="_blank" rel="external">Ask Hacker News: “What do you use to build micro-front ends?”</a></li>
<li><a href="https://www.mosaic9.org/" target="_blank" rel="external">Project Mosaic</a><br>by Zalando, a set of libraries to support a microservice style architecture for large scale websites. See also<br><a href="https://www.microservices.com/talks/mosaic-microservices-zalando-tech/" target="_blank" rel="external">this presentation from Zalando Tech</a><br>.</li>
<li><a href="https://github.com/neuland/micro-frontends" target="_blank" rel="external">Micro Frontends (GitHub)</a><br>— will contain techniques, strategies and recipes for building a modern web app with multiple independent teams.</li>
</ul>
<p>Source: <a href="http://www.tuicool.com/articles/hit/aeM3Ybf" target="_blank" rel="external">https://medium.com/@tomsoderlund/micro-frontends-a-microservice-approach-to-front-end-web-development-f325ebdadc16</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://img0.tuicool.com/7BFRBrz.png!web&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;For web apps, the front end is becoming bigger and bigger, and the back
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Image Correction for Color Blindness</title>
    <link href="https://gmagon.com/blog/2017/07/06/image-correction-for-color-blindness/"/>
    <id>https://gmagon.com/blog/2017/07/06/image-correction-for-color-blindness/</id>
    <published>2017-07-06T00:00:00.000Z</published>
    <updated>2017-07-06T10:09:59.028Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Color-blind-image-correction"><a href="#Color-blind-image-correction" class="headerlink" title="Color blind image correction"></a>Color blind image correction</h2><p>Color blind image correction</p>
<p><a href="http://www.vischeck.com/daltonize/runDaltonize.php" target="_blank" rel="external">(Run Daltonize online here)</a></p>
<p>One of the most common questions that we are asked is:</p>
<p><strong>  
</strong></p>
<p>Is there a way to cure color blindness?</p>
<p>From a medical point of view, the answer is ‘not really’. There are some devices (colored contact lenses or filter spectacles) that are claimed to improve the vision of color blind people but in general, people report very mixed results with them. There is currently no effective way to recover full trichromatic vision if you are red/green colorblind.</p>
<p>So in one sense, color blindness is ‘incurable’. But a deeper question is “what is color good for?”. Apart from its aethetic appeal, seeing many different colors allows us to distinguish things in the world. Take the example below.</p>
<table>
<thead>
<tr>
<th style="text-align:left"><strong>How many types of fruit is this man selling?</strong> People with three different cone types (“trichromats”) can see 5 distinct piles of fruit on the ground. From back to front, they look ‘red’, ‘green’, ‘red’, ‘yellow’ and ‘light orange’. There are also some baskets on the shelf containing three piles of fruit.</th>
<th style="text-align:left"><img src="http://img0.tuicool.com/ZJZFNnV.jpg!web" alt=""></th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">But people with red/green color blindness usually have trouble seeing all the different fruits.They see something that can be simulated like this: Note that there now seem to be only three or four different types of fruit on the ground. It is also hard to tell how many distinct piles of fruit there are on the shelves.</td>
<td style="text-align:left"><img src="http://img0.tuicool.com/iUNRfi7.jpg!web" alt=""></td>
</tr>
</tbody>
</table>
<p>In some pictures, a lot of important information is conveyed by variations in reds and greens. This is a real problem for color blind people who will miss this information. The important point to understand is that<strong>the ‘true’ color of something may be irrelevant but the fact that it is different from its surroundings is very important.</strong></p>
<p>Here is another example:</p>
<table>
<thead>
<tr>
<th style="text-align:left"><img src="http://img2.tuicool.com/Y3MBVvr.jpg!web" alt=""></th>
<th style="text-align:left"><img src="http://img2.tuicool.com/j6rUryi.jpg!web" alt=""></th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left"><strong>1) Cells labelled with three types of fluorescent markers to show up three different structures.</strong></td>
<td style="text-align:left"><strong>2) Red/green color blind simulation of fluorescent cell picture.</strong></td>
</tr>
</tbody>
</table>
<p>Here, a color blind scientist would be unable to tell the red and green labels apart. They would miss important information about the structure of the cells.</p>
<p>How to fix it?</p>
<p>We can use image processing techniques to improve this situation. There are two ways that we can make information in pictures available to color blind people.</p>
<p><strong>1)</strong>The simplest way is simply to increase the red/green contrast in the image. Many color blind people have some residual red/green discrimination. Increasing the red/green contrast makes them more likely to see these types of color variations.</p>
<p><strong>2)</strong>We can analyze the information conveyed by variations in the red/green direction and convert these into changes in brightness and/or blue/yellow coloration.  This allows us to map information from a color dimension that is invisible to dichromats into those that they can see.</p>
<p>We call the combination of these two processes ‘Daltonization’ after John Dalton, the British scientist who was one of the first people to investigate color blindness.</p>
<p>The result of applying these algorithms is shown below.:</p>
<table>
<thead>
<tr>
<th style="text-align:left"><img src="http://img2.tuicool.com/INjiey2.jpg!web" alt=""></th>
<th style="text-align:left"><img src="http://img1.tuicool.com/QZ7vUji.jpg!web" alt=""></th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">3) Daltonized version of three-color-labelled fluorescent cells.</td>
<td style="text-align:left"><strong>4) Dichromat (red/green color blind) simulation of the  Daltonized image.</strong></td>
</tr>
</tbody>
</table>
<p>Here, the algorithm has mapped changes in the reds and greens into slight changes in brightness and bluishness. The result is that when viewed by someone with color blindness, the different labelled structures in the cell are clearly visible.</p>
<p>Here are some more examples. In each case, the images are numbered 1 to 4 where<strong>1</strong>) is the original full-color image,<strong>2</strong>) is a simulation of the color-blind view of the full color image,<strong>3</strong>) is the Daltonized version of the full color image and<strong>4</strong>) is the color blind simulation of the Daltonized image showing improved red/green discrimination. To see how well the Daltonization algorithm works for someone with color blindness, compare images<strong>2</strong>) and<strong>4</strong>).</p>
<p>Example: Gauguin painting</p>
<table>
<thead>
<tr>
<th style="text-align:left"><strong>1</strong>)<img src="http://img1.tuicool.com/AR3U73r.jpg!web" alt=""></th>
<th style="text-align:left"><strong>2</strong>)<img src="http://img0.tuicool.com/rA7jqiJ.jpg!web" alt=""></th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left"><strong>3</strong>)<img src="http://img1.tuicool.com/INjieiZ.jpg!web" alt=""></td>
<td style="text-align:left"><strong>4</strong>)<img src="http://img0.tuicool.com/QfE7fui.jpg!web" alt=""></td>
</tr>
</tbody>
</table>
<p>In this case, the Daltonization transformation must be judged on a more aesthetic level. While there is more ‘information’ present in image<strong>4)</strong>compared to image<strong>2)</strong>the disruption in the color balance may be unsettling (or fascinating) to some dichromats.</p>
<p>Here is an Ishihara plate - a common aid for diagnosing color blindness. The number ‘45’ in the center of the disk is invisible to  someone with red/green color blindness.</p>
<table>
<thead>
<tr>
<th style="text-align:left"><strong>1</strong>)<img src="http://img0.tuicool.com/quMZJbn.jpg!web" alt=""></th>
<th style="text-align:left"><strong>2</strong>)<img src="http://img2.tuicool.com/vi6v6rA.jpg!web" alt=""></th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left"><strong>3</strong>)<img src="http://img0.tuicool.com/A3ANFjE.jpg!web" alt=""></td>
<td style="text-align:left"><strong>4</strong>)<img src="http://img0.tuicool.com/A3ANFjE.jpg!web" alt=""></td>
</tr>
</tbody>
</table>
<p>There are several things to note about this example. First of all, although the enhancement of the red/green information in the Daltonized version is striking, this is not a good<strong>general</strong>test of an algorithm to modify images for color blind observers. The reason is that the Ishihara plates are (deliberately) artificial images, and do not represent the range of colors that people see in everyday life. It would be rather easy to design an algorithm to ‘improve’ Ishihara plates (for example one that replaced all reds with blues) that would nevertheless destroy other types of information in the image. One nice feature of the Daltonization algorithm is that it analyses the information content of the image beforehand and attempts to preserve existing color variations.</p>
<p>Note also that the Daltonizing algorithm does not enable people to “pass” the Ishihara test in any way. It is a digital image processing technique that can make print or video display more salient to color blind people without distorting the color balance to an unnacceptable degree.</p>
<p>And finally, here’s the fruit market we showed you at the start:</p>
<table>
<thead>
<tr>
<th style="text-align:left"><strong>1</strong>)<img src="http://img0.tuicool.com/ZJZFNnV.jpg!web" alt=""></th>
<th style="text-align:left"><strong>2</strong>)<img src="http://img1.tuicool.com/EJR73qz.jpg!web" alt=""></th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left"><strong>3</strong>)<img src="http://img0.tuicool.com/qqA3y26.jpg!web" alt=""></td>
<td style="text-align:left"><strong>4</strong>)<img src="http://img2.tuicool.com/NZRNj23.jpg!web" alt=""></td>
</tr>
</tbody>
</table>
<p>The different piles of fruit on the floor are now clearly visible in image<strong>4</strong>).</p>
<p><strong>What is it good for?</strong>We envisage a number of applications for this algorithm. Here are some examples:</p>
<p><strong>As part of a digital microscope</strong>(see the ‘cells’ example above): Color blind users could flick a switch to improve the visibility of red/green fluorescent labels or intrinsic color contrast…</p>
<p><strong>In digital video recorders and display systems</strong>: Viewers could turn on the Daltonize algorithm much as they might vary the brightness or volume using a remote control. Operating on a real-time video stream, the algorithm could improve the appearence of TV for color blind viewers (for example, making sports teams playing in red strip on a green field far more visible) without significantly disturbing the color balance for other members of the audience….</p>
<p><strong>Computer display devices</strong>: Computer users could turn on the Daltonize algorithm from as part of their computer video card controls. All output appearing on the monitor (including web-pages, videos and still images) would automatically be processed and rendered more salient to dichromats.</p>
<p><strong>Print media</strong>: Images can be Daltonized before printing. Print applications where legibility is essential (for example, public safety documents, maps, technical instructions) can all be made more legible for color-blind users….</p>
<p><strong>  
</strong></p>
<p>You can play with the algorithm onlineon this web page. Please be aware that this page is taking a lot of hits at the moment and may seem a little slow to respond. If you have any particularly interesting images that you would like us to process, send them to us by email atinfo@vischeck.com and we will run them ‘by hand’. Please keep them to a reasonable size :)</p>
<p>We would also like to hear your feedback about this algorithm - especially if you are color blind. Let us know what you think!</p>
<p>If you would like to license the Daltonizing algorithm for use in your own applications, please contact us at<a href="mailto://daltonize_license@vischeck.com" target="_blank" rel="external">daltonize_licence@vischeck.com</a>.</p>
<p>Source: <a href="http://www.tuicool.com/articles/hit/6B3qMvb" target="_blank" rel="external">http://www.vischeck.com/daltonize/</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Color-blind-image-correction&quot;&gt;&lt;a href=&quot;#Color-blind-image-correction&quot; class=&quot;headerlink&quot; title=&quot;Color blind image correction&quot;&gt;&lt;/a&gt;Co
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>&#39;Baby Driver&#39; is an ode to iPod nostalgia</title>
    <link href="https://gmagon.com/blog/2017/07/05/baby-driver-is-an-ode-to-ipod-nostalgia/"/>
    <id>https://gmagon.com/blog/2017/07/05/baby-driver-is-an-ode-to-ipod-nostalgia/</id>
    <published>2017-07-05T00:00:00.000Z</published>
    <updated>2017-07-05T09:44:47.957Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://s.aolcdn.com/hss/storage/midas/91351aa33a3d30a39ff662e8b8b68e9/205442176/Baby%2BDriver%2B1.jpg" alt=""></p>
<p>Tristar Pictures</p>
<p>It took a while to get going, but it’s safe to say we’re living in a golden age of digital music. Terrible compression is a thing of the past, and the rise of streaming services like Spotify and Apple Music give us instant access to almost anything we’d want to hear. But while we’ve gained so much, there’s also a sense that we’ve lost something. Sharing a playlist isn’t the same as burning a CD for your sweetheart, or going even further back, manually dubbing a mixtape. As our music has become less physical, so has our attachment to it.</p>
<p>That’s something that struck me while watching<em>Baby Driver</em>, director Edgar Wright’s new mashup of car chases, heist films and excellent tunes. Its lead character, Baby (Ansel Elgort), is perpetually connected to a pair of headphones, experiencing life as if it’s a never-ending music video. But his earbuds aren’t attached to a smartphone; they’re plugged into one of his many iPods. He has a box full of them, each with their own colors and ornamentations. Basically, a different iPod for every mood.</p>
<p>While they’re filled with digital files, the iPods also serve as a physical connection to all of his music. The film opens with Baby in a getaway car, cool as a cucumber while wearing white earbuds, launching into a jam out session with_Bellbottoms_by The Jon Spencer Blues Explosion. That song also serves as the backdrop for the film’s electric opening chase, where you can almost feel the iPod’s tiny mechanical hard drive (remember those?) racing alongside him.</p>
<p>As someone who<a href="https://www.engadget.com/2015/09/17/gone-too-zune/" target="_blank" rel="external">reminisces fondly about my Zune HD</a>,<a href="https://en.wikipedia.org/wiki/Rio_Karma" target="_blank" rel="external">Rio Karma</a>,<a href="https://www.cnet.com/products/toshiba-gigabeat-s/review/" target="_blank" rel="external">Toshiba Gigabeat</a>and countless other players of varying quality, Baby’s connection to his iPods struck a chord. With older media players, there was a sense of physicality, before cloud syncing made it a cinch to keep track of all your music. If you somehow managed to hit a double whammy of bad luck and lost both your player and your computer’s hard drive, you were out of luck.</p>
<p>These days, you can hop between phones within minutes, porting over your entire library without a sweat with iTunes, Google Play and apps like Spotify. You don’t even have to wait for your music to download; you can just stream it all from the server heavens.</p>
<p>Baby’s iPod addiction seems fitting today, at a time when we’re all plugged into headphones most of the day. Just look up from your phone once in a while and you’ll see it: a crowd of people, each in their own world with their own private soundtracks. In<em>Baby Driver</em>, that soundtrack underscores everything, be it a chase, a shootout or even a stroll for coffee. The film also takes pains to choreograph the tunes with what’s happening on screen (there’s a shootout set to_Tequila_that’s pitch perfect). Baby also uses music as a form of therapy, due to a tinnitus condition that resulted from a childhood car accident. It’s a way to drown out the “hum in the drum,” as Kevin Spacey’s criminal mastermind, Doc, tells us.</p>
<p><img src="https://o.aolcdn.com/images/dims?resize=980%2C640&amp;quality=100&amp;image_uri=https%3A%2F%2Fs.aolcdn.com%2Fhss%2Fstorage%2Fmidas%2F898e51608e44a0022256740610336ea2%2F205434882%2FBaby%2BDriver%2B2.jpg&amp;client=cbc79c14efcebee57402&amp;signature=dc771c585960952fdbbeeb4c05d41fa744c718ed" alt=""></p>
<p>Tristar Pictures</p>
<p>Since the film is practically an action musical, it’s no surprise that Baby’s relationship with everyone is centered around tunes. He strikes up a conversation with his sweetheart, Debora (Lily James), by comparing the songs that feature both of their names. He forms a kinship with Jon Hamm’s bank robber as they share earbuds, reminiscing about their go-to tracks during a getaway. (Baby’s is_Queen’s_Brighton Rock, which should come as no surprise to fans of Edgar Wright’s<em>Shaun of the Dead</em>.) Meanwhile, Jamie Foxx’s Bats, who’s particularly unstable, hates the idea of listening to music during robberies. That’s a major red flag that tells us not to trust him.</p>
<p>Baby’s connection to music extends beyond Apple’s devices: his apartment practically has wall-to-wall records. He also spends his time mixing sound clips with a unique rig,<a href="http://www.gq.com/story/kid-koala-baby-driver" target="_blank" rel="external">developed by Kid Koala</a>, which consists of a magnetic card reader, a distorted Buddhist meditation box and a pen controlled device. There’s even an E-mu Emulator II, for good measure. In true, anachronistic music nerd fashion, Baby also records all of his mixes to cassette tape.</p>
<p>Since he’s a collector of old-school musical gear (although not many CDs, from what I could gather), Baby’s iPod obsession seems almost peculiar. But I suppose he’s just like plenty of other hip music nerds. We live in a world where the digital and analog still coexist – record sales, paradoxically, are actually on the rise, along with streaming music sales. Baby just latches onto the things he can actually touch and feel.</p>
<p>And, after all, who wants to deal with their favorite track buffering when you’re in the middle of a life or death car chase?</p>
<p>Source: <a href="https://www.engadget.com/2017/07/03/baby-driver-ipod-nostalgia/" target="_blank" rel="external">https://www.engadget.com/2017/07/03/baby-driver-ipod-nostalgia/</a>  </p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://s.aolcdn.com/hss/storage/midas/91351aa33a3d30a39ff662e8b8b68e9/205442176/Baby%2BDriver%2B1.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;Tristar 
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Is Freelancing Your Next UX Career Move?</title>
    <link href="https://gmagon.com/blog/2017/07/05/is-freelancing-your-next-ux-career-move/"/>
    <id>https://gmagon.com/blog/2017/07/05/is-freelancing-your-next-ux-career-move/</id>
    <published>2017-07-05T00:00:00.000Z</published>
    <updated>2017-07-05T09:44:47.960Z</updated>
    
    <content type="html"><![CDATA[<p>I’ve been working in for UX for about a decade and freelanced on and off for about five years. Last year, I started consulting full time again, abandoning the 9-5 life and making my main source of employment a series of projects from different clients.</p>
<p>Since then, I’ve had countless conversations with other UX professionals who are considering moving to freelancing as their next career step.</p>
<p>They usually say they’re looking for freedom, more money, the ability to work on more interesting problems or learn new things – or even just the chance to work in their pyjamas regularly. Since I started consulting, I’ve expanded my focus into more strategy and product work across a wide variety of industries, and have met all kinds of interesting, smart colleagues.</p>
<p>While I wouldn’t change a thing about my situation, I’m always cautious about encouraging others to jump into the freelance world, because it’s definitely not for everyone. Here are some things I’ve learned along the way to consider before you quit your day job.</p>
<h3 id="Freelancing-pros-and-cons"><a href="#Freelancing-pros-and-cons" class="headerlink" title="Freelancing pros and cons"></a>Freelancing pros and cons</h3><p>Yes, it’s true that I spend most days in yoga pants, travel frequently, and work on some pretty cool projects. But consulting isn’t all sunshine and rainbows. There are many things that are great about consulting, some things that aren’t so great, and some things that just depend on the day.</p>
<p><img src="http://img2.tuicool.com/mqEZzeZ.png!web" alt=""></p>
<p>Freelancing pro: setting up your own home office. Photo by<a href="http://unsplash.com/photos/RcdV8rnXSeE?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText" target="_blank" rel="external">Vadim Sherbakov</a>on <a href="https://unsplash.com/?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText" target="_blank" rel="external">Unsplash</a>.</p>
<p>Schedule: One of the things I love most about consulting is being in total control of my schedule. There’s no expectation that I’m at my desk from 9 am to 5 pm. Sometimes I get in a zone and finish an entire report in one very long day and take the next morning off to let ideas percolate. Of course I have meetings and deadlines, but I can usually finagle things to work well for my clients and myself.</p>
<p>On the flip side, juggling your schedule can be difficult. I’m quite disciplined about getting things done, but I’ve never quite figured out a way to create a consistent schedule. Sometimes I’ve had priority work on different projects collide at the same time or I’ve said yes to a few too many things and ended up working crazy hours to get everything done. Such is a consultant’s life.</p>
<p>Money: I absolutely find that I make more money freelancing than when I worked in-house, even in leadership roles. I’m still experimenting with how I bill, but I tend to use value-based pricing for entire projects rather than charge hourly. I often ask clients to pay me 50% of the total upfront and the rest upon project completion, which can make managing money tricky, especially when you’re used to a consistent paycheck.</p>
<p>You also have to know that you’ll never be able to collect money as though you’re billing 40 hours a week, every week. You have to account for supplies, tool costs, benefits, and set aside time for administrative tasks like sending invoices, business development, and, of course, downtime. No one gives you sick time or vacation days when you freelance.</p>
<p>Inevitably, I’ve also run into time periods where I don’t have anything billable booked. An open schedule can be scary, so I use this time to do things like reach out to colleagues or potential clients, write articles, research new tools, try to learn something new, or catch up on administrative work. One of the benefits of this downtime is the space to learn, exploring the vast array of available online courses or just experimenting with a new method or tool.</p>
<p>Work environment: I mostly work from home, which means I wear what I like, can pet my dog throughout the day, don’t contend with traffic, and for better or worse, have all day access to my kitchen. All great, but it also means that sometimes the only person I see in the flesh each day is my husband.</p>
<p>I have to make an extra concerted effort to hang out with colleagues, so I’ve become more active in my local meetups and groups (shout out to<a href="https://www.meetup.com/Ladies-that-UX-Durham/" target="_blank" rel="external">Ladies that UX Durham</a>– love yall!) I also found I need to be more social during the week, even if that means going to a fitness class instead of biking solo or talking on the phone while I shop.</p>
<h3 id="What-services-will-you-provide"><a href="#What-services-will-you-provide" class="headerlink" title="What services will you provide?"></a>What services will you provide?</h3><p>I’ve been focused on research and strategy for most of my career. I won’t rehash the “<a href="http://community.uxmastery.com/t/forced-to-become-a-unicorn-has-that-happened-to-you/783/11" target="_blank" rel="external">Should I be a unicorn</a>?” or “<a href="http://uxmastery.com/ux-designers-do-not-need-to-code/" target="_blank" rel="external">Do designers need to code</a>?” debates, but I’ll admit that when I first starting freelancing, I was worried I wasn’t going to be able to find enough work without doing visual work. Turns out, I was totally wrong. Phew!</p>
<p><img src="http://img1.tuicool.com/BzMjMbA.jpg!web" alt=""></p>
<p>Don’t worry, you don’t need to be a unicorn to be a freelance UXer.</p>
<p>You absolutely don’t need to be a unicorn or try to tackle projects that aren’t your speciality. But it helps to have a broad set of experience and at least one area of deep expertise you can market and use to define your services. You can match what you’re good at and what you like to define the kind of projects you target, the projects you’re OK with taking, and what you will certainly turn down.</p>
<p>Clearly<a href="http://uxmastery.com/build-your-ux-personal-brand/" target="_blank" rel="external">defining your services and interests</a>are important because it tells other people what to turn to you for. if I know someone has great interaction design skills and tonnes of experience with financial products, I’ll suggest them anytime I see a project like that. If someone tells me they’ll do anything that comes their way, they probably won’t come to mind for any projects I know about.</p>
<h3 id="How-will-you-find-clients"><a href="#How-will-you-find-clients" class="headerlink" title="How will you find clients?"></a>How will you find clients?</h3><p>This is a question that I get asked time after time, and the answer is incredibly simple in concept but hard in practice:<strong>treat your clients and colleagues as you would users and provide them with a good experience working with you</strong>.</p>
<p>More specifically, you have to do good work and other people have to be willing to talk about it. This can either mean that your clients are pleased with your work and will re-hire you or tell other potential clients, or that your peers in UX like your work and can refer you when they need help or can’t take something on. It really is true that a huge amount of success in consulting is based on networking and who you know, but that only works to your advantage if the people you know have had a good experience working with you. Right now, every single one of my clients is someone I’ve previously worked with or have gotten a good reference.</p>
<p>This is where, once again, it helps to have a clearly defined, slightly unique set of skills or interests. There are tonnes of researchers and tonnes of designers, but if you’re known as a researcher who loves qualitative work and medical products, people will think of you whenever they come across that kind of project. Just be sure that you don’t define yourself too narrowly.</p>
<p>You can also use job boards to identify potential projects or try recruiting agencies, but I haven’t found either as fruitful as having my name passed on from a previous contact. More on finding freelance UX work<a href="https://www.linkedin.com/pulse/single-best-way-get-freelance-ux-work-amanda-stockwell?trk=v-feed&amp;lipi=urn%3Ali%3Apage%3Ad_flagship3_feed%3BWB86zkUbaQbxQN8f0Iqf%2Bw%3D%3D" target="_blank" rel="external">here</a>.</p>
<h3 id="Are-you-really-suited-for-all-that"><a href="#Are-you-really-suited-for-all-that" class="headerlink" title="Are you really suited for all that?"></a>Are you really suited for all that?</h3><p>Even if all the potential pros sound amazing to you and you have the skills and network to pull off freelancing, take a moment to reflect on your personality and soft skills.</p>
<p>Are you detailed, organised, and willing to juggle many different client requests and manage your own schedule? Are you a natural risk-taker who can cope well with slow periods or lack of viable work? Are you assertive enough to negotiate terms for yourself? Do you mind working by yourself a lot?</p>
<p>There’s a lot to think about before leaving the security of a full-time job. I love freelancing, but it’s worth carefully considering the pros and cons and your skillset and personality before taking the leap. Best wishes for whichever path you choose! </p>
<p>Do you have experience or tips on freelancing for UX professionals? Leave a comment on the blog or in the forums! </p>
<p>Source: <a href="http://www.tuicool.com/articles/hit/3qIJryE" target="_blank" rel="external">http://uxmastery.com/freelancing-ux-career/</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;I’ve been working in for UX for about a decade and freelanced on and off for about five years. Last year, I started consulting full time 
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>AutoWiring Spring Beans Into Classes Not Managed by Spring</title>
    <link href="https://gmagon.com/blog/2017/07/05/autowiring-spring-beans-into-classes-not-managed-by-spring/"/>
    <id>https://gmagon.com/blog/2017/07/05/autowiring-spring-beans-into-classes-not-managed-by-spring/</id>
    <published>2017-07-05T00:00:00.000Z</published>
    <updated>2017-07-05T09:44:47.954Z</updated>
    
    <content type="html"><![CDATA[<p>In my previous article<a href="https://dzone.com/articles/jpa-auditing-automatically-persisting-audit-logs" target="_blank" rel="external">JPA Auditing: Persisting Audit Logs Automatically using EntityListeners</a>, I discussed how we can use Spring Data JPA automate auditing and automatically create audit logs or history records and update CreatedBy, CreatedDate, LastModifiedBy, LastModifiedDate properties.</p>
<p>So in order to save history records for our File entity, we were trying to autowire EntityManager inside our FileEntityListener class before we learned that we could not do that.</p>
<p>We cannot inject any Spring-managed bean in the EntityListener because EntityListeners are instantiated by JPA before Spring injects anything into it. EntityListeners are not managed by Spring so Spring cannot inject any Spring-managed bean, e.g. EntityManager in the EntityListeners.</p>
<p>And this is not just the case with EntityListeners, you cannot autowire any Spring-managed bean into another class (i.e. utility classes) not managed by Spring.</p>
<p>Because this is a very common problem that can also arise with other classes, I tried to come out with a common solution that will not just solve this problem but will also help us get Spring-managed beans in other places.</p>
<p><img src="http://img1.tuicool.com/zQV3IzI.png!web" alt=""></p>
<p>So, have created a utility class to fetch any bean according to our requirements.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div></pre></td><td class="code"><pre><div class="line">@Service</div><div class="line">public</div><div class="line">class</div><div class="line">BeanUtil</div><div class="line">implements</div><div class="line">ApplicationContextAware</div><div class="line">&#123;</div><div class="line"></div><div class="line">    </div><div class="line">private</div><div class="line">static</div><div class="line"> ApplicationContext context;</div><div class="line"></div><div class="line">    </div><div class="line">@Override</div><div class="line">public</div><div class="line">void</div><div class="line">setApplicationContext</div><div class="line">(ApplicationContext applicationContext)</div><div class="line">throws</div><div class="line"> BeansException </div><div class="line">&#123;</div><div class="line">        context = applicationContext;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    </div><div class="line">public</div><div class="line">static</div><div class="line">&lt;</div><div class="line">T</div><div class="line">&gt;</div><div class="line">T </div><div class="line">getBean</div><div class="line">(Class</div><div class="line">&lt;</div><div class="line">T</div><div class="line">&gt;</div><div class="line"> beanClass)</div><div class="line">&#123;</div><div class="line">        </div><div class="line">return</div><div class="line"> context.getBean(beanClass);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>Now, to get any bean in a class, we will just need to call BeanUtil.getBean(YourClass.class) and pass the class type to it. Then, we will get the bean.</p>
<p>For example, in our case, we were trying to get the EntityManager bean inside FileEntityListener. We can simply do that by writing BeanUtil.getBean(EntityManager.class).</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">public</div><div class="line">class</div><div class="line"> FileEntityListener &#123;</div><div class="line"></div><div class="line">    </div><div class="line">private</div><div class="line">void</div><div class="line">perform</div><div class="line">(File target, Action action)</div><div class="line">&#123;</div><div class="line">        EntityManager entityManager = BeanUtil.getBean(EntityManager.</div><div class="line">class</div><div class="line">);</div><div class="line">        entityManager.persist(</div><div class="line">new</div><div class="line"> FileHistory(target, action));</div><div class="line">    &#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>You can find the complete code in this<a href="https://github.com/njnareshjoshi/articles/tree/master/spring-data-jpa-auditing" target="_blank" rel="external">GitHub Repository, </a>and please feel free to provide your valuable feedback.</p>
<p>Source: <a href="http://www.tuicool.com/articles/hit/zINby2B" target="_blank" rel="external">https://dzone.com/articles/autowiring-spring-beans-into-classes-not-managed-by-spring</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;In my previous article&lt;a href=&quot;https://dzone.com/articles/jpa-auditing-automatically-persisting-audit-logs&quot; target=&quot;_blank&quot; rel=&quot;external
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>After Nonstop Games closed, its employees founded Mighty Bear Games; today it raised US$775K</title>
    <link href="https://gmagon.com/blog/2017/07/05/after-nonstop-games-closed-its-employees-founded-mighty-bear-games-today-it-raised-us775k/"/>
    <id>https://gmagon.com/blog/2017/07/05/after-nonstop-games-closed-its-employees-founded-mighty-bear-games-today-it-raised-us775k/</id>
    <published>2017-07-05T00:00:00.000Z</published>
    <updated>2017-07-05T09:44:47.951Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Mighty-Bear-Games-will-focus-on-developing-mobile-app-games"><a href="#Mighty-Bear-Games-will-focus-on-developing-mobile-app-games" class="headerlink" title="Mighty Bear Games will focus on developing mobile app games"></a>Mighty Bear Games will focus on developing mobile app games</h2><p><img src="http://img0.tuicool.com/y2uMrqj.png!web" alt=""></p>
<p>Nonstop Games was a Singapore-based mobile games studio run by Finnish developers. Their hit game was strategy title Heroes of Honor.</p>
<p>In 2014, it was acquired by Candy Crush maker King forabout US$16 million. Two years later, Nonstop Games shuttered.</p>
<p>But the journey for its employees did not end there. They pressed on, scouring the game development landscape for new compatriots to join their next adventure. Along the way, they recruited talents from renowned gaming studios such as Ubisoft, EA and LucasArts.</p>
<p>With renewed vigour in their hearts and a hardy band of developers to boot, the Nonstop Games alumni roared back with a spanking new enterprise.</p>
<p>They called it Mighty Bear Games.</p>
<p>And today, Mighty Bear raised US$775,000 in a round led by Global Founders Capital, the venture capital arm of Rocket Internet.</p>
<p>Mighty Bear will use the newly-raised financing to develop its new mobile MMORPG (Massive Multiplayer Online Roleplaying Game). Details of the game have not been disclosed.</p>
<p>It is interesting to note that despite receiving offers from the US and Europe — two markets with long history of producing top rated games — the Nonstop Games alumni chose to, once again, base their gaming studio in Singapore.</p>
<p>“One of the interesting developments we’ve seen is that Singapore-based studios are starting to gain traction with their own IP,” says co-founder and CEO Simon Davis, in an interview with<strong>e27</strong>.</p>
<p>“We see a trend developing where game development studios in Singapore are now being founded by guys like us with 5, or even 10+ years experience working in big AAA studios,” he adds. “This wouldn’t have been possible if the government hadn’t made such an effort bringing in top multi-national studios over the past few years — many of us on the team, including myself, directly benefited from that.”</p>
<h2 id="Keeping-an-eye-on-gaming-trends"><a href="#Keeping-an-eye-on-gaming-trends" class="headerlink" title="Keeping an eye on gaming trends"></a><strong>Keeping an eye on gaming trends</strong></h2><p>While Davis says Mighty Bear is platform-agnostic, it will still be focussing on making mobile games. But he does not rule out building games for consoles or desktops in the future.</p>
<p>The studio will also target the multiplayer gaming market.</p>
<p>Also Read:<a href="https://e27.co/curious-south-korea-gaming-culture-closer-look-popularity-esports-reveals-trends-20170525/" target="_blank" rel="external">Curious about the South Korea gaming culture? A closer look at the popularity of esports reveals some trends</a></p>
<p>“We love playing multiplayer games, and we feel there’s a huge gap in the market for online multiplayer games which are not completely skewed toward your typical hardcore gamer,” says Davis.</p>
<p>“This is an area that’s really interesting, because the challenge is to create games which have a competitive element, but are still accessible to people who may not consider themselves hardcore gamers.”</p>
<p>The Mighty Bear team may eat and breathe games, but they are not just button-mashing geeks; as a creative force, they also take inspiration from all other forms of art (yes, gaming is an art too).</p>
<p>“I studied music so that makes approaching the creative process a bit different. We also read a lot which is a great way to get new ideas and approaches. Finally, we watch a lot of movies together – movie nights and ‘Popcorn Fridays’ are two Mighty Bear traditions,” says Davis.</p>
<p>“Other than that we’re all hardcore gamers. We have a weekly ‘gaming club’ where we all sit down and compare notes on a pre-agreed game and discuss what we liked and what we didn’t about it.”</p>
<p>So what are Davis’s all-time favourite games?</p>
<p>“I’d say that Super Mario 64 was the first game that really blew me away, Street Fighter II was the first game that got me hooked on multiplayer. For scale and awe it might be The Legend of Zelda: The Breath of the Wild or Shadow of the Colossus. Candy Crush has the perfect puzzle combination of skill, luck, and amazing player feedback, and lately. I’ve been absolutely loving Brawl Stars on mobile.”</p>
<p>The mobile app market is a lucrative industry, it is projected to hit US$189 billion with mobile gaming accounting for more than<a href="https://venturebeat.com/2016/11/02/mobile-app-market-to-grow-270-to-189-billion-by-2020-with-games-accounting-for-55/" target="_blank" rel="external">half the share.</a></p>
<p>In Singapore’s backyard, China’s mobile games market collected<a href="http://www.gamesindustry.biz/articles/2016-05-03-chinese-mobile-market-is-now-the-most-valuable-in-the-world" target="_blank" rel="external">US$7 billion in revenue in 2015</a>. This figure is set to continue to grow exponentially as mobile usage increases and more games are developed.</p>
<p>If Mighty Bear can claw out its own niche in this increasingly saturated space, the sweet dew of revenue will surely come forth easily.</p>
<p>Source: <a href="http://www.tuicool.com/articles/hit/eERRZ3R" target="_blank" rel="external">http://e27.co/nonstop-games-closed-employees-founded-mighty-bear-games-today-raised-us775k-20170704/</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Mighty-Bear-Games-will-focus-on-developing-mobile-app-games&quot;&gt;&lt;a href=&quot;#Mighty-Bear-Games-will-focus-on-developing-mobile-app-games&quot; 
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Top Smartphones Under Php20k (Mid-2017)</title>
    <link href="https://gmagon.com/blog/2017/07/05/top-smartphones-under-php20k-mid-2017/"/>
    <id>https://gmagon.com/blog/2017/07/05/top-smartphones-under-php20k-mid-2017/</id>
    <published>2017-07-05T00:00:00.000Z</published>
    <updated>2017-07-05T09:44:47.963Z</updated>
    
    <content type="html"><![CDATA[<p>Over the last two days, we’ve shared our lists of the top smartphones of mid-2017 with price ranges of above Php30k and above Php20k. Today, we look at the mid-rangers. All of the phones mentioned in this list are no less than Php10k and no more than Php20k. Let’s get started.</p>
<p><img src="http://img2.tuicool.com/2UBbq2Z.png!web" alt=""></p>
<p>Author’s note: The smartphones listed below are those that have officially launched in the Philippines from January to June 2017. The list is arranged by price from highest to lowest.</p>
<h3 id="Samsung-Galaxy-A5-2017"><a href="#Samsung-Galaxy-A5-2017" class="headerlink" title="Samsung Galaxy A5 (2017)"></a><a href="http://www.yugatech.com/mobile/samsung-galaxy-a7-and-a5-2017-gets-ph-price/#OipiIkY4KAT5OsTq.97" target="_blank" rel="external">Samsung Galaxy A5 (2017)</a></h3><p>Early this year, Samsung launched their new A-series phones in the country, specifically the<strong>Galaxy A7 (2017)</strong>and the <strong>Galaxy A5 (2017)</strong>. While not much as changed here in size and form factor, under the hood, the new A5 sports a faster octa-core CPU, more RAM, and an improved camera.</p>
<p><img src="http://img0.tuicool.com/mAR7Fz7.jpg!web" alt=""></p>
<p>Samsung Galaxy A5 (2017) specs:</p>
<p>5.2-inch Super AMOLED display @ 1920 x 1080 pixels</p>
<p>1.9GHz octa-core processor</p>
<p>3GB RAM</p>
<p>32GB internal storage</p>
<p>Expandable via microSD card, up to 256GB</p>
<p>16-megapixel f/1.9 autofocus rear camera w/ LED flash</p>
<p>16-megapixel f/1.9 front-facing camera</p>
<p>4G LTE Cat.6</p>
<p>Wi-Fi 802.11 a/b/g/n/ac</p>
<p>Bluetooth v 4.2</p>
<p>NFC</p>
<p>ANT+</p>
<p>USB Type-C</p>
<p>Fingerprint sensor</p>
<p>IP68 water-resistant</p>
<p>3000mAh battery w/ fast charging</p>
<p>Android 6.0 Marshmallow</p>
<p>Price: Php19,990</p>
<h3 id="Vivo-V5-Plus"><a href="#Vivo-V5-Plus" class="headerlink" title="Vivo V5 Plus"></a><a href="http://www.yugatech.com/mobile/vivo-v5-plus-review/#ZVowhOAh803kUjTe.97" target="_blank" rel="external">Vivo V5 Plus</a></h3><p>Packed with 20MP and 8MP dual front cameras, this is truly a self-portrait centered smartphone. That is not to say that the great cameras are all it has going for it, as it has a beefy octa-core CPU, 4GB of RAM, 64GB internal storage, and above average battery life.</p>
<p><img src="http://img1.tuicool.com/zE7JVf7.jpg!web" alt=""></p>
<p>Vivo V5 Plus specs:</p>
<p>5.5-inch Full HD IPS display, 401ppi</p>
<p>2.5D Corning Gorilla Glass 5</p>
<p>2.5GHz Qualcomm Snapdragon 625 octa-core processor</p>
<p>Adreno 506 GPU</p>
<p>4GB RAM</p>
<p>64GB internal storage</p>
<p>16-megapixel f/2.0 autofocus rear camera w/ LED flash</p>
<p>20MP f/2.0 + 8MP front-facing camera</p>
<p>Dual SIM 4G LTE</p>
<p>Wi-Fi 802.11ac</p>
<p>Bluetooth 4.0</p>
<p>GPS w/ A-GPS, GLONASS, BeiDou</p>
<p>Fingerprint scanner</p>
<p>AK4376 Hi-Fi chip</p>
<p>USB OTG</p>
<p>Gyroscope, E-compass</p>
<p>3,160mAh non-removable battery w/ fast charging</p>
<p>Android 6.0 Marshmallow w/ Funtouch OS 3.0</p>
<p>152.58 x 74.00 x 7.26 mm</p>
<p>158.6 g</p>
<p>Price: Php19,990</p>
<h3 id="Nokia-6"><a href="#Nokia-6" class="headerlink" title="Nokia 6"></a><a href="http://www.yugatech.com/mobile/nokia-6-review/#wMIFjfO1FwWJE07K.97" target="_blank" rel="external">Nokia 6</a></h3><p>With Nokia finally launching a proper full-featured Android smartphone this year, it has proven to be worth the wait. The<strong>Nokia 6</strong>wasunveiled at the Mobile World Congress 2017, and has a beautiful design, respectable specs, and Android 7.0 Nougat out of the box.</p>
<p><img src="http://img2.tuicool.com/qEfUnu7.jpg!web" alt=""></p>
<p>Nokia 6 specs:</p>
<p>5.5-inch IPS LCD @ 1920 x 1080 pixels, 401ppi</p>
<p>2.5D Corning Gorilla Glass 3</p>
<p>Qualcomm Snapdragon 430 1.4GHz octa-core processor</p>
<p>Adreno 505 graphics</p>
<p>4GB RAM</p>
<p>64GB internal storage</p>
<p>Expandable via microSD, up to 128GB (Uses SIM 2)</p>
<p>16MP PDAF rear camera w/ dual-tone flash</p>
<p>8MP front-facing camera</p>
<p>4G LTE</p>
<p>Dual-SIM</p>
<p>WiFi 802.11ac</p>
<p>Bluetooth 4.1</p>
<p>GPS, A-GPS, GLONASS</p>
<p>Fingerprint scanner</p>
<p>Gyroscope sensor</p>
<p>USB OTG support</p>
<p>3,000mAh Li-Ion battery</p>
<p>Fast charging support</p>
<p>Android 7.0 Nougat</p>
<p>154 x 75.8 x 7.85 mm</p>
<p>169 g</p>
<p>Price: Php18,590</p>
<h3 id="OPPO-F3"><a href="#OPPO-F3" class="headerlink" title="OPPO F3"></a><a href="http://www.yugatech.com/mobile/oppo-f3-review/#0rjRZbUDeAZoF8UM.97" target="_blank" rel="external">OPPO F3</a></h3><p>Another phone for those who value high-quality selfies, here we have the more affordable offering to the OPPO F3 Plus. Like the V5 Plus mentioned earlier, it sports dual front cameras with wide and narrow fields of view.</p>
<p><img src="http://img0.tuicool.com/RBviaim.jpg!web" alt=""></p>
<p>OPPO F3 specs:</p>
<p>5.5-inch In-Cell IPS LCD display @ 1920 x 1080 pixels, 401ppi</p>
<p>Corning Gorilla Glass 5</p>
<p>MediaTek MT6750T 1.5GHz octa-core CPU</p>
<p>Mali T860 GPU</p>
<p>4GB RAM</p>
<p>64GB internal storage</p>
<p>Expandable via microSD, up to 128GB</p>
<p>13MP PDAF rear camera w/ LED flash</p>
<p>16MP + 8MP 120-degree wide-angle front cameras</p>
<p>Dual SIM (Nano + Nano)</p>
<p>4G LTE</p>
<p>WiFi 802.11a/b/g/n</p>
<p>Bluetooth 4.1</p>
<p>GPS w/ a-GPS</p>
<p>Fingerprint scanner</p>
<p>Android 6.0 Marshmallow with ColorOS 3.1</p>
<p>3200mAh non-removable battery</p>
<p>75.2 x 153.3 x 7.3 mm</p>
<p>153 g</p>
<p>Price: Php16,990</p>
<h3 id="Xiaomi-Mi-Max-2"><a href="#Xiaomi-Mi-Max-2" class="headerlink" title="Xiaomi Mi Max 2"></a><a href="http://www.yugatech.com/mobile/xiaomi-mi-max-2-first-impressions/#l5u7KzvxtHXXjRp4.97" target="_blank" rel="external">Xiaomi Mi Max 2</a></h3><p>With a 6.44-inch display, this is definitely the biggest phone on this list. Great battery life, solid specs, decent cameras, and Android 7.0 Nougat support are what this over-sized smartphone has going for it.</p>
<p><img src="http://img2.tuicool.com/MRN7fmj.jpg!web" alt=""></p>
<p>Xiaomi Mi Max 2 specs:</p>
<p>6.44-inch IPS LCD @ 1920 x 1080 pixels, 342ppi</p>
<p>Qualcomm Snapdragon 625 octa-core CPU</p>
<p>Adreno 506 GPU</p>
<p>4GB RAM</p>
<p>64GB/128GB internal storage</p>
<p>Expandable via microSD, up to 128GB (Uses SIM 2)</p>
<p>12MP Sony IMX386 PDAF rear camera w/ LED flash</p>
<p>5MP wide-angle front camera</p>
<p>Dual SIM (Nano)</p>
<p>LTE-A</p>
<p>Wi-Fi 802.11ac, dual-band</p>
<p>Bluetooth 4.2</p>
<p>GPS w/ A-GPS, GLONASS</p>
<p>NFC</p>
<p>IR blaster</p>
<p>Fingerprint scanner</p>
<p>Gyroscope</p>
<p>Stereo speakers</p>
<p>5300mAh non-removable battery w/ Quick Charge 3.0</p>
<p>Android 7.0 Nougat w/ MIUI 8</p>
<p>Price: Php15,500 (Widget City)</p>
<h3 id="Sony-Xperia-XA1"><a href="#Sony-Xperia-XA1" class="headerlink" title="Sony Xperia XA1"></a><a href="http://www.yugatech.com/mobile/sony-xperia-xa1-first-impressions/#z1IXWx5eYlA5C7D5.97" target="_blank" rel="external">Sony Xperia XA1</a></h3><p>One of Sony’s newest mid-range phones is the XA1 Ultra. It has the classic Xperia look: Flat sides and sharp corners and features a “borderless edge-to-edge” HD display. The phone also boasts Image Enhance Technology and packs a great punch in its camera.</p>
<p><img src="http://img1.tuicool.com/INZN3uR.jpg!web" alt=""></p>
<p>Sony Xperia XA1 specs:</p>
<p>5-inch HD display w/ Image Enhance Technology</p>
<p>2.3GHz MediaTek Helio P20 octa-core CPU</p>
<p>Mali T880 MP2 900MHz GPU</p>
<p>3GB RAM</p>
<p>32GB storage</p>
<p>microSD up to 256GB</p>
<p>23MP 1/2.3-inch Exmor RS rear camera, Hybrid AF, SteadyShot, LED flash</p>
<p>8MP 1/4-inch Exmor R AF front camera, SteadyShot</p>
<p>4G LTE</p>
<p>WiFi</p>
<p>Bluetooth</p>
<p>GPS, A-GPS</p>
<p>Android 7.0 Nougat</p>
<p>2,300mAh battery w/ Qnovo Adaptive Charging</p>
<p>145 x 67 x 8mm</p>
<p>143 g</p>
<p>Price: Php15,500 (Widget City)</p>
<h3 id="Huawei-GR5-2017"><a href="#Huawei-GR5-2017" class="headerlink" title="Huawei GR5 (2017)"></a><a href="http://www.yugatech.com/mobile/video-huawei-gr5-2017-review/#PGz2DVJwD9URISyl.97" target="_blank" rel="external">Huawei GR5 (2017)</a></h3><p>A refresh of last year’s model, the current model packs an improved design and hardware configuration. It has taken a page from the P9 series with its dual-camera setup.</p>
<p><img src="http://img0.tuicool.com/FbYB3mN.jpg!web" alt=""></p>
<p>Huawei GR5 specs:</p>
<p>5.5-inch IPS LCD display @ 1920 x 1080 pixels</p>
<p>HiSilicon Kirin 655 2.1GHz octa-core processor</p>
<p>4 x ARM Cortex A53 @ 2.1GHz</p>
<p>4 x ARM Cortex A53 @ 1.7 GHz</p>
<p>Mali-T830 MP2</p>
<p>3GB RAM</p>
<p>32GB internal storage</p>
<p>Up to 128GB via microSD</p>
<p>Dual rear cameras (12MP/2MP)</p>
<p>8MP wide-angle front camera</p>
<p>Wi-Fi 802.11b/g/n</p>
<p>Bluetooth 4.1</p>
<p>4G LTE</p>
<p>Fingerprint scanner</p>
<p>Android 6.0 Marshmallow with EMUI 4.1</p>
<p>3,340mAh Li-Ion battery</p>
<p>Price: Php13,990</p>
<p>With that, it’s a wrap. Did we miss anything? Please do let us know in the comments down below.</p>
<p>Source: <a href="http://www.tuicool.com/articles/hit/fMzqMnQ" target="_blank" rel="external">http://www.yugatech.com/mobile/top-smartphones-under-php20k-mid-2017/</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Over the last two days, we’ve shared our lists of the top smartphones of mid-2017 with price ranges of above Php30k and above Php20k. Tod
    
    </summary>
    
    
  </entry>
  
</feed>
